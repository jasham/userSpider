{"ast":null,"code":"import _Container from \"@material-ui/core/Container\";\nimport _TextField from \"@material-ui/core/TextField\";\nimport _Box from \"@material-ui/core/Box\";\nimport _Switch from \"@material-ui/core/Switch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/map/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from 'react-google-maps';\nimport Geocode from 'react-geocode';\nimport Autocomplete from 'react-google-autocomplete';\nimport PropTypes from 'prop-types';\nimport Text from '../text';\nimport Button from '../button';\nimport { getCookie } from '../../lib/utility/apiWrapper';\nimport { GlobalContext } from '../../../pages/_app';\nimport { LOADING_BAR_STATUS, CLOSE_MAP, ADDRESS_LIST } from '../../lib/utility/type';\nimport { addAddress } from '../../lib/services/address';\nGeocode.setApiKey('AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw');\nGeocode.enableDebug();\n\nvar styles = function styles(theme) {\n  return {\n    root: {},\n    autoComplete: {\n      // backgroundColor : \"red\",\n      width: '100%',\n      padding: 12,\n      '&:focus': {\n        outline: '1px solid transparent',\n        border: '2px solid #34A76C',\n        borderRadius: 5\n      }\n    },\n    autoCompWrapper: {\n      marginBottom: 20,\n      marginTop: 20\n    },\n    useCurrent: {\n      display: 'flex',\n      alignItems: 'center',\n      marginBottom: 10\n    }\n  };\n};\n\nvar MyMapComponent = function MyMapComponent(_ref) {\n  _s();\n\n  var classes = _ref.classes,\n      lat = _ref.lat,\n      lng = _ref.lng;\n\n  var _useState = useState({\n    lat: lat,\n    lng: lng\n  }),\n      mapPosition = _useState[0],\n      setMapPosition = _useState[1];\n\n  var _useState2 = useState({\n    lat: lat,\n    lng: lng\n  }),\n      markerPosition = _useState2[0],\n      setMarkerPosition = _useState2[1];\n\n  var _useState3 = useState(null),\n      address = _useState3[0],\n      setAddress = _useState3[1];\n\n  var _useState4 = useState(null),\n      address2 = _useState4[0],\n      setAddress2 = _useState4[1];\n\n  var _useState5 = useState(false),\n      showCurrLocation = _useState5[0],\n      setShowCurrentLocation = _useState5[1];\n\n  var globalContext = useContext(GlobalContext);\n\n  var onInfoWindowClose = function onInfoWindowClose() {};\n\n  var onCurrentLocation = function onCurrentLocation() {\n    if (!showCurrLocation) {\n      var temp;\n      globalContext.allDispatch({\n        type: LOADING_BAR_STATUS,\n        value: true\n      });\n      navigator.geolocation.getCurrentPosition(function (position) {\n        temp = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        Geocode.fromLatLng(temp.lat, temp.lng).then(function (response) {\n          setAddress(response.results[0].formatted_address);\n          setMapPosition(temp);\n          setMarkerPosition(temp);\n          globalContext.allDispatch({\n            type: LOADING_BAR_STATUS,\n            value: false\n          });\n        }, function () {});\n      });\n    } else {\n      setAddress(null);\n    }\n\n    setShowCurrentLocation(!showCurrLocation);\n  };\n\n  var onMarkerDragEnd = function onMarkerDragEnd(event) {\n    var newLat = event.latLng.lat();\n    var newLng = event.latLng.lng();\n    Geocode.fromLatLng(newLat, newLng).then(function (response) {\n      setAddress(response.results[0].formatted_address); // const address = response.results[0].formatted_address,\n      //       addressArray =  response.results[0].address_components\n\n      setMapPosition({\n        lat: newLat,\n        lng: newLng\n      });\n      setMarkerPosition({\n        lat: newLat,\n        lng: newLng\n      });\n    }, function () {});\n  };\n\n  var onPlaceSelected = function onPlaceSelected(place) {\n    var latValue = place.geometry.location.lat();\n    var lngValue = place.geometry.location.lng();\n    setAddress(place.formatted_address);\n    setMapPosition({\n      lat: latValue,\n      lng: lngValue\n    });\n    setMarkerPosition({\n      lat: latValue,\n      lng: lngValue\n    });\n  };\n\n  var onChangeAddress = function onChangeAddress(e) {\n    setAddress(e.target.value);\n  };\n\n  var onChangeAddress2 = function onChangeAddress2(e) {\n    setAddress2(e.target.value);\n  };\n\n  var onAdd = function onAdd() {\n    globalContext.allDispatch({\n      type: LOADING_BAR_STATUS,\n      value: true\n    });\n\n    if (address) {\n      var tempVal = {\n        address1: address,\n        address2: address2,\n        latitude: markerPosition.lat,\n        longitude: markerPosition.lng,\n        user_id: getCookie('user_id')\n      };\n      addAddress(tempVal).then(function (data) {\n        globalContext.allDispatch({\n          type: LOADING_BAR_STATUS,\n          value: false\n        });\n        var tempArr = globalContext.state.addressList;\n        tempArr.splice(0, 0, data.data);\n        console.log('Ginger mangita', data); // ADDRESS_LIST\n\n        globalContext.allDispatch({\n          type: ADDRESS_LIST,\n          value: tempArr\n        });\n        globalContext.allDispatch({\n          type: CLOSE_MAP,\n          value: false\n        });\n      });\n    }\n  };\n\n  var AsyncMap = withScriptjs(withGoogleMap(function (props) {\n    return /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 15,\n      defaultCenter: {\n        lat: mapPosition.lat,\n        lng: mapPosition.lng\n      },\n      children: [/*#__PURE__*/_jsxDEV(InfoWindow, {\n        onClose: onInfoWindowClose,\n        position: {\n          lat: markerPosition.lat + 0.0018,\n          lng: markerPosition.lng\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              padding: 0,\n              margin: 0\n            },\n            children: address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Marker, {\n        name: \"Dolores park\",\n        draggable: true,\n        onDragEnd: onMarkerDragEnd,\n        position: {\n          lat: markerPosition.lat,\n          lng: markerPosition.lng\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Marker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(_Container, {\n        children: [/*#__PURE__*/_jsxDEV(_Box, {\n          className: classes.useCurrent,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            variant: \"body2\",\n            style: {\n              marginRight: 10,\n              marginBottom: 0\n            },\n            ffamily: \"Poppins\",\n            children: \"Use Current Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(_Switch, {\n            checked: showCurrLocation,\n            onChange: onCurrentLocation,\n            name: \"checkedA\",\n            inputProps: {\n              'aria-label': 'secondary checkbox'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(_Box, {\n          className: classes.autoCompWrapper,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            onPlaceSelected: onPlaceSelected,\n            className: classes.autoComplete,\n            types: ['(regions)'],\n            placeholder: address,\n            componentRestrictions: {\n              country: 'in'\n            },\n            disabled: showCurrLocation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(_Box, {\n          style: {\n            marginBottom: 15\n          },\n          children: /*#__PURE__*/_jsxDEV(_TextField, {\n            disabled: true,\n            id: \"outlined-basic\",\n            label: \"Address 1\",\n            variant: \"outlined\",\n            size: \"small\",\n            style: {\n              width: '100%'\n            },\n            value: address,\n            onChange: onChangeAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(_Box, {\n          style: {\n            marginBottom: 15\n          },\n          children: /*#__PURE__*/_jsxDEV(_TextField, {\n            id: \"outlined-multiline-static\",\n            label: \"Address 2\",\n            multiline: true,\n            rows: 2,\n            variant: \"outlined\",\n            style: {\n              width: '100%'\n            },\n            onChange: onChangeAddress2,\n            value: address2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(_Box, {\n          style: {\n            paddingBottom: 20\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onAdd,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, _this);\n  }));\n  return /*#__PURE__*/_jsxDEV(AsyncMap, {\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 23\n    }, _this),\n    containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }, _this),\n    mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"30%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 19\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MyMapComponent, \"nVkuNJp0pgTZnZy1p3usHF5ZlJo=\");\n\n_c = MyMapComponent;\nMyMapComponent.propTypes = {\n  lat: PropTypes.number,\n  lng: PropTypes.number,\n  // eslint-disable-next-line react/forb,id-prop-types\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(MyMapComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyMapComponent\");","map":{"version":3,"sources":["/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/map/index.js"],"names":["React","useState","useContext","withStyles","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","Geocode","Autocomplete","PropTypes","Text","Button","getCookie","GlobalContext","LOADING_BAR_STATUS","CLOSE_MAP","ADDRESS_LIST","addAddress","setApiKey","enableDebug","styles","theme","root","autoComplete","width","padding","outline","border","borderRadius","autoCompWrapper","marginBottom","marginTop","useCurrent","display","alignItems","MyMapComponent","classes","lat","lng","mapPosition","setMapPosition","markerPosition","setMarkerPosition","address","setAddress","address2","setAddress2","showCurrLocation","setShowCurrentLocation","globalContext","onInfoWindowClose","onCurrentLocation","temp","allDispatch","type","value","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fromLatLng","then","response","results","formatted_address","onMarkerDragEnd","event","newLat","latLng","newLng","onPlaceSelected","place","latValue","geometry","location","lngValue","onChangeAddress","e","target","onChangeAddress2","onAdd","tempVal","address1","user_id","data","tempArr","state","addressList","splice","console","log","AsyncMap","props","margin","marginRight","country","paddingBottom","height","propTypes","number","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Box, Container, Switch, TextField } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  withGoogleMap,\n  GoogleMap,\n  withScriptjs,\n  InfoWindow,\n  Marker,\n} from 'react-google-maps';\nimport Geocode from 'react-geocode';\nimport Autocomplete from 'react-google-autocomplete';\nimport PropTypes from 'prop-types';\nimport Text from '../text';\nimport Button from '../button';\nimport { getCookie } from '../../lib/utility/apiWrapper';\nimport { GlobalContext } from '../../../pages/_app';\nimport {\n  LOADING_BAR_STATUS,\n  CLOSE_MAP,\n  ADDRESS_LIST,\n} from '../../lib/utility/type';\nimport { addAddress } from '../../lib/services/address';\n\nGeocode.setApiKey('AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw');\nGeocode.enableDebug();\n\nconst styles = (theme) => ({\n  root: {},\n  autoComplete: {\n    // backgroundColor : \"red\",\n    width: '100%',\n    padding: 12,\n    '&:focus': {\n      outline: '1px solid transparent',\n      border: '2px solid #34A76C',\n      borderRadius: 5,\n    },\n  },\n  autoCompWrapper: {\n    marginBottom: 20,\n    marginTop: 20,\n  },\n  useCurrent: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n});\n\nconst MyMapComponent = ({ classes, lat, lng }) => {\n  const [mapPosition, setMapPosition] = useState({ lat, lng });\n  const [markerPosition, setMarkerPosition] = useState({ lat, lng });\n  const [address, setAddress] = useState(null);\n  const [address2, setAddress2] = useState(null);\n  const [showCurrLocation, setShowCurrentLocation] = useState(false);\n  const globalContext = useContext(GlobalContext);\n\n  const onInfoWindowClose = () => {};\n\n  const onCurrentLocation = () => {\n    if (!showCurrLocation) {\n      let temp;\n      globalContext.allDispatch({\n        type: LOADING_BAR_STATUS,\n        value: true,\n      });\n      navigator.geolocation.getCurrentPosition((position) => {\n        temp = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        };\n        Geocode.fromLatLng(temp.lat, temp.lng).then(\n          (response) => {\n            setAddress(response.results[0].formatted_address);\n            setMapPosition(temp);\n            setMarkerPosition(temp);\n            globalContext.allDispatch({\n              type: LOADING_BAR_STATUS,\n              value: false,\n            });\n          },\n          () => {},\n        );\n      });\n    } else {\n      setAddress(null);\n    }\n    setShowCurrentLocation(!showCurrLocation);\n  };\n\n  const onMarkerDragEnd = (event) => {\n    const newLat = event.latLng.lat();\n    const newLng = event.latLng.lng();\n\n    Geocode.fromLatLng(newLat, newLng).then(\n      (response) => {\n        setAddress(response.results[0].formatted_address);\n        // const address = response.results[0].formatted_address,\n        //       addressArray =  response.results[0].address_components\n        setMapPosition({ lat: newLat, lng: newLng });\n        setMarkerPosition({ lat: newLat, lng: newLng });\n      },\n      () => {},\n    );\n  };\n\n  const onPlaceSelected = (place) => {\n    const latValue = place.geometry.location.lat();\n    const lngValue = place.geometry.location.lng();\n    setAddress(place.formatted_address);\n    setMapPosition({ lat: latValue, lng: lngValue });\n    setMarkerPosition({ lat: latValue, lng: lngValue });\n  };\n\n  const onChangeAddress = (e) => {\n    setAddress(e.target.value);\n  };\n\n  const onChangeAddress2 = (e) => {\n    setAddress2(e.target.value);\n  };\n\n  const onAdd = () => {\n    globalContext.allDispatch({\n      type: LOADING_BAR_STATUS,\n      value: true,\n    });\n    if (address) {\n      const tempVal = {\n        address1: address,\n        address2,\n        latitude: markerPosition.lat,\n        longitude: markerPosition.lng,\n        user_id: getCookie('user_id'),\n      };\n      addAddress(tempVal).then((data) => {\n        globalContext.allDispatch({\n          type: LOADING_BAR_STATUS,\n          value: false,\n        });\n        const tempArr = globalContext.state.addressList;\n        tempArr.splice(0, 0, data.data);\n        console.log('Ginger mangita', data);\n        // ADDRESS_LIST\n        globalContext.allDispatch({\n          type: ADDRESS_LIST,\n          value: tempArr,\n        });\n        globalContext.allDispatch({\n          type: CLOSE_MAP,\n          value: false,\n        });\n      });\n    }\n  };\n  const AsyncMap = withScriptjs(\n    withGoogleMap((props) => (\n      <GoogleMap\n        defaultZoom={15}\n        defaultCenter={{ lat: mapPosition.lat, lng: mapPosition.lng }}\n      >\n        {/* InfoWindow on top of marker */}\n        <InfoWindow\n          onClose={onInfoWindowClose}\n          position={{\n            lat: markerPosition.lat + 0.0018,\n            lng: markerPosition.lng,\n          }}\n        >\n          <div>\n            <span style={{ padding: 0, margin: 0 }}>{address}</span>\n          </div>\n        </InfoWindow>\n        {/* Marker */}\n        <Marker\n          name=\"Dolores park\"\n          draggable\n          onDragEnd={onMarkerDragEnd}\n          position={{ lat: markerPosition.lat, lng: markerPosition.lng }}\n        />\n        <Marker />\n        {/* For Auto complete Search Box */}\n        <Container>\n          <Box className={classes.useCurrent}>\n            <Text\n              variant=\"body2\"\n              style={{ marginRight: 10, marginBottom: 0 }}\n              ffamily=\"Poppins\"\n            >\n              Use Current Location\n            </Text>\n            <Switch\n              checked={showCurrLocation}\n              onChange={onCurrentLocation}\n              name=\"checkedA\"\n              inputProps={{ 'aria-label': 'secondary checkbox' }}\n            />\n          </Box>\n          <Box className={classes.autoCompWrapper}>\n            <Autocomplete\n              onPlaceSelected={onPlaceSelected}\n              className={classes.autoComplete}\n              types={['(regions)']}\n              placeholder={address}\n              componentRestrictions={{ country: 'in' }}\n              disabled={showCurrLocation}\n            />\n          </Box>\n          <Box style={{ marginBottom: 15 }}>\n            <TextField\n              disabled\n              id=\"outlined-basic\"\n              label=\"Address 1\"\n              variant=\"outlined\"\n              size=\"small\"\n              style={{ width: '100%' }}\n              value={address}\n              onChange={onChangeAddress}\n            />\n          </Box>\n          <Box style={{ marginBottom: 15 }}>\n            <TextField\n              id=\"outlined-multiline-static\"\n              label=\"Address 2\"\n              multiline\n              rows={2}\n              variant=\"outlined\"\n              style={{ width: '100%' }}\n              onChange={onChangeAddress2}\n              value={address2}\n            />\n          </Box>\n          <Box style={{ paddingBottom: 20 }}>\n            <Button onClick={onAdd}>Add</Button>\n          </Box>\n        </Container>\n      </GoogleMap>\n    )),\n  );\n\n  return (\n    <AsyncMap\n      googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places\"\n      loadingElement={<div style={{ height: `100%` }} />}\n      containerElement={<div style={{ height: `100%` }} />}\n      mapElement={<div style={{ height: `30%` }} />}\n    />\n  );\n};\n\nMyMapComponent.propTypes = {\n  lat: PropTypes.number,\n  lng: PropTypes.number,\n  // eslint-disable-next-line react/forb,id-prop-types\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MyMapComponent);\n"]},"metadata":{},"sourceType":"module"}