{"ast":null,"code":"import _Dialog from \"@material-ui/core/Dialog\";\nimport _DialogActions from \"@material-ui/core/DialogActions\";\nimport _Button from \"@material-ui/core/Button\";\nimport _DialogContent from \"@material-ui/core/DialogContent\";\nimport _Box from \"@material-ui/core/Box\";\nimport _TextField from \"@material-ui/core/TextField\";\nimport _DialogContentText from \"@material-ui/core/DialogContentText\";\nimport _DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/loginModal/index.js\";\nimport React, { useContext, useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Link from '../link';\nimport { GlobalContext } from '../../../pages/_app';\nimport { LOGIN_MODAL_STATUS, SIGN_UP_MODAL_STATUS, ALERT_DIALOG, ERROR_TITLE, ERROR_DESCRIPTION } from '../../lib/utility/type';\nimport AlertDialog from '../alert';\n\nconst styles = theme => ({\n  root: {},\n  textField: {\n    marginBottom: 20\n  },\n  linkWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  linkButton: {\n    marginRight: 20\n  }\n});\n\nconst Login = ({\n  classes,\n  open,\n  handleClose\n}) => {\n  const {\n    0: email,\n    1: setEmail\n  } = useState(null);\n  const {\n    0: password,\n    1: setPassword\n  } = useState(null);\n  const {\n    0: errorTitle,\n    1: setErrorTitle\n  } = useState(null);\n  const {\n    0: errorDescription,\n    1: setErrorDescription\n  } = useState(null);\n  const globalContext = useContext(GlobalContext);\n\n  const onSignUp = () => {\n    globalContext.allDispatch({\n      type: SIGN_UP_MODAL_STATUS,\n      value: true\n    });\n    globalContext.allDispatch({\n      type: LOGIN_MODAL_STATUS,\n      value: false\n    });\n  };\n\n  const onSubmit = () => {\n    if (email && password) {} else {\n      globalContext.allDispatch({\n        type: ERROR_DESCRIPTION,\n        value: \"Please enter all mandatory fields.\"\n      });\n      globalContext.allDispatch({\n        type: ERROR_TITLE,\n        value: \"Missing Fields \"\n      });\n      globalContext.allDispatch({\n        type: ALERT_DIALOG,\n        value: true\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(_Dialog, {\n      open: open,\n      onClose: handleClose,\n      fullWidth: true,\n      maxWidth: 'sm',\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(_DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(_DialogContentText, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Box, {\n          className: classes.textField,\n          children: /*#__PURE__*/_jsxDEV(_TextField, {\n            id: \"email\",\n            label: \"Email Address\",\n            type: \"email\",\n            fullWidth: true,\n            variant: \"outlined\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(_Box, {\n          className: classes.textField,\n          children: /*#__PURE__*/_jsxDEV(_TextField, {\n            id: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            fullWidth: true,\n            variant: \"outlined\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(_Box, {\n          className: classes.linkWrapper,\n          children: [/*#__PURE__*/_jsxDEV(_Box, {\n            className: classes.linkButton,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"#\",\n              children: \"Forgot Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(_Box, {\n            className: classes.linkButton,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"#\",\n              onClick: onSignUp,\n              children: \"Don't have account! Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(_Button, {\n          onClick: onSubmit,\n          color: \"primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertDialog, {\n      open: globalContext.state.alertStatus,\n      title: errorTitle,\n      description: errorDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\nLogin.propTypes = {\n  open: PropTypes.bool,\n  handleClose: PropTypes.func,\n  // eslint-disable-next-line react/forb,id-prop-types\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Login);","map":{"version":3,"sources":["/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/loginModal/index.js"],"names":["React","useContext","useState","withStyles","PropTypes","Link","GlobalContext","LOGIN_MODAL_STATUS","SIGN_UP_MODAL_STATUS","ALERT_DIALOG","ERROR_TITLE","ERROR_DESCRIPTION","AlertDialog","styles","theme","root","textField","marginBottom","linkWrapper","display","flexDirection","linkButton","marginRight","Login","classes","open","handleClose","email","setEmail","password","setPassword","errorTitle","setErrorTitle","errorDescription","setErrorDescription","globalContext","onSignUp","allDispatch","type","value","onSubmit","e","target","state","alertStatus","propTypes","bool","func","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Box, Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport Link from '../link'\nimport { GlobalContext } from '../../../pages/_app'\nimport { LOGIN_MODAL_STATUS, SIGN_UP_MODAL_STATUS, ALERT_DIALOG, ERROR_TITLE, ERROR_DESCRIPTION } from '../../lib/utility/type'\nimport AlertDialog from '../alert'\n\nconst styles = (theme) => ({\n    root : {\n\n    },\n    textField : {\n        marginBottom : 20\n    },\n    linkWrapper : {\n        display : \"flex\",\n        flexDirection : \"row\",\n    },\n    linkButton : {\n        marginRight : 20\n    }\n})\n\nconst Login = ({ classes, open, handleClose }) => {\n  const [ email, setEmail ] = useState(null)\n  const [ password, setPassword ] = useState(null)\n  const [errorTitle, setErrorTitle ] = useState(null)\n  const [errorDescription, setErrorDescription ] = useState(null)\n\n  const globalContext = useContext(GlobalContext)\n  const onSignUp  = () => {\n      globalContext.allDispatch({\n        type : SIGN_UP_MODAL_STATUS,\n        value : true\n      })\n      globalContext.allDispatch({\n        type : LOGIN_MODAL_STATUS,\n        value : false\n      })\n  }\n  const onSubmit = () => {\n    if(email && password){\n\n    }else{\n      globalContext.allDispatch({\n        type : ERROR_DESCRIPTION,\n        value : \"Please enter all mandatory fields.\"\n      })\n      globalContext.allDispatch({\n          type : ERROR_TITLE,\n          value : \"Missing Fields \"\n      })\n      globalContext.allDispatch({\n          type : ALERT_DIALOG,\n          value : true\n      })\n    }\n  }\n  return (\n    <div>\n      \n      <Dialog open={open} onClose={handleClose} fullWidth={true} maxWidth={'sm'} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n          </DialogContentText>\n            <Box className={classes.textField}>\n              <TextField \n                id=\"email\" \n                label=\"Email Address\"\n                type=\"email\"\n                fullWidth variant=\"outlined\" \n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </Box>\n            <Box className={classes.textField}>\n              <TextField \n                id=\"password\" \n                label=\"Password\"\n                type=\"password\"\n                fullWidth variant=\"outlined\" \n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Box>\n            <Box className={classes.linkWrapper}>\n                <Box className={classes.linkButton}>\n                    <Link href=\"#\" >Forgot Password</Link>\n                </Box>\n                <Box className={classes.linkButton}>\n                    <Link href=\"#\" onClick={onSignUp}>Don't have account! Sign Up</Link>   \n                </Box>\n            </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onSubmit} color=\"primary\">\n            Submit\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <AlertDialog open={globalContext.state.alertStatus} title={errorTitle} description={errorDescription} />\n    </div>\n  );\n}\n\n\nLogin.propTypes = {\n    open : PropTypes.bool,\n    handleClose : PropTypes.func,\n    // eslint-disable-next-line react/forb,id-prop-types\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(Login)"]},"metadata":{},"sourceType":"module"}