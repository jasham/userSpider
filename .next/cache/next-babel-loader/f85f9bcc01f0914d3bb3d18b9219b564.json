{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/alert/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Paper from '@material-ui/core/Paper';\nimport Draggable from 'react-draggable';\nimport PropTypes from 'prop-types';\nimport { GlobalContext } from '../../../pages/_app';\nimport { ALERT_DIALOG } from '../../lib/utility/type';\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    children: /*#__PURE__*/_jsxDEV(Paper, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\nconst DraggableDialog = props => {\n  const {\n    title,\n    description\n  } = props;\n  const globalContext = useContext(GlobalContext);\n\n  const handleClose = () => {\n    globalContext.allDispatch({\n      type: ALERT_DIALOG,\n      value: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: globalContext.state.alertStatus || false,\n      onClose: handleClose,\n      PaperComponent: PaperComponent,\n      \"aria-labelledby\": \"draggable-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        style: {\n          cursor: 'move'\n        },\n        id: \"draggable-dialog-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          autoFocus: true,\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\nDraggableDialog.default = {\n  title: '',\n  description: ''\n};\nDraggableDialog.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string\n};\nexport default DraggableDialog;","map":{"version":3,"sources":["/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/alert/index.js"],"names":["React","useContext","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Paper","Draggable","PropTypes","GlobalContext","ALERT_DIALOG","PaperComponent","props","DraggableDialog","title","description","globalContext","handleClose","allDispatch","type","value","state","alertStatus","cursor","default","propTypes","string"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,YAAT,QAA6B,wBAA7B;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,sBACE,QAAC,SAAD;AACE,IAAA,MAAM,EAAC,yBADT;AAEE,IAAA,MAAM,EAAE,kCAFV;AAAA,2BAIE,QAAC,KAAD,oBAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,MAAMC,eAAe,GAAID,KAAD,IAAW;AACjC,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAyBH,KAA/B;AACA,QAAMI,aAAa,GAAGjB,UAAU,CAACU,aAAD,CAAhC;;AACA,QAAMQ,WAAW,GAAG,MAAM;AACxBD,IAAAA,aAAa,CAACE,WAAd,CAA0B;AACxBC,MAAAA,IAAI,EAAET,YADkB;AAExBU,MAAAA,KAAK,EAAE;AAFiB,KAA1B;AAID,GALD;;AAOA,sBACE;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,IAAI,EAAEJ,aAAa,CAACK,KAAd,CAAoBC,WAApB,IAAmC,KAD3C;AAEE,MAAA,OAAO,EAAEL,WAFX;AAGE,MAAA,cAAc,EAAEN,cAHlB;AAIE,yBAAgB,wBAJlB;AAAA,8BAME,QAAC,WAAD;AAAa,QAAA,KAAK,EAAE;AAAEY,UAAAA,MAAM,EAAE;AAAV,SAApB;AAAwC,QAAA,EAAE,EAAC,wBAA3C;AAAA,kBACGT;AADH;AAAA;AAAA;AAAA;AAAA,cANF,eASE,QAAC,aAAD;AAAA,+BACE,QAAC,iBAAD;AAAA,oBAAoBC;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF,eAYE,QAAC,aAAD;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,SAAS,MAAjB;AAAkB,UAAA,OAAO,EAAEE,WAA3B;AAAwC,UAAA,KAAK,EAAC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAhCD;;AAiCAJ,eAAe,CAACW,OAAhB,GAA0B;AACxBV,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,WAAW,EAAE;AAFW,CAA1B;AAKAF,eAAe,CAACY,SAAhB,GAA4B;AAC1BX,EAAAA,KAAK,EAAEN,SAAS,CAACkB,MADS;AAE1BX,EAAAA,WAAW,EAAEP,SAAS,CAACkB;AAFG,CAA5B;AAKA,eAAeb,eAAf","sourcesContent":["import React, { useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Paper from '@material-ui/core/Paper';\nimport Draggable from 'react-draggable';\nimport PropTypes from 'prop-types';\nimport { GlobalContext } from '../../../pages/_app';\nimport { ALERT_DIALOG } from '../../lib/utility/type';\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nconst DraggableDialog = (props) => {\n  const { title, description } = props;\n  const globalContext = useContext(GlobalContext);\n  const handleClose = () => {\n    globalContext.allDispatch({\n      type: ALERT_DIALOG,\n      value: false,\n    });\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={globalContext.state.alertStatus || false}\n        onClose={handleClose}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"draggable-dialog-title\"\n      >\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n          {title}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>{description}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\nDraggableDialog.default = {\n  title: '',\n  description: '',\n};\n\nDraggableDialog.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default DraggableDialog;\n"]},"metadata":{},"sourceType":"module"}