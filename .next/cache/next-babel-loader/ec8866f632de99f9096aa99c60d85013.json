{"ast":null,"code":"import _Box from \"@material-ui/core/Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/addressCard/index.js\";\nimport React, { useContext } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Buttons from '../button';\nimport Text from '../text';\nimport { GlobalContext } from '../../../pages/_app';\nimport { SELECTED_ADDRESS_ID } from '../../lib/utility/type';\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"space-between\",\n    width: 200,\n    marginBottom: 30\n  },\n  addressCard: {\n    padding: 20,\n    borderRadius: 10,\n    boxShadow: \"0px 16px 24px rgba(0, 0, 0, 0.06), 0px 2px 6px rgba(0, 0, 0, 0.04), 0px 0px 1px rgba(0, 0, 0, 0.04)\",\n    minHeight: 200,\n    marginBottom: 20\n  },\n  button: {\n    width: \"auto\",\n    paddingLeft: 20,\n    paddingRight: 20,\n    backgroundColor: \"rgba(0,0,0,0.3)\",\n    fontFamily: \"Poppins\"\n  },\n  selectedButton: {\n    width: \"auto\",\n    paddingLeft: 20,\n    paddingRight: 20,\n    backgroundColor: \"#34A76C\",\n    fontFamily: \"Poppins\"\n  }\n});\n\nconst AddressCard = ({\n  classes,\n  onClickDiv,\n  address1,\n  address2,\n  selected,\n  adderListId,\n  aData\n}) => {\n  const globalContext = useContext(GlobalContext);\n\n  const onSelected = () => {\n    console.log(\"This is adder id\", globalContext.state);\n    globalContext.allDispatch({\n      type: SELECTED_ADDRESS_ID,\n      value: adderListId\n    });\n    globalContext.allDispatch({\n      type: SELECTED_ADDRESS_Data,\n      value: adderListId\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Box, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(_Box, {\n      className: classes.addressCard,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: address1 || \"Add address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: address2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), !address1 ? /*#__PURE__*/_jsxDEV(Buttons, {\n      className: classes.selectedButton,\n      onClick: onClickDiv,\n      children: \"Add Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }, this) : null, address1 ? adderListId === globalContext.state.selectedAddressId ? /*#__PURE__*/_jsxDEV(Buttons, {\n      className: classes.selectedButton,\n      onClick: onSelected,\n      children: \"Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(Buttons, {\n      className: classes.button,\n      onClick: onSelected,\n      children: \"Select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\nAddressCard.propTypes = {\n  address1: PropTypes.string,\n  address2: PropTypes.string,\n  selected: PropTypes.bool,\n  image: PropTypes.string,\n  adderListId: PropTypes.number,\n  onClickDiv: PropTypes.func,\n  aData: PropTypes.object\n};\nexport default withStyles(styles)(AddressCard);","map":{"version":3,"sources":["/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/addressCard/index.js"],"names":["React","useContext","withStyles","PropTypes","Buttons","Text","GlobalContext","SELECTED_ADDRESS_ID","styles","theme","root","display","flexDirection","alignItems","width","marginBottom","addressCard","padding","borderRadius","boxShadow","minHeight","button","paddingLeft","paddingRight","backgroundColor","fontFamily","selectedButton","AddressCard","classes","onClickDiv","address1","address2","selected","adderListId","aData","globalContext","onSelected","console","log","state","allDispatch","type","value","SELECTED_ADDRESS_Data","selectedAddressId","propTypes","string","bool","image","number","func","object"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Box } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport Buttons  from '../button'\nimport Text from '../text'\nimport { GlobalContext } from '../../../pages/_app'\nimport { SELECTED_ADDRESS_ID } from '../../lib/utility/type'\n\nconst styles = (theme) => ({\n    root : {\n        display : \"flex\",\n        flexDirection : \"column\",\n        alignItems  : \"space-between\",\n        width : 200,\n        marginBottom : 30,\n    },\n    addressCard : {\n        padding : 20,\n        borderRadius : 10,\n        boxShadow: \"0px 16px 24px rgba(0, 0, 0, 0.06), 0px 2px 6px rgba(0, 0, 0, 0.04), 0px 0px 1px rgba(0, 0, 0, 0.04)\",\n        minHeight : 200,\n        marginBottom : 20\n    },\n    button : {\n        width : \"auto\",\n        paddingLeft : 20,\n        paddingRight : 20,\n        backgroundColor : \"rgba(0,0,0,0.3)\",\n        fontFamily : \"Poppins\"\n    },\n    selectedButton : {\n        width : \"auto\",\n        paddingLeft : 20,\n        paddingRight : 20,\n        backgroundColor : \"#34A76C\",\n        fontFamily : \"Poppins\"\n    }\n})\n\nconst AddressCard = ({ classes, onClickDiv, address1, address2, selected, adderListId, aData }) => {\n\n    const globalContext = useContext(GlobalContext)\n\n    const onSelected = () => {\n        console.log(\"This is adder id\",globalContext.state)\n        globalContext.allDispatch({\n            type : SELECTED_ADDRESS_ID,\n            value : adderListId\n        })\n        globalContext.allDispatch({\n            type : SELECTED_ADDRESS_Data,\n            value : adderListId\n        })\n    }\n\n    return (\n        <Box className={classes.root} >\n            <Box className={classes.addressCard}>\n                <Text>{address1 || \"Add address\"}</Text>\n                <Text>{address2}</Text>\n            </Box>\n            {\n                !address1 ? \n                    <Buttons className={classes.selectedButton} onClick={onClickDiv} >Add Address</Buttons>\n                    :\n                    null\n            }\n            {\n                address1 ? \n\n                adderListId === globalContext.state.selectedAddressId ? \n                        <Buttons className={classes.selectedButton}  onClick={onSelected} >Selected</Buttons>\n                        :\n                        <Buttons className={classes.button} onClick={onSelected} >Select</Buttons>\n                    :\n                    null\n            }\n        </Box>\n    )\n}\n\nAddressCard.propTypes = {\n    address1 : PropTypes.string,\n    address2 : PropTypes.string,\n    selected : PropTypes.bool,\n    image : PropTypes.string,\n    adderListId : PropTypes.number,\n    onClickDiv : PropTypes.func,\n    aData : PropTypes.object\n}\n\nexport default withStyles(styles)(AddressCard)"]},"metadata":{},"sourceType":"module"}