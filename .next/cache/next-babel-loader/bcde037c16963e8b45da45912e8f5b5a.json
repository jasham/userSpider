{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/map/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { compose, withProps } from \"recompose\";\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nGeocode.setApiKey(\"AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw\");\nGeocode.enableDebug();\n\nconst MyMapComponent = () => {\n  const [latLan, setLatLan] = useState({\n    lat: 12.9716,\n    lng: 77.5946\n  });\n  const AsyncMap = withScriptjs(withGoogleMap(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n    defaultZoom: 15,\n    defaultCenter: {\n      lat: latLan.lat,\n      lng: latLan.lng\n    },\n    children: [/*#__PURE__*/_jsxDEV(InfoWindow, {\n      onClose: this.onInfoWindowClose,\n      position: {\n        lat: this.state.markerPosition.lat + 0.0018,\n        lng: this.state.markerPosition.lng\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            padding: 0,\n            margin: 0\n          },\n          children: this.state.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      google: this.props.google,\n      name: 'Dolores park',\n      draggable: true,\n      onDragEnd: this.onMarkerDragEnd,\n      position: {\n        lat: this.state.markerPosition.lat,\n        lng: this.state.markerPosition.lng\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      style: {\n        width: '100%',\n        height: '40px',\n        paddingLeft: '16px',\n        marginTop: '2px',\n        marginBottom: '500px'\n      },\n      onPlaceSelected: this.onPlaceSelected,\n      types: ['(regions)']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 17\n  }, this)));\n}; //     compose(\n//   withProps({\n//     /**\n//      * Note: create and replace your own key in the Google console.\n//      * https://console.developers.google.com/apis/dashboard\n//      * The key \"AIzaSyBkNaAGLEVq0YLQMi-PYEMabFeREadYe1Q\" can be ONLY used in this sandbox (no forked).\n//      */\n//       googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places\",\n//     loadingElement: <div style={{ height: `100%` }} />,\n//     containerElement: <div style={{ height: `100%` }} />,\n//     mapElement: <div style={{ height: `100%` }} />,\n//   }),\n//   withScriptjs,\n//   withGoogleMap\n// )(props => (\n//   <GoogleMap defaultZoom={8} defaultCenter={{ lat: props.lat , lng: props.lng  }}>\n//     {props.isMarkerShown && (\n//       <Marker position={{ lat: props.lat , lng: props.lng  }} />\n//     )}\n//     {console.log(\"Here is lan\",props)}\n//   </GoogleMap>\n// ));\n\n\nexport default MyMapComponent;","map":{"version":3,"sources":["/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/map/index.js"],"names":["React","ReactDOM","compose","withProps","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","Geocode","setApiKey","enableDebug","MyMapComponent","latLan","setLatLan","useState","lat","lng","AsyncMap","props","onInfoWindowClose","state","markerPosition","padding","margin","address","google","onMarkerDragEnd","width","height","paddingLeft","marginTop","marginBottom","onPlaceSelected"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,YAAnC,EAAiDC,UAAjD,EAA6DC,MAA7D,QAA2E,mBAA3E;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEAA,OAAO,CAACC,SAAR,CAAkB,yCAAlB;AACAD,OAAO,CAACE,WAAR;;AAIA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC;AAAEC,IAAAA,GAAG,EAAG,OAAR;AAAiBC,IAAAA,GAAG,EAAG;AAAvB,GAAD,CAApC;AACA,QAAMC,QAAQ,GAAGZ,YAAY,CACzBF,aAAa,CACTe,KAAK,iBACD,QAAC,SAAD;AACI,IAAA,WAAW,EAAE,EADjB;AAEI,IAAA,aAAa,EAAE;AAAEH,MAAAA,GAAG,EAAEH,MAAM,CAACG,GAAd;AAAmBC,MAAAA,GAAG,EAAEJ,MAAM,CAACI;AAA/B,KAFnB;AAAA,4BAKI,QAAC,UAAD;AACI,MAAA,OAAO,EAAE,KAAKG,iBADlB;AAEI,MAAA,QAAQ,EAAE;AAAEJ,QAAAA,GAAG,EAAI,KAAKK,KAAL,CAAWC,cAAX,CAA0BN,GAA1B,GAAgC,MAAzC;AAAmDC,QAAAA,GAAG,EAAE,KAAKI,KAAL,CAAWC,cAAX,CAA0BL;AAAlF,OAFd;AAAA,6BAII;AAAA,+BACI;AAAM,UAAA,KAAK,EAAE;AAAEM,YAAAA,OAAO,EAAE,CAAX;AAAcC,YAAAA,MAAM,EAAE;AAAtB,WAAb;AAAA,oBAA0C,KAAKH,KAAL,CAAWI;AAArD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YALJ,eAcI,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,KAAKN,KAAL,CAAWO,MAA3B;AACQ,MAAA,IAAI,EAAE,cADd;AAEQ,MAAA,SAAS,EAAE,IAFnB;AAGQ,MAAA,SAAS,EAAG,KAAKC,eAHzB;AAIQ,MAAA,QAAQ,EAAE;AAAEX,QAAAA,GAAG,EAAE,KAAKK,KAAL,CAAWC,cAAX,CAA0BN,GAAjC;AAAsCC,QAAAA,GAAG,EAAE,KAAKI,KAAL,CAAWC,cAAX,CAA0BL;AAArE;AAJlB;AAAA;AAAA;AAAA;AAAA,YAdJ,eAoBI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YApBJ,eAsBI,QAAC,YAAD;AACI,MAAA,KAAK,EAAE;AACHW,QAAAA,KAAK,EAAE,MADJ;AAEHC,QAAAA,MAAM,EAAE,MAFL;AAGHC,QAAAA,WAAW,EAAE,MAHV;AAIHC,QAAAA,SAAS,EAAE,KAJR;AAKHC,QAAAA,YAAY,EAAE;AALX,OADX;AAQI,MAAA,eAAe,EAAG,KAAKC,eAR3B;AASI,MAAA,KAAK,EAAE,CAAC,WAAD;AATX;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFK,CADY,CAA7B;AAyCH,CA3CD,C,CA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAerB,cAAf","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { compose, withProps } from \"recompose\";\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\n\nGeocode.setApiKey(\"AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw\");\nGeocode.enableDebug();\n\n\n\nconst MyMapComponent = () => {\n    const [latLan, setLatLan] = useState({ lat : 12.9716, lng : 77.5946 })\n    const AsyncMap = withScriptjs(\n        withGoogleMap(\n            props => (\n                <GoogleMap \n                    defaultZoom={15}\n                    defaultCenter={{ lat: latLan.lat, lng: latLan.lng }}\n                >\n                    {/* InfoWindow on top of marker */}\n                    <InfoWindow\n                        onClose={this.onInfoWindowClose}\n                        position={{ lat: ( this.state.markerPosition.lat + 0.0018 ), lng: this.state.markerPosition.lng }}\n                    >\n                        <div>\n                            <span style={{ padding: 0, margin: 0 }}>{ this.state.address }</span>\n                        </div>\n                    </InfoWindow>\n                    {/*Marker*/}\n                    <Marker google={this.props.google}\n                            name={'Dolores park'}\n                            draggable={true}\n                            onDragEnd={ this.onMarkerDragEnd }\n                            position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\n                    />\n                    <Marker />\n                    {/* For Auto complete Search Box */}\n                    <Autocomplete\n                        style={{\n                            width: '100%',\n                            height: '40px',\n                            paddingLeft: '16px',\n                            marginTop: '2px',\n                            marginBottom: '500px'\n                        }}\n                        onPlaceSelected={ this.onPlaceSelected }\n                        types={['(regions)']}\n                    />\n                </GoogleMap>\n            )\n        )\n    );\n    \n}\n//     compose(\n//   withProps({\n//     /**\n//      * Note: create and replace your own key in the Google console.\n//      * https://console.developers.google.com/apis/dashboard\n//      * The key \"AIzaSyBkNaAGLEVq0YLQMi-PYEMabFeREadYe1Q\" can be ONLY used in this sandbox (no forked).\n//      */\n    \n//       googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places\",\n//     loadingElement: <div style={{ height: `100%` }} />,\n//     containerElement: <div style={{ height: `100%` }} />,\n//     mapElement: <div style={{ height: `100%` }} />,\n\n//   }),\n//   withScriptjs,\n//   withGoogleMap\n// )(props => (\n//   <GoogleMap defaultZoom={8} defaultCenter={{ lat: props.lat , lng: props.lng  }}>\n//     {props.isMarkerShown && (\n//       <Marker position={{ lat: props.lat , lng: props.lng  }} />\n//     )}\n//     {console.log(\"Here is lan\",props)}\n//   </GoogleMap>\n// ));\n\nexport default MyMapComponent\n"]},"metadata":{},"sourceType":"module"}