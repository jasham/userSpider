{"ast":null,"code":"import _Box from \"@material-ui/core/Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/layout/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useEffect } from 'react';\nimport { element } from 'prop-types';\nimport Header from '../header';\nimport Footer from '../footer';\nimport { GlobalContext } from '../../../pages/_app';\nimport { SERVICE_LIST, GROUPS_LIST, CATEGORY_LIST } from '../../lib/utility/type';\nimport { subCatService, bookService } from '../../lib/services/home';\nimport LoadingBar from '../loading';\n\nconst Layout = ({\n  children\n}) => {\n  const globalContext = useContext(GlobalContext);\n  useEffect(async () => {\n    await subCatService().then(cdata => {\n      let tempArr = [];\n      let tempArr2 = [];\n      let tempObj = {};\n      let tempGid = {};\n      cdata.data.map(eachData => {\n        if (eachData.sub_category && eachData.icon_url) {\n          tempArr2 = [];\n          eachData.service.map(serviceData => {\n            tempArr2.push({\n              id: serviceData._id,\n              label: serviceData.service\n            });\n          });\n          tempObj = _objectSpread({\n            [eachData._id]: tempArr2\n          }, tempObj);\n          tempGid = _objectSpread({\n            [eachData._id]: eachData.group_id\n          }, tempGid);\n          tempArr.push({\n            id: eachData._id,\n            label: eachData.sub_category,\n            icon_url: eachData.icon_url,\n            bannerUrl: eachData.banner_url\n          });\n        }\n      });\n      globalContext.allDispatch({\n        type: CATEGORY_LIST,\n        value: tempArr\n      });\n      globalContext.allDispatch({\n        type: SERVICE_LIST,\n        value: tempObj\n      });\n      globalContext.allDispatch({\n        type: GROUPS_LIST,\n        value: tempGid\n      });\n    }); // if(!socket){\n    //     socket = io.connect('http://localhost:8080');\n    // } \n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Box, {\n    id: \"new\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), children, /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), globalContext.state.loadingBarStatus ? /*#__PURE__*/_jsxDEV(LoadingBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 48\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 11\n  }, this);\n};\n\nLayout.defaultProps = {};\nLayout.propTypes = {\n  children: element\n};\nexport default Layout;","map":{"version":3,"sources":["/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/layout/index.js"],"names":["React","useContext","useEffect","element","Header","Footer","GlobalContext","SERVICE_LIST","GROUPS_LIST","CATEGORY_LIST","subCatService","bookService","LoadingBar","Layout","children","globalContext","then","cdata","tempArr","tempArr2","tempObj","tempGid","data","map","eachData","sub_category","icon_url","service","serviceData","push","id","_id","label","group_id","bannerUrl","banner_url","allDispatch","type","value","state","loadingBarStatus","defaultProps","propTypes"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { element } from 'prop-types';\r\nimport { Box } from '@material-ui/core'\r\nimport Header from '../header'\r\nimport Footer from '../footer'\r\nimport { GlobalContext } from '../../../pages/_app'\r\nimport { SERVICE_LIST, GROUPS_LIST, CATEGORY_LIST } from '../../lib/utility/type'\r\nimport { subCatService, bookService } from '../../lib/services/home'\r\nimport LoadingBar from '../loading'\r\n\r\nconst Layout = ({ children }) => {\r\n\r\n  const globalContext = useContext(GlobalContext)\r\n\r\n  useEffect( async () => {\r\n    await subCatService().then((cdata) => {\r\n        let tempArr = []\r\n        let tempArr2 = []\r\n        let tempObj = {}\r\n        let tempGid = {}\r\n        cdata.data.map((eachData) => {\r\n            if(eachData.sub_category && eachData.icon_url ){\r\n                tempArr2 = []\r\n                eachData.service.map((serviceData) => {\r\n                    tempArr2.push({ id : serviceData._id, label : serviceData.service })\r\n                })\r\n                tempObj = { [eachData._id] : tempArr2, ...tempObj }\r\n                tempGid = { [eachData._id] : eachData.group_id, ...tempGid}\r\n                tempArr.push({ id : eachData._id, label : eachData.sub_category, icon_url : eachData.icon_url, bannerUrl : eachData.banner_url })\r\n            }\r\n        })\r\n\r\n        globalContext.allDispatch({ \r\n            type : CATEGORY_LIST,\r\n            value :  tempArr\r\n        })\r\n        globalContext.allDispatch({ \r\n            type : SERVICE_LIST,\r\n            value :  tempObj\r\n        })\r\n        globalContext.allDispatch({ \r\n            type : GROUPS_LIST,\r\n            value : tempGid \r\n        })\r\n    })\r\n    // if(!socket){\r\n    //     socket = io.connect('http://localhost:8080');\r\n    // } \r\n  },[])\r\n\r\n  return (<Box id=\"new\">\r\n      <Header />\r\n      {children}\r\n      <Footer />\r\n      { globalContext.state.loadingBarStatus ? <LoadingBar /> : null }\r\n      \r\n  </Box>)\r\n}\r\n\r\nLayout.defaultProps = {};\r\n\r\nLayout.propTypes = {\r\n  children: element,\r\n};\r\n\r\nexport default Layout;\r\n"]},"metadata":{},"sourceType":"module"}