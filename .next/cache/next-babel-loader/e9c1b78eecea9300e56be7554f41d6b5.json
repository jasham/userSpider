{"ast":null,"code":"import _Dialog from \"@material-ui/core/Dialog\";\nimport _DialogActions from \"@material-ui/core/DialogActions\";\nimport _Button from \"@material-ui/core/Button\";\nimport _DialogContent from \"@material-ui/core/DialogContent\";\nimport _Box from \"@material-ui/core/Box\";\nimport _TextField from \"@material-ui/core/TextField\";\nimport _DialogContentText from \"@material-ui/core/DialogContentText\";\nimport _DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/loginModal/index.js\";\nimport React, { useContext, useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Link from '../link';\nimport { GlobalContext } from '../../../pages/_app';\nimport { LOGIN_MODAL_STATUS, SIGN_UP_MODAL_STATUS, ALERT_DIALOG, ERROR_TITLE, ERROR_DESCRIPTION, AUTH_STATUS } from '../../lib/utility/type';\nimport AlertDialog from '../alert';\nimport { validateEmail } from '../../lib/utility/common';\nimport request from '../../lib/utility/apiWrapper'; // import { login } from '../../lib/services/login'\n\nconst styles = theme => ({\n  root: {},\n  textField: {\n    marginBottom: 20\n  },\n  linkWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  linkButton: {\n    marginRight: 20\n  }\n});\n\nconst Login = ({\n  classes,\n  open,\n  handleClose\n}) => {\n  const {\n    0: email,\n    1: setEmail\n  } = useState(null);\n  const {\n    0: password,\n    1: setPassword\n  } = useState(null);\n  const {\n    0: errorTitle,\n    1: setErrorTitle\n  } = useState(null);\n  const {\n    0: errorDescription,\n    1: setErrorDescription\n  } = useState(null);\n  const globalContext = useContext(GlobalContext);\n\n  const onSignUp = () => {\n    globalContext.allDispatch({\n      type: SIGN_UP_MODAL_STATUS,\n      value: true\n    });\n    globalContext.allDispatch({\n      type: LOGIN_MODAL_STATUS,\n      value: false\n    });\n  };\n\n  const login = async data => {\n    let loginData = await request({\n      url: '/userlogin',\n      method: \"post\",\n      data\n    });\n\n    if (loginData.result === \"success\") {\n      document.cookie = `token=${loginData.token}`;\n      let stringifiedData = JSON.stringify(loginData.data);\n      localStorage.setItem('userInfo', stringifiedData);\n      globalContext.allDispatch({\n        type: AUTH_STATUS,\n        value: true\n      });\n      globalContext.allDispatch({\n        type: LOGIN_MODAL_STATUS,\n        value: false\n      });\n    } else if (loginData.result === \"wrongEmail\") {}\n\n    console.log(\"Here is loginData\", loginData);\n  };\n\n  const onSubmit = () => {\n    if (email && password) {\n      if (validateEmail(email)) {\n        if (password.length > 7) {\n          let temp = {\n            emailOrMobile: email,\n            password: password\n          };\n          login(temp);\n        } else {\n          errorFunc(\"Incorrect Password\", \"Minimum password length is 8 charachters.\");\n        }\n      } else {\n        errorFunc(\"Incorrect Email\", \"Please enter correct email and try again.\");\n      }\n    } else {\n      errorFunc(\"Missing Fields\", \"Please enter all mandatory fields.\");\n    }\n  };\n\n  const errorFunc = (title, description) => {\n    globalContext.allDispatch({\n      type: ERROR_DESCRIPTION,\n      value: description\n    });\n    globalContext.allDispatch({\n      type: ERROR_TITLE,\n      value: title\n    });\n    globalContext.allDispatch({\n      type: ALERT_DIALOG,\n      value: true\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(_Dialog, {\n      open: open,\n      onClose: handleClose,\n      fullWidth: true,\n      maxWidth: 'sm',\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(_DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(_DialogContentText, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Box, {\n          className: classes.textField,\n          children: /*#__PURE__*/_jsxDEV(_TextField, {\n            id: \"email\",\n            label: \"Email Address\",\n            type: \"email\",\n            fullWidth: true,\n            variant: \"outlined\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(_Box, {\n          className: classes.textField,\n          children: /*#__PURE__*/_jsxDEV(_TextField, {\n            id: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            fullWidth: true,\n            variant: \"outlined\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(_Box, {\n          className: classes.linkWrapper,\n          children: [/*#__PURE__*/_jsxDEV(_Box, {\n            className: classes.linkButton,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"#\",\n              children: \"Forgot Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(_Box, {\n            className: classes.linkButton,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"#\",\n              onClick: onSignUp,\n              children: \"Don't have account! Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(_Button, {\n          onClick: onSubmit,\n          color: \"primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertDialog, {\n      open: globalContext.state.alertStatus,\n      title: errorTitle,\n      description: errorDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\nLogin.propTypes = {\n  open: PropTypes.bool,\n  handleClose: PropTypes.func,\n  // eslint-disable-next-line react/forb,id-prop-types\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Login);","map":{"version":3,"sources":["/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/loginModal/index.js"],"names":["React","useContext","useState","withStyles","PropTypes","Link","GlobalContext","LOGIN_MODAL_STATUS","SIGN_UP_MODAL_STATUS","ALERT_DIALOG","ERROR_TITLE","ERROR_DESCRIPTION","AUTH_STATUS","AlertDialog","validateEmail","request","styles","theme","root","textField","marginBottom","linkWrapper","display","flexDirection","linkButton","marginRight","Login","classes","open","handleClose","email","setEmail","password","setPassword","errorTitle","setErrorTitle","errorDescription","setErrorDescription","globalContext","onSignUp","allDispatch","type","value","login","data","loginData","url","method","result","document","cookie","token","stringifiedData","JSON","stringify","localStorage","setItem","console","log","onSubmit","length","temp","emailOrMobile","errorFunc","title","description","e","target","state","alertStatus","propTypes","bool","func","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Box, Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport Link from '../link'\nimport { GlobalContext } from '../../../pages/_app'\nimport { LOGIN_MODAL_STATUS, SIGN_UP_MODAL_STATUS, ALERT_DIALOG, ERROR_TITLE, ERROR_DESCRIPTION, AUTH_STATUS } from '../../lib/utility/type'\nimport AlertDialog from '../alert'\nimport { validateEmail } from '../../lib/utility/common'\nimport request from '../../lib/utility/apiWrapper'\n\n// import { login } from '../../lib/services/login'\n\nconst styles = (theme) => ({\n    root : {\n\n    },\n    textField : {\n        marginBottom : 20\n    },\n    linkWrapper : {\n        display : \"flex\",\n        flexDirection : \"row\",\n    },\n    linkButton : {\n        marginRight : 20\n    }\n})\n\nconst Login = ({ classes, open, handleClose }) => {\n  const [ email, setEmail ] = useState(null)\n  const [ password, setPassword ] = useState(null)\n  const [errorTitle, setErrorTitle ] = useState(null)\n  const [errorDescription, setErrorDescription ] = useState(null)\n  const globalContext = useContext(GlobalContext)\n  \n  const onSignUp  = () => {\n      globalContext.allDispatch({\n        type : SIGN_UP_MODAL_STATUS,\n        value : true\n      })\n      globalContext.allDispatch({\n        type : LOGIN_MODAL_STATUS,\n        value : false\n      })\n  }\n\n  const login = async (data) => {\n    let loginData = await request({ url : '/userlogin', method : \"post\", data  })\n    if(loginData.result === \"success\"){\n        document.cookie = `token=${loginData.token}`\n        let stringifiedData = JSON.stringify(loginData.data)\n        localStorage.setItem('userInfo',stringifiedData)\n        globalContext.allDispatch({\n            type : AUTH_STATUS,\n            value : true\n        })\n        globalContext.allDispatch({\n          type : LOGIN_MODAL_STATUS,\n          value : false\n        })\n    }else if(loginData.result === \"wrongEmail\"){\n\n    }\n    console.log(\"Here is loginData\",loginData)\n}\n\n\n  const onSubmit = () => {\n    if(email && password){\n      if(validateEmail(email)){\n        if(password.length > 7){\n          let temp = {\n            emailOrMobile : email,\n            password : password\n          }\n          login(temp)\n        }else{\n          errorFunc(\"Incorrect Password\",\"Minimum password length is 8 charachters.\")\n        }\n      }else{\n        errorFunc(\"Incorrect Email\",\"Please enter correct email and try again.\")\n      }\n    }else{\n      errorFunc(\"Missing Fields\",\"Please enter all mandatory fields.\")\n    }\n  }\n\n  const errorFunc = (title,description) => {\n    globalContext.allDispatch({\n      type : ERROR_DESCRIPTION,\n      value : description\n    })\n    globalContext.allDispatch({\n        type : ERROR_TITLE,\n        value : title\n    })\n    globalContext.allDispatch({\n        type : ALERT_DIALOG,\n        value : true\n    })\n  }\n\n  \n  return (\n    <div>\n      <Dialog open={open} onClose={handleClose} fullWidth={true} maxWidth={'sm'} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n          </DialogContentText>\n            <Box className={classes.textField}>\n              <TextField \n                id=\"email\" \n                label=\"Email Address\"\n                type=\"email\"\n                fullWidth variant=\"outlined\" \n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </Box>\n            <Box className={classes.textField}>\n              <TextField \n                id=\"password\" \n                label=\"Password\"\n                type=\"password\"\n                fullWidth variant=\"outlined\" \n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Box>\n            <Box className={classes.linkWrapper}>\n                <Box className={classes.linkButton}>\n                    <Link href=\"#\" >Forgot Password</Link>\n                </Box>\n                <Box className={classes.linkButton}>\n                    <Link href=\"#\" onClick={onSignUp}>Don't have account! Sign Up</Link>   \n                </Box>\n            </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onSubmit} color=\"primary\">\n            Submit\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <AlertDialog open={globalContext.state.alertStatus} title={errorTitle} description={errorDescription} />\n    </div>\n  );\n}\n\n\nLogin.propTypes = {\n    open : PropTypes.bool,\n    handleClose : PropTypes.func,\n    // eslint-disable-next-line react/forb,id-prop-types\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(Login)"]},"metadata":{},"sourceType":"module"}