{"ast":null,"code":"import _Container from \"@material-ui/core/Container\";\nimport _TextField from \"@material-ui/core/TextField\";\nimport _Box from \"@material-ui/core/Box\";\nimport _Switch from \"@material-ui/core/Switch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/map/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { compose, withProps } from \"recompose\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nimport PropTypes from 'prop-types';\nimport Text from '../text';\nimport Button from '../button';\nGeocode.setApiKey(\"AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw\");\nGeocode.enableDebug();\n\nvar styles = function styles(theme) {\n  return {\n    root: {},\n    autoComplete: {\n      // backgroundColor : \"red\",\n      width: \"100%\"\n    },\n    autoCompWrapper: {\n      marginBottom: 20,\n      marginTop: 20\n    },\n    useCurrent: {\n      display: \"flex\",\n      alignItems: \"center\",\n      marginBottom: 10\n    }\n  };\n};\n\nvar MyMapComponent = function MyMapComponent(_ref) {\n  _s();\n\n  var classes = _ref.classes,\n      lat = _ref.lat,\n      lng = _ref.lng;\n\n  var _useState = useState({\n    lat: lat,\n    lng: lng\n  }),\n      mapPosition = _useState[0],\n      setMapPosition = _useState[1];\n\n  var _useState2 = useState({\n    lat: lat,\n    lng: lng\n  }),\n      markerPosition = _useState2[0],\n      setMarkerPosition = _useState2[1];\n\n  var _useState3 = useState(null),\n      address = _useState3[0],\n      setAddress = _useState3[1];\n\n  var _useState4 = useState(false),\n      showCurrLocation = _useState4[0],\n      setShowCurrentLocation = _useState4[1];\n\n  useEffect(function () {\n    console.log(\"Here is new location\", lat, lng);\n    setMapPosition({\n      lat: lat,\n      lng: lng\n    });\n    setMarkerPosition({\n      lat: lat,\n      lng: lng\n    });\n  }, [lat, lng]);\n\n  var onInfoWindowClose = function onInfoWindowClose() {};\n\n  var onCurrentLocation = function onCurrentLocation() {\n    if (!showCurrLocation) {\n      var temp = {\n        lat: 12.9716,\n        lng: 77.5946\n      };\n      Geocode.fromLatLng(temp.lat, temp.lng).then(function (response) {\n        setAddress(response.results[0].formatted_address);\n        setMapPosition(temp);\n        setMarkerPosition(temp);\n      }, function (error) {\n        console.error(error);\n      });\n    }\n\n    setShowCurrentLocation(!showCurrLocation);\n  };\n\n  var onMarkerDragEnd = function onMarkerDragEnd(event) {\n    var newLat = event.latLng.lat();\n    var newLng = event.latLng.lng();\n    Geocode.fromLatLng(newLat, newLng).then(function (response) {\n      setAddress(response.results[0].formatted_address); // const address = response.results[0].formatted_address,\n      //       addressArray =  response.results[0].address_components\n\n      setMapPosition({\n        lat: newLat,\n        lng: newLng\n      });\n      setMarkerPosition({\n        lat: newLat,\n        lng: newLng\n      });\n    }, function (error) {\n      console.error(error);\n    });\n  };\n\n  var onPlaceSelected = function onPlaceSelected(place) {\n    console.log('plc', place);\n    var latValue = place.geometry.location.lat();\n    var lngValue = place.geometry.location.lng();\n    setAddress(place.formatted_address);\n    setMapPosition({\n      lat: latValue,\n      lng: lngValue\n    });\n    setMarkerPosition({\n      lat: latValue,\n      lng: lngValue\n    });\n  };\n\n  var onChangeAddress = function onChangeAddress(e) {\n    console.log(\"Here is address\", e.target.value);\n    setAddress(e.target.value);\n  };\n\n  var AsyncMap = withScriptjs(withGoogleMap(function (props) {\n    return /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 15,\n      defaultCenter: {\n        lat: mapPosition.lat,\n        lng: mapPosition.lng\n      },\n      children: [/*#__PURE__*/_jsxDEV(InfoWindow, {\n        onClose: onInfoWindowClose,\n        position: {\n          lat: markerPosition.lat + 0.0018,\n          lng: markerPosition.lng\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              padding: 0,\n              margin: 0\n            },\n            children: address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Marker, {\n        name: 'Dolores park',\n        draggable: true,\n        onDragEnd: onMarkerDragEnd,\n        position: {\n          lat: markerPosition.lat,\n          lng: markerPosition.lng\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Marker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(_Container, {\n        children: [/*#__PURE__*/_jsxDEV(_Box, {\n          className: classes.useCurrent,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            variant: \"body2\",\n            style: {\n              marginRight: 10,\n              marginBottom: 0\n            },\n            ffamily: \"Poppins\",\n            children: \"Use Current Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(_Switch, {\n            checked: showCurrLocation,\n            onChange: onCurrentLocation,\n            name: \"checkedA\",\n            inputProps: {\n              'aria-label': 'secondary checkbox'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(_Box, {\n          className: classes.autoCompWrapper,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            onPlaceSelected: onPlaceSelected,\n            className: classes.autoComplete,\n            types: ['(regions)'],\n            placeholder: address // componentRestrictions={{country: \"ru\"}}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(_Box, {\n          style: {\n            marginBottom: 15\n          },\n          children: /*#__PURE__*/_jsxDEV(_TextField, {\n            id: \"outlined-basic\",\n            label: \"Address\",\n            variant: \"outlined\",\n            size: \"small\",\n            style: {\n              width: \"100%\"\n            },\n            value: address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(_Box, {\n          style: {\n            marginBottom: 15\n          },\n          children: /*#__PURE__*/_jsxDEV(_TextField, {\n            id: \"outlined-multiline-static\",\n            label: \"Address\",\n            multiline: true,\n            rows: 2,\n            variant: \"outlined\",\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(_Box, {\n          style: {\n            paddingBottom: 20\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, _this);\n  }));\n  return /*#__PURE__*/_jsxDEV(AsyncMap, {\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, _this),\n    containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"40%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, _this),\n    mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MyMapComponent, \"QGFwr9ujcuB8r3YUp3ONmeRDsZk=\");\n\n_c = MyMapComponent;\nMyMapComponent.propTypes = {\n  lat: PropTypes.number,\n  lng: PropTypes.number,\n  // eslint-disable-next-line react/forb,id-prop-types\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(MyMapComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyMapComponent\");","map":{"version":3,"sources":["/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/map/index.js"],"names":["React","useEffect","useState","ReactDOM","compose","withProps","withStyles","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","Geocode","Autocomplete","PropTypes","Text","Button","setApiKey","enableDebug","styles","theme","root","autoComplete","width","autoCompWrapper","marginBottom","marginTop","useCurrent","display","alignItems","MyMapComponent","classes","lat","lng","mapPosition","setMapPosition","markerPosition","setMarkerPosition","address","setAddress","showCurrLocation","setShowCurrentLocation","console","log","onInfoWindowClose","onCurrentLocation","temp","fromLatLng","then","response","results","formatted_address","error","onMarkerDragEnd","event","newLat","latLng","newLng","onPlaceSelected","place","latValue","geometry","location","lngValue","onChangeAddress","e","target","value","AsyncMap","props","padding","margin","marginRight","paddingBottom","height","propTypes","number","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { compose, withProps } from \"recompose\";\nimport { Box, Container, Switch, TextField } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nimport PropTypes from 'prop-types'\nimport Text from '../text'\nimport Button from '../button'\n\nGeocode.setApiKey(\"AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw\");\nGeocode.enableDebug();\n\n\nconst styles = (theme) => ({\n    root : {\n\n    },\n    autoComplete : {\n        // backgroundColor : \"red\",\n        width : \"100%\"\n    },\n    autoCompWrapper : {\n        marginBottom : 20,\n        marginTop : 20\n    },\n    useCurrent : {\n        display : \"flex\",\n        alignItems : \"center\",\n        marginBottom : 10\n    },\n})\n\nconst MyMapComponent = ({ classes, lat, lng }) => {\n    const [mapPosition, setMapPosition] = useState({ lat , lng })\n    const [markerPosition, setMarkerPosition] = useState({ lat , lng })\n    const [address, setAddress] = useState(null)\n    const [showCurrLocation, setShowCurrentLocation] = useState(false)\n\n    useEffect(() => {\n        console.log(\"Here is new location\",lat,lng)\n        setMapPosition({ lat , lng })\n        setMarkerPosition({ lat , lng })\n    },[lat,lng])\n    \n    const onInfoWindowClose = () => {\n\n    }\n\n    const onCurrentLocation  = () => {\n        if(!showCurrLocation){\n            let temp = { lat : 12.9716, lng : 77.5946 }\n            \n            Geocode.fromLatLng( temp.lat , temp.lng ).then(\n                response => {\n                    setAddress(response.results[0].formatted_address)\n                    setMapPosition(temp)\n                    setMarkerPosition(temp)\n                },\n                error => {\n                    console.error(error);\n                }\n            );\n        }\n        setShowCurrentLocation(!showCurrLocation)\n    }\n\n    const onMarkerDragEnd = ( event ) => {\n\t\tconst newLat = event.latLng.lat()\n\t    const newLng = event.latLng.lng()\n\n\t\tGeocode.fromLatLng( newLat , newLng ).then(\n\t\t\tresponse => {\n                setAddress(response.results[0].formatted_address)\n\t\t\t\t// const address = response.results[0].formatted_address,\n\t\t\t\t//       addressArray =  response.results[0].address_components\n                    setMapPosition({ lat: newLat, lng: newLng})\n                    setMarkerPosition({ lat: newLat, lng: newLng})\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t);\n    };\n    \n    const onPlaceSelected = ( place ) => {\n        console.log( 'plc', place )\n        const latValue = place.geometry.location.lat()\n\t\tconst lngValue = place.geometry.location.lng()\n        setAddress(place.formatted_address)\n        setMapPosition({ lat: latValue, lng: lngValue})\n        setMarkerPosition({ lat: latValue, lng: lngValue})\n    }\n    \n    const onChangeAddress = (e) => {\n        console.log(\"Here is address\",e.target.value)\n        setAddress(e.target.value)\n    }\n    const AsyncMap = withScriptjs(\n        withGoogleMap(\n            props => (\n                <GoogleMap \n                    defaultZoom={15}\n                    defaultCenter={{ lat: mapPosition.lat, lng: mapPosition.lng }}\n                    \n                >\n                    {/* InfoWindow on top of marker */}\n                    <InfoWindow\n                        onClose={onInfoWindowClose}\n                        position={{ lat: ( markerPosition.lat + 0.0018 ), lng: markerPosition.lng }}\n                    >\n                        <div>\n                            <span style={{ padding: 0, margin: 0 }}>{ address }</span>\n                        </div>\n                    </InfoWindow>\n                    {/*Marker*/}\n                    <Marker \n                        name={'Dolores park'}\n                        draggable={true}\n                        onDragEnd={ onMarkerDragEnd }\n                        position={{ lat: markerPosition.lat, lng: markerPosition.lng }}\n                    />\n                    <Marker />\n                    {/* For Auto complete Search Box */}\n                    <Container>\n                        <Box className={classes.useCurrent}>\n                            <Text variant=\"body2\" style={{ marginRight : 10, marginBottom : 0}} ffamily=\"Poppins\">Use Current Location</Text>\n                            <Switch\n                                checked={showCurrLocation}\n                                onChange={onCurrentLocation}\n                                name=\"checkedA\"\n                                inputProps={{ 'aria-label': 'secondary checkbox' }}\n                            />\n                        </Box>\n                        <Box className={classes.autoCompWrapper}>\n                            <Autocomplete\n                                onPlaceSelected={onPlaceSelected}\n                                className={classes.autoComplete}\n                                types={['(regions)']}\n                                placeholder={address}\n                                // componentRestrictions={{country: \"ru\"}}\n                            /> \n                        </Box>\n                        <Box style={{ marginBottom : 15}}>\n                            <TextField id=\"outlined-basic\" label=\"Address\" variant=\"outlined\" size=\"small\" style={{ width : \"100%\"}} value={address}/>\n                        </Box>\n                        <Box style={{ marginBottom : 15}}>\n                            <TextField\n                                id=\"outlined-multiline-static\"\n                                label=\"Address\"\n                                multiline\n                                rows={2}\n                                variant=\"outlined\"\n                                style={{ width : \"100%\"}}\n                            />\n                        </Box>\n                        <Box style={{ paddingBottom : 20,}}>\n                            <Button>Add</Button>\n                        </Box>\n                    </Container>\n                </GoogleMap>\n            )\n        )\n    )\n\n    return (\n    <AsyncMap\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places`}\n        loadingElement={\n            <div style={{ height: `100%` }} />\n        }\n        containerElement={\n            <div style={{ height: `40%` }} />\n        }\n        mapElement={\n            <div style={{ height: `100%` }} />\n        }\n        \n        />\n        )\n    \n}\n\nMyMapComponent.propTypes = {\n    lat : PropTypes.number,\n    lng : PropTypes.number,\n // eslint-disable-next-line react/forb,id-prop-types\n classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(MyMapComponent)\n"]},"metadata":{},"sourceType":"module"}