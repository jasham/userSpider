{"ast":null,"code":"import _Container from \"@material-ui/core/Container\";\nimport _TextField from \"@material-ui/core/TextField\";\nimport _Box from \"@material-ui/core/Box\";\nimport _Switch from \"@material-ui/core/Switch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/map/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { compose, withProps } from \"recompose\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nimport PropTypes from 'prop-types';\nimport Text from '../text';\nimport Button from '../button';\nimport { getCookie } from \"../../lib/utility/apiWrapper\";\nGeocode.setApiKey(\"AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw\");\nGeocode.enableDebug();\n\nvar styles = function styles(theme) {\n  return {\n    root: {},\n    autoComplete: {\n      // backgroundColor : \"red\",\n      width: \"100%\",\n      padding: 12,\n      \"&:focus\": {\n        outline: \"1px solid transparent\",\n        border: \"2px solid #34A76C\",\n        borderRadius: 5\n      }\n    },\n    autoCompWrapper: {\n      marginBottom: 20,\n      marginTop: 20\n    },\n    useCurrent: {\n      display: \"flex\",\n      alignItems: \"center\",\n      marginBottom: 10\n    }\n  };\n};\n\nvar MyMapComponent = function MyMapComponent(_ref) {\n  _s();\n\n  var classes = _ref.classes,\n      lat = _ref.lat,\n      lng = _ref.lng;\n\n  var _useState = useState({\n    lat: lat,\n    lng: lng\n  }),\n      mapPosition = _useState[0],\n      setMapPosition = _useState[1];\n\n  var _useState2 = useState({\n    lat: lat,\n    lng: lng\n  }),\n      markerPosition = _useState2[0],\n      setMarkerPosition = _useState2[1];\n\n  var _useState3 = useState(null),\n      address = _useState3[0],\n      setAddress = _useState3[1];\n\n  var _useState4 = useState(null),\n      address2 = _useState4[0],\n      setAddress2 = _useState4[1];\n\n  var _useState5 = useState(false),\n      showCurrLocation = _useState5[0],\n      setShowCurrentLocation = _useState5[1];\n\n  useEffect(function () {\n    console.log(\"Here is new location\", lat, lng); // setMapPosition({ lat , lng })\n    // setMarkerPosition({ lat , lng })\n    // Geocode.fromLatLng( lat , lng ).then(\n    // \tresponse => {\n    //         setAddress(response.results[0].formatted_address)\n    // \t},\n    // \terror => {\n    // \t\tconsole.error(error);\n    // \t}\n    // );\n  }, [lat, lng]);\n\n  var onInfoWindowClose = function onInfoWindowClose() {\n    console.log(\"I am clicked\");\n  };\n\n  var onCurrentLocation = function onCurrentLocation() {\n    if (!showCurrLocation) {\n      var temp;\n      navigator.geolocation.getCurrentPosition(function (position) {\n        temp = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        Geocode.fromLatLng(temp.lat, temp.lng).then(function (response) {\n          setAddress(response.results[0].formatted_address);\n          setMapPosition(temp);\n          setMarkerPosition(temp);\n        }, function (error) {\n          console.error(error);\n        });\n      });\n    }\n\n    setShowCurrentLocation(!showCurrLocation);\n  };\n\n  var onMarkerDragEnd = function onMarkerDragEnd(event) {\n    var newLat = event.latLng.lat();\n    var newLng = event.latLng.lng();\n    Geocode.fromLatLng(newLat, newLng).then(function (response) {\n      setAddress(response.results[0].formatted_address); // const address = response.results[0].formatted_address,\n      //       addressArray =  response.results[0].address_components\n\n      setMapPosition({\n        lat: newLat,\n        lng: newLng\n      });\n      setMarkerPosition({\n        lat: newLat,\n        lng: newLng\n      });\n    }, function (error) {\n      console.error(error);\n    });\n  };\n\n  var onPlaceSelected = function onPlaceSelected(place) {\n    console.log('plc', place);\n    var latValue = place.geometry.location.lat();\n    var lngValue = place.geometry.location.lng();\n    setAddress(place.formatted_address);\n    setMapPosition({\n      lat: latValue,\n      lng: lngValue\n    });\n    setMarkerPosition({\n      lat: latValue,\n      lng: lngValue\n    });\n  };\n\n  var onChangeAddress = function onChangeAddress(e) {\n    setAddress(e.target.value);\n  };\n\n  var onChangeAddress2 = function onChangeAddress2(e) {\n    setAddress2(e.target.value);\n  };\n\n  var onAdd = function onAdd() {\n    if (address) {\n      var tempVal = {\n        address1: address,\n        address2: address2,\n        lattitude: markerPosition.lat,\n        longitude: markerPosition.lng,\n        user_id: getCookie('user_id')\n      };\n      console.log(\"I am clicked bro\", tempVal);\n    }\n  };\n\n  var AsyncMap = withScriptjs(withGoogleMap(function (props) {\n    return /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 15,\n      defaultCenter: {\n        lat: mapPosition.lat,\n        lng: mapPosition.lng\n      },\n      children: [/*#__PURE__*/_jsxDEV(InfoWindow, {\n        onClose: onInfoWindowClose,\n        position: {\n          lat: markerPosition.lat + 0.0018,\n          lng: markerPosition.lng\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              padding: 0,\n              margin: 0\n            },\n            children: address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Marker, {\n        name: 'Dolores park',\n        draggable: true,\n        onDragEnd: onMarkerDragEnd,\n        position: {\n          lat: markerPosition.lat,\n          lng: markerPosition.lng\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Marker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(_Container, {\n        children: [/*#__PURE__*/_jsxDEV(_Box, {\n          className: classes.useCurrent,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            variant: \"body2\",\n            style: {\n              marginRight: 10,\n              marginBottom: 0\n            },\n            ffamily: \"Poppins\",\n            children: \"Use Current Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(_Switch, {\n            checked: showCurrLocation,\n            onChange: onCurrentLocation,\n            name: \"checkedA\",\n            inputProps: {\n              'aria-label': 'secondary checkbox'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(_Box, {\n          className: classes.autoCompWrapper,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            onPlaceSelected: onPlaceSelected,\n            className: classes.autoComplete,\n            types: ['(regions)'],\n            placeholder: address,\n            componentRestrictions: {\n              country: \"in\"\n            },\n            disabled: showCurrLocation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(_Box, {\n          style: {\n            marginBottom: 15\n          },\n          children: /*#__PURE__*/_jsxDEV(_TextField, {\n            disabled: true,\n            id: \"outlined-basic\",\n            label: \"Address 1\",\n            variant: \"outlined\",\n            size: \"small\",\n            style: {\n              width: \"100%\"\n            },\n            value: address,\n            onChange: onChangeAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(_Box, {\n          style: {\n            marginBottom: 15\n          },\n          children: /*#__PURE__*/_jsxDEV(_TextField, {\n            id: \"outlined-multiline-static\",\n            label: \"Address 2\",\n            multiline: true,\n            rows: 2,\n            variant: \"outlined\",\n            style: {\n              width: \"100%\"\n            },\n            onChange: onChangeAddress2,\n            value: address2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(_Box, {\n          style: {\n            paddingBottom: 20\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onAdd,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }, _this);\n  }));\n  return /*#__PURE__*/_jsxDEV(AsyncMap, {\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, _this),\n    containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, _this),\n    mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"30%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MyMapComponent, \"cCMYlmDgCmfrgZnbnk7jJogyyFQ=\");\n\n_c = MyMapComponent;\nMyMapComponent.propTypes = {\n  lat: PropTypes.number,\n  lng: PropTypes.number,\n  // eslint-disable-next-line react/forb,id-prop-types\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(MyMapComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyMapComponent\");","map":{"version":3,"sources":["/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/map/index.js"],"names":["React","useEffect","useState","ReactDOM","compose","withProps","withStyles","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","Geocode","Autocomplete","PropTypes","Text","Button","getCookie","setApiKey","enableDebug","styles","theme","root","autoComplete","width","padding","outline","border","borderRadius","autoCompWrapper","marginBottom","marginTop","useCurrent","display","alignItems","MyMapComponent","classes","lat","lng","mapPosition","setMapPosition","markerPosition","setMarkerPosition","address","setAddress","address2","setAddress2","showCurrLocation","setShowCurrentLocation","console","log","onInfoWindowClose","onCurrentLocation","temp","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fromLatLng","then","response","results","formatted_address","error","onMarkerDragEnd","event","newLat","latLng","newLng","onPlaceSelected","place","latValue","geometry","location","lngValue","onChangeAddress","e","target","value","onChangeAddress2","onAdd","tempVal","address1","lattitude","user_id","AsyncMap","props","margin","marginRight","country","paddingBottom","height","propTypes","number","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { compose, withProps } from \"recompose\";\nimport { Box, Container, Switch, TextField } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nimport PropTypes from 'prop-types'\nimport Text from '../text'\nimport Button from '../button'\nimport { getCookie } from \"../../lib/utility/apiWrapper\";\n\nGeocode.setApiKey(\"AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw\");\nGeocode.enableDebug();\n\n\nconst styles = (theme) => ({\n    root : {\n\n    },\n    autoComplete : {\n        // backgroundColor : \"red\",\n        width : \"100%\",\n        padding : 12,\n        \"&:focus\":{\n            outline : \"1px solid transparent\",\n            border : \"2px solid #34A76C\",\n            borderRadius : 5\n        }\n    },\n    autoCompWrapper : {\n        marginBottom : 20,\n        marginTop : 20\n    },\n    useCurrent : {\n        display : \"flex\",\n        alignItems : \"center\",\n        marginBottom : 10\n    },\n})\n\nconst MyMapComponent = ({ classes, lat, lng }) => {\n    const [mapPosition, setMapPosition] = useState({ lat , lng })\n    const [markerPosition, setMarkerPosition] = useState({ lat , lng })\n    const [address, setAddress] = useState(null)\n    const [address2, setAddress2] = useState(null)\n    const [showCurrLocation, setShowCurrentLocation] = useState(false)\n\n    useEffect(() => {\n        console.log(\"Here is new location\",lat,lng)\n        // setMapPosition({ lat , lng })\n        // setMarkerPosition({ lat , lng })\n        // Geocode.fromLatLng( lat , lng ).then(\n\t\t// \tresponse => {\n        //         setAddress(response.results[0].formatted_address)\n\t\t// \t},\n\t\t// \terror => {\n\t\t// \t\tconsole.error(error);\n\t\t// \t}\n\t\t// );\n    },[lat,lng])\n    \n    const onInfoWindowClose = () => {\n        console.log(\"I am clicked\")\n    }\n\n    const onCurrentLocation  = () => {\n        if(!showCurrLocation){\n            let temp \n            navigator.geolocation.getCurrentPosition((position) => {\n                temp = {\n                    lat : position.coords.latitude,\n                    lng : position.coords.longitude\n                }\n                Geocode.fromLatLng( temp.lat , temp.lng ).then(\n                    response => {\n                        setAddress(response.results[0].formatted_address)\n                        setMapPosition(temp)\n                        setMarkerPosition(temp)\n                    },\n                    error => {\n                        console.error(error);\n                    }\n                );\n            })\n        }\n        setShowCurrentLocation(!showCurrLocation)\n    }\n\n    const onMarkerDragEnd = ( event ) => {\n\t\tconst newLat = event.latLng.lat()\n\t    const newLng = event.latLng.lng()\n\n\t\tGeocode.fromLatLng( newLat , newLng ).then(\n\t\t\tresponse => {\n                setAddress(response.results[0].formatted_address)\n\t\t\t\t// const address = response.results[0].formatted_address,\n\t\t\t\t//       addressArray =  response.results[0].address_components\n                    setMapPosition({ lat: newLat, lng: newLng})\n                    setMarkerPosition({ lat: newLat, lng: newLng})\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t);\n    };\n    \n    const onPlaceSelected = ( place ) => {\n        console.log( 'plc', place )\n        const latValue = place.geometry.location.lat()\n\t\tconst lngValue = place.geometry.location.lng()\n        setAddress(place.formatted_address)\n        setMapPosition({ lat: latValue, lng: lngValue})\n        setMarkerPosition({ lat: latValue, lng: lngValue})\n    }\n    \n    const onChangeAddress = (e) => {\n        setAddress(e.target.value)\n    }\n\n    const onChangeAddress2 = (e) => {\n        setAddress2(e.target.value)\n    }\n\n    const onAdd = () => {\n        if(address){\n            let tempVal = {\n                address1 : address,\n                address2 : address2,\n                lattitude : markerPosition.lat,\n                longitude : markerPosition.lng,\n                user_id : getCookie('user_id')\n            }\n            console.log(\"I am clicked bro\",tempVal)\n        }\n    }\n    const AsyncMap = withScriptjs(\n        withGoogleMap(\n            props => (\n                <GoogleMap \n                    defaultZoom={15}\n                    defaultCenter={{ lat: mapPosition.lat, lng: mapPosition.lng }}\n                >\n                    {/* InfoWindow on top of marker */}\n                    <InfoWindow\n                        onClose={onInfoWindowClose}\n                        position={{ lat: ( markerPosition.lat + 0.0018 ), lng: markerPosition.lng }}\n                    >\n                        <div>\n                            <span style={{ padding: 0, margin: 0 }}>{ address }</span>\n                        </div>\n                    </InfoWindow>\n                    {/*Marker*/}\n                    <Marker \n                        name={'Dolores park'}\n                        draggable={true}\n                        onDragEnd={ onMarkerDragEnd }\n                        position={{ lat: markerPosition.lat, lng: markerPosition.lng }}\n                    />\n                    <Marker />\n                    {/* For Auto complete Search Box */}\n                    <Container>\n                        <Box className={classes.useCurrent}>\n                            <Text variant=\"body2\" style={{ marginRight : 10, marginBottom : 0}} ffamily=\"Poppins\">Use Current Location</Text>\n                            <Switch\n                                checked={showCurrLocation}\n                                onChange={onCurrentLocation}\n                                name=\"checkedA\"\n                                inputProps={{ 'aria-label': 'secondary checkbox' }}\n                            />\n                        </Box>\n                        <Box className={classes.autoCompWrapper}>\n                            <Autocomplete\n                                onPlaceSelected={onPlaceSelected}\n                                className={classes.autoComplete}\n                                types={['(regions)']}\n                                placeholder={address}\n                                componentRestrictions={{country: \"in\"}}\n                                disabled={showCurrLocation}\n\n                            /> \n                        </Box>\n                        <Box style={{ marginBottom : 15}}>\n                            <TextField \n                                disabled \n                                id=\"outlined-basic\" \n                                label=\"Address 1\" \n                                variant=\"outlined\" \n                                size=\"small\" \n                                style={{ width : \"100%\"}} \n                                value={address} \n                                onChange={onChangeAddress} \n                            />\n                        </Box>\n                        <Box style={{ marginBottom : 15}}>\n                            <TextField\n                                id=\"outlined-multiline-static\"\n                                label=\"Address 2\"\n                                multiline\n                                rows={2}\n                                variant=\"outlined\"\n                                style={{ width : \"100%\"}}\n                                onChange={onChangeAddress2}\n                                value={address2}\n                            />\n                        </Box>\n                        <Box style={{ paddingBottom : 20,}} >\n                            <Button onClick={onAdd}>Add</Button>\n                        </Box>\n                    </Container>\n                </GoogleMap>\n            )\n        )\n    )\n\n    return (\n    <AsyncMap\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places`}\n        loadingElement={\n            <div style={{ height: `100%` }} />\n        }\n        containerElement={\n            <div style={{ height: `100%` }} />\n        }\n        mapElement={\n            <div style={{ height: `30%` }} />\n        }\n        \n        />\n        )\n    \n}\n\nMyMapComponent.propTypes = {\n    lat : PropTypes.number,\n    lng : PropTypes.number,\n // eslint-disable-next-line react/forb,id-prop-types\n classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(MyMapComponent)\n"]},"metadata":{},"sourceType":"module"}