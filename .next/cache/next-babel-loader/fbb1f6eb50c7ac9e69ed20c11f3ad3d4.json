{"ast":null,"code":"import _Container from \"@material-ui/core/Container\";\nimport _List from \"@material-ui/core/List\";\nimport _Collapse from \"@material-ui/core/Collapse\";\nimport _ListItem from \"@material-ui/core/ListItem\";\nimport _ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport _ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport _ListItemText from \"@material-ui/core/ListItemText\";\nimport _Box from \"@material-ui/core/Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/modules/servicePage/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Buttons from '../../components/button';\nimport { useRouter } from 'next/router';\nimport { GlobalContext } from '../../../pages/_app';\nimport Text from '../../components/text';\nimport BookingDialog from '../../components/bookingDialog';\nimport { ALERT_DIALOG, LOGIN_MODAL_STATUS, BOOKING_ALERT_STATUS, ERROR_DESCRIPTION, ERROR_TITLE, SIGN_UP_MODAL_STATUS } from '../../lib/utility/type';\nimport Booking from '../../components/bookings';\nimport { subCatService } from '../../lib/services/home';\nimport { getCookie } from '../../lib/utility/apiWrapper';\nimport Login from '../../components/loginModal';\nimport SignUp from '../../components/signUp';\nimport AlertDialog from '../../components/alert';\n\nconst styles = theme => ({\n  root: {},\n  banner: {\n    backgroundImage: props => `url(${props.bannerImage})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    width: \"100%\",\n    height: 300,\n    borderRadius: 10,\n    boxShadow: \"0px 16px 24px rgba(0, 0, 0, 0.06), 0px 2px 6px rgba(0, 0, 0, 0.04), 0px 0px 1px rgba(0, 0, 0, 0.04)\",\n    marginTop: 20,\n    marginBottom: 20,\n    position: \"relative\"\n  },\n  subBanner: {\n    position: \"absolute\",\n    width: \"100%\",\n    // height : \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    padding: 30\n  },\n  button: {\n    width: 100\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n    fontFamily: \"Poppins\"\n  },\n  listHeadText: {\n    '.MuiListItemText-multiline': {\n      fontFamily: \"Poppins\"\n    }\n  }\n});\n\nconst ServicePage = ({\n  classes,\n  bannerImage,\n  query\n}) => {\n  const router = useRouter();\n  const [open, setOpen] = React.useState(true);\n  const {\n    0: categorySelect,\n    1: setCategorySelect\n  } = useState([]);\n  const {\n    0: groupId,\n    1: setGroupId\n  } = useState(null);\n  const {\n    0: serviceList,\n    1: setServiceList\n  } = useState({});\n  const globalContext = useContext(GlobalContext);\n  const {\n    0: currentCategory,\n    1: setCurrentCategory\n  } = useState(null);\n  const {\n    0: currentService,\n    1: setCurrentService\n  } = useState([]);\n  const {\n    0: serviceData,\n    1: setServiceData\n  } = useState([]);\n  const {\n    0: selectedDate,\n    1: setSelectedDate\n  } = useState(null);\n  const {\n    0: selectedTime,\n    1: setSelectedTime\n  } = useState(null);\n  const {\n    0: bgUrl,\n    1: setBgUrl\n  } = useState(null);\n  const {\n    0: serviceName,\n    1: setServiceName\n  } = useState(null);\n  const {\n    0: serviceDescription,\n    1: setServiceDesciption\n  } = useState(null);\n  useEffect(async () => {\n    await subCatService().then(cdata => {\n      let tempArr = [];\n      let tempArr2 = [];\n      let tempObj = {};\n      let tempGid = {};\n\n      if (query.id) {\n        cdata.data.map(eachData => {\n          if (eachData.sub_category && eachData.icon_url && query.id == eachData._id) {\n            tempArr2 = [];\n            eachData.service.map(serviceData => {\n              tempArr2.push({\n                id: serviceData._id,\n                label: serviceData.service\n              });\n            });\n            tempObj = _objectSpread({\n              [eachData._id]: tempArr2\n            }, tempObj);\n            tempGid = _objectSpread({\n              [eachData._id]: eachData.group_id\n            }, tempGid);\n            tempArr.push({\n              id: eachData._id,\n              label: eachData.sub_category,\n              icon_url: eachData.icon_url,\n              bannerUrl: eachData.banner_url\n            });\n            setBgUrl(eachData.banner_url);\n            setServiceName(eachData.sub_category);\n            setServiceDesciption(\"Description\");\n          }\n        });\n        setCategorySelect(tempArr);\n        setServiceList(tempObj);\n        setGroupId(tempGid);\n      }\n    });\n  }, []);\n\n  const onClickCollapse = () => {\n    setOpen(!open);\n  };\n\n  const onClickBook = () => {\n    globalContext.allDispatch({\n      type: BOOKING_ALERT_STATUS,\n      value: true\n    });\n  };\n\n  const onChangeCategory = e => {\n    setCurrentCategory(e.target.value);\n    setServiceData(serviceList[e.target.value]);\n  };\n\n  const onChangeServices = e => {\n    setCurrentService(e.target.value);\n  };\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = time => {\n    setSelectedTime(time);\n  };\n\n  const onSubmit = () => {\n    if (currentCategory && currentService && selectedDate && selectedTime) {\n      if (getCookie('token')) {\n        let finalData = {\n          sub_category_id: currentCategory,\n          group_id: groupId[currentCategory]\n        };\n        router.push('/order');\n      } else {\n        globalContext.allDispatch({\n          type: LOGIN_MODAL_STATUS,\n          value: true\n        });\n      }\n    } else {\n      globalContext.allDispatch({\n        type: ERROR_DESCRIPTION,\n        value: \"Please enter all mandatory fields.\"\n      });\n      globalContext.allDispatch({\n        type: ERROR_TITLE,\n        value: \"Missing Fields\"\n      });\n      globalContext.allDispatch({\n        type: ALERT_DIALOG,\n        value: true\n      });\n    }\n  };\n\n  const closeLogin = () => {\n    globalContext.allDispatch({\n      type: LOGIN_MODAL_STATUS,\n      value: false\n    });\n  };\n\n  const closeSignUp = () => {\n    globalContext.allDispatch({\n      type: SIGN_UP_MODAL_STATUS,\n      value: false\n    });\n  };\n\n  const handleCloseBookingDialog = () => {\n    globalContext.allDispatch({\n      type: BOOKING_ALERT_STATUS,\n      value: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Container, {\n    children: [console.log(\"We are aweomse\", query), /*#__PURE__*/_jsxDEV(_Box, {\n      className: classes.banner,\n      style: {\n        backgroundImage: `url(${bgUrl})`\n      },\n      children: /*#__PURE__*/_jsxDEV(_Box, {\n        className: classes.subBanner,\n        children: /*#__PURE__*/_jsxDEV(Buttons, {\n          className: classes.button,\n          onClick: onClickBook,\n          children: \"Book Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Box, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        ffamily: \"Poppins\",\n        fWeight: 500,\n        variant: \"h6\",\n        children: serviceName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        ffamily: \"Poppins\",\n        variant: \"body2\",\n        component: \"p\",\n        children: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_List, {\n      component: \"nav\",\n      \"aria-labelledby\": \"nested-list-subheader\",\n      children: [/*#__PURE__*/_jsxDEV(_ListItem, {\n        button: true,\n        onClick: onClickCollapse,\n        children: [/*#__PURE__*/_jsxDEV(_ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Text, {\n            children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), open ? /*#__PURE__*/_jsxDEV(_ExpandLess, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_ExpandMore, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Collapse, {\n        in: open,\n        timeout: \"auto\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          className: classes.nested,\n          variant: \"body2\",\n          children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BookingDialog, {\n      open: globalContext.state.bookingAlertStatus,\n      title: globalContext.state.errorTitle,\n      description: globalContext.state.errorDescription,\n      handleClose: handleCloseBookingDialog,\n      children: /*#__PURE__*/_jsxDEV(Booking, {\n        categoryData: categorySelect,\n        onChangeCategory: onChangeCategory,\n        currentCategory: currentCategory,\n        currentService: currentService,\n        onChangeServices: onChangeServices,\n        serviceData: serviceData,\n        handleDateChange: handleDateChange,\n        selectedDate: selectedDate,\n        selectedTime: selectedTime,\n        handleTimeChange: handleTimeChange,\n        onSubmit: onSubmit,\n        closeButton: true,\n        onHandelClose: handleCloseBookingDialog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Login, {\n      open: globalContext.state.loginStatus,\n      handleClose: closeLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SignUp, {\n      open: globalContext.state.signUpStatus,\n      handleClose: closeSignUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AlertDialog, {\n      open: globalContext.state.alertStatus,\n      title: globalContext.state.errorTitle,\n      description: globalContext.state.errorDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 9\n  }, this);\n};\n\nServicePage.propTypes = {\n  bannerImage: PropTypes.string,\n  query: PropTypes.object,\n  // eslint-disable-next-line react/forb,id-prop-types\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ServicePage);","map":{"version":3,"sources":["/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/modules/servicePage/index.js"],"names":["React","useContext","useState","useEffect","withStyles","PropTypes","Buttons","useRouter","GlobalContext","Text","BookingDialog","ALERT_DIALOG","LOGIN_MODAL_STATUS","BOOKING_ALERT_STATUS","ERROR_DESCRIPTION","ERROR_TITLE","SIGN_UP_MODAL_STATUS","Booking","subCatService","getCookie","Login","SignUp","AlertDialog","styles","theme","root","banner","backgroundImage","props","bannerImage","backgroundRepeat","backgroundSize","width","height","borderRadius","boxShadow","marginTop","marginBottom","position","subBanner","display","flexDirection","justifyContent","padding","button","nested","paddingLeft","spacing","fontFamily","listHeadText","ServicePage","classes","query","router","open","setOpen","categorySelect","setCategorySelect","groupId","setGroupId","serviceList","setServiceList","globalContext","currentCategory","setCurrentCategory","currentService","setCurrentService","serviceData","setServiceData","selectedDate","setSelectedDate","selectedTime","setSelectedTime","bgUrl","setBgUrl","serviceName","setServiceName","serviceDescription","setServiceDesciption","then","cdata","tempArr","tempArr2","tempObj","tempGid","id","data","map","eachData","sub_category","icon_url","_id","service","push","label","group_id","bannerUrl","banner_url","onClickCollapse","onClickBook","allDispatch","type","value","onChangeCategory","e","target","onChangeServices","handleDateChange","date","handleTimeChange","time","onSubmit","finalData","sub_category_id","closeLogin","closeSignUp","handleCloseBookingDialog","console","log","state","bookingAlertStatus","errorTitle","errorDescription","loginStatus","signUpStatus","alertStatus","propTypes","string","object","isRequired"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SAASC,YAAT,EAAuBC,kBAAvB,EAA2CC,oBAA3C,EAAiEC,iBAAjE,EAAoFC,WAApF,EAAiGC,oBAAjG,QAA6H,wBAA7H;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,KAAY;AACvBC,EAAAA,IAAI,EAAG,EADgB;AAEvBC,EAAAA,MAAM,EAAG;AACLC,IAAAA,eAAe,EAAGC,KAAK,IAAK,OAAMA,KAAK,CAACC,WAAY,GAD/C;AAELC,IAAAA,gBAAgB,EAAG,WAFd;AAGLC,IAAAA,cAAc,EAAG,OAHZ;AAILC,IAAAA,KAAK,EAAG,MAJH;AAKLC,IAAAA,MAAM,EAAG,GALJ;AAMLC,IAAAA,YAAY,EAAG,EANV;AAOLC,IAAAA,SAAS,EAAE,qGAPN;AAQLC,IAAAA,SAAS,EAAG,EARP;AASLC,IAAAA,YAAY,EAAG,EATV;AAULC,IAAAA,QAAQ,EAAG;AAVN,GAFc;AAcvBC,EAAAA,SAAS,EAAG;AACRD,IAAAA,QAAQ,EAAG,UADH;AAERN,IAAAA,KAAK,EAAG,MAFA;AAGR;AACAQ,IAAAA,OAAO,EAAG,MAJF;AAKRC,IAAAA,aAAa,EAAG,KALR;AAMRC,IAAAA,cAAc,EAAG,UANT;AAORC,IAAAA,OAAO,EAAG;AAPF,GAdW;AAuBvBC,EAAAA,MAAM,EAAG;AACLZ,IAAAA,KAAK,EAAG;AADH,GAvBc;AA0BvBa,EAAAA,MAAM,EAAE;AACJC,IAAAA,WAAW,EAAEtB,KAAK,CAACuB,OAAN,CAAc,CAAd,CADT;AAEJC,IAAAA,UAAU,EAAG;AAFT,GA1Be;AA8BvBC,EAAAA,YAAY,EAAG;AACX,kCAA+B;AAC3BD,MAAAA,UAAU,EAAG;AADc;AADpB;AA9BQ,CAAZ,CAAf;;AAqCA,MAAME,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWtB,EAAAA,WAAX;AAAwBuB,EAAAA;AAAxB,CAAD,KAAqC;AACrD,QAAMC,MAAM,GAAG9C,SAAS,EAAxB;AACA,QAAM,CAAC+C,IAAD,EAAOC,OAAP,IAAkBvD,KAAK,CAACE,QAAN,CAAe,IAAf,CAAxB;AACA,QAAM;AAAA,OAACsD,cAAD;AAAA,OAAiBC;AAAjB,MAAsCvD,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM;AAAA,OAAEwD,OAAF;AAAA,OAAYC;AAAZ,MAA2BzD,QAAQ,CAAC,IAAD,CAAzC;AACA,QAAM;AAAA,OAAE0D,WAAF;AAAA,OAAeC;AAAf,MAAkC3D,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM4D,aAAa,GAAG7D,UAAU,CAACO,aAAD,CAAhC;AACA,QAAM;AAAA,OAACuD,eAAD;AAAA,OAAkBC;AAAlB,MAAwC9D,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM;AAAA,OAAC+D,cAAD;AAAA,OAAiBC;AAAjB,MAAuChE,QAAQ,CAAC,EAAD,CAArD;AACA,QAAM;AAAA,OAAEiE,WAAF;AAAA,OAAeC;AAAf,MAAkClE,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAA,OAACmE,YAAD;AAAA,OAAcC;AAAd,MAAiCpE,QAAQ,CAAC,IAAD,CAA/C;AACA,QAAM;AAAA,OAACqE,YAAD;AAAA,OAAeC;AAAf,MAAkCtE,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM;AAAA,OAACuE,KAAD;AAAA,OAAQC;AAAR,MAAoBxE,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAAEyE,WAAF;AAAA,OAAeC;AAAf,MAAkC1E,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM;AAAA,OAAC2E,kBAAD;AAAA,OAAqBC;AAArB,MAA8C5E,QAAQ,CAAC,IAAD,CAA5D;AAEAC,EAAAA,SAAS,CAAE,YAAY;AACnB,UAAMe,aAAa,GAAG6D,IAAhB,CAAsBC,KAAD,IAAW;AAClC,UAAIC,OAAO,GAAG,EAAd;AACA,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAIC,OAAO,GAAG,EAAd;AACA,UAAIC,OAAO,GAAG,EAAd;;AACA,UAAGhC,KAAK,CAACiC,EAAT,EAAY;AACRL,QAAAA,KAAK,CAACM,IAAN,CAAWC,GAAX,CAAgBC,QAAD,IAAc;AACzB,cAAGA,QAAQ,CAACC,YAAT,IAAyBD,QAAQ,CAACE,QAAlC,IAA8CtC,KAAK,CAACiC,EAAN,IAAYG,QAAQ,CAACG,GAAtE,EAA0E;AACtET,YAAAA,QAAQ,GAAG,EAAX;AACAM,YAAAA,QAAQ,CAACI,OAAT,CAAiBL,GAAjB,CAAsBpB,WAAD,IAAiB;AAClCe,cAAAA,QAAQ,CAACW,IAAT,CAAc;AAAER,gBAAAA,EAAE,EAAGlB,WAAW,CAACwB,GAAnB;AAAwBG,gBAAAA,KAAK,EAAG3B,WAAW,CAACyB;AAA5C,eAAd;AACH,aAFD;AAGAT,YAAAA,OAAO;AAAK,eAACK,QAAQ,CAACG,GAAV,GAAiBT;AAAtB,eAAmCC,OAAnC,CAAP;AACAC,YAAAA,OAAO;AAAK,eAACI,QAAQ,CAACG,GAAV,GAAiBH,QAAQ,CAACO;AAA/B,eAA4CX,OAA5C,CAAP;AACAH,YAAAA,OAAO,CAACY,IAAR,CAAa;AAAER,cAAAA,EAAE,EAAGG,QAAQ,CAACG,GAAhB;AAAqBG,cAAAA,KAAK,EAAGN,QAAQ,CAACC,YAAtC;AAAoDC,cAAAA,QAAQ,EAAGF,QAAQ,CAACE,QAAxE;AAAkFM,cAAAA,SAAS,EAAGR,QAAQ,CAACS;AAAvG,aAAb;AACAvB,YAAAA,QAAQ,CAACc,QAAQ,CAACS,UAAV,CAAR;AACArB,YAAAA,cAAc,CAACY,QAAQ,CAACC,YAAV,CAAd;AACAX,YAAAA,oBAAoB,CAAC,aAAD,CAApB;AACH;AACJ,SAbD;AAcArB,QAAAA,iBAAiB,CAACwB,OAAD,CAAjB;AACApB,QAAAA,cAAc,CAACsB,OAAD,CAAd;AACAxB,QAAAA,UAAU,CAACyB,OAAD,CAAV;AACH;AACJ,KAxBK,CAAN;AAyBH,GA1BQ,EA0BP,EA1BO,CAAT;;AA6BA,QAAMc,eAAe,GAAG,MAAM;AAC1B3C,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACH,GAFD;;AAIA,QAAM6C,WAAW,GAAG,MAAM;AACtBrC,IAAAA,aAAa,CAACsC,WAAd,CAA0B;AACtBC,MAAAA,IAAI,EAAGxF,oBADe;AAEtByF,MAAAA,KAAK,EAAG;AAFc,KAA1B;AAIH,GALD;;AAOA,QAAMC,gBAAgB,GAAIC,CAAD,IAAO;AAC5BxC,IAAAA,kBAAkB,CAACwC,CAAC,CAACC,MAAF,CAASH,KAAV,CAAlB;AACAlC,IAAAA,cAAc,CAACR,WAAW,CAAC4C,CAAC,CAACC,MAAF,CAASH,KAAV,CAAZ,CAAd;AACH,GAHD;;AAKA,QAAMI,gBAAgB,GAAIF,CAAD,IAAO;AAC5BtC,IAAAA,iBAAiB,CAACsC,CAAC,CAACC,MAAF,CAASH,KAAV,CAAjB;AACH,GAFD;;AAIA,QAAMK,gBAAgB,GAAIC,IAAD,IAAU;AAC/BtC,IAAAA,eAAe,CAACsC,IAAD,CAAf;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAIC,IAAD,IAAU;AAC/BtC,IAAAA,eAAe,CAACsC,IAAD,CAAf;AACH,GAFD;;AAIA,QAAMC,QAAQ,GAAG,MAAM;AACnB,QAAGhD,eAAe,IAAIE,cAAnB,IAAqCI,YAArC,IAAqDE,YAAxD,EAAsE;AAClE,UAAGpD,SAAS,CAAC,OAAD,CAAZ,EAAsB;AAClB,YAAI6F,SAAS,GAAG;AACZC,UAAAA,eAAe,EAAGlD,eADN;AAEZgC,UAAAA,QAAQ,EAAGrC,OAAO,CAACK,eAAD;AAFN,SAAhB;AAIAV,QAAAA,MAAM,CAACwC,IAAP,CAAY,QAAZ;AACH,OAND,MAMK;AACD/B,QAAAA,aAAa,CAACsC,WAAd,CAA0B;AACtBC,UAAAA,IAAI,EAAGzF,kBADe;AAEtB0F,UAAAA,KAAK,EAAG;AAFc,SAA1B;AAIH;AACJ,KAbD,MAaK;AACDxC,MAAAA,aAAa,CAACsC,WAAd,CAA0B;AACtBC,QAAAA,IAAI,EAAGvF,iBADe;AAEtBwF,QAAAA,KAAK,EAAG;AAFc,OAA1B;AAIAxC,MAAAA,aAAa,CAACsC,WAAd,CAA0B;AACtBC,QAAAA,IAAI,EAAGtF,WADe;AAEtBuF,QAAAA,KAAK,EAAG;AAFc,OAA1B;AAIAxC,MAAAA,aAAa,CAACsC,WAAd,CAA0B;AACtBC,QAAAA,IAAI,EAAG1F,YADe;AAEtB2F,QAAAA,KAAK,EAAG;AAFc,OAA1B;AAIH;AACJ,GA5BD;;AA8BA,QAAMY,UAAU,GAAI,MAAM;AACtBpD,IAAAA,aAAa,CAACsC,WAAd,CAA0B;AACtBC,MAAAA,IAAI,EAAGzF,kBADe;AAEtB0F,MAAAA,KAAK,EAAG;AAFc,KAA1B;AAIH,GALD;;AAOA,QAAMa,WAAW,GAAG,MAAM;AACtBrD,IAAAA,aAAa,CAACsC,WAAd,CAA0B;AACtBC,MAAAA,IAAI,EAAGrF,oBADe;AAEtBsF,MAAAA,KAAK,EAAG;AAFc,KAA1B;AAIH,GALD;;AAOA,QAAMc,wBAAwB,GAAG,MAAM;AACnCtD,IAAAA,aAAa,CAACsC,WAAd,CAA0B;AACtBC,MAAAA,IAAI,EAAGxF,oBADe;AAEtByF,MAAAA,KAAK,EAAG;AAFc,KAA1B;AAIH,GALD;;AASA,sBACI;AAAA,eACKe,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BlE,KAA7B,CADL,eAEI;AACI,MAAA,SAAS,EAAED,OAAO,CAACzB,MADvB;AAEI,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAI,OAAM8C,KAAM;AAAjC,OAFX;AAAA,6BAII;AAAK,QAAA,SAAS,EAAEtB,OAAO,CAACZ,SAAxB;AAAA,+BACI,QAAC,OAAD;AAAS,UAAA,SAAS,EAAEY,OAAO,CAACP,MAA5B;AAAoC,UAAA,OAAO,EAAEuD,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAYI;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,OAAO,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAE,GAAjC;AAAsC,QAAA,OAAO,EAAE,IAA/C;AAAA,kBACKxB;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,IAAD;AAAM,QAAA,OAAO,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAE,OAAjC;AAA0C,QAAA,SAAS,EAAC,GAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAoBI;AACI,MAAA,SAAS,EAAC,KADd;AAEI,yBAAgB,uBAFpB;AAAA,8BAII;AAAU,QAAA,MAAM,MAAhB;AAAiB,QAAA,OAAO,EAAEuB,eAA1B;AAAA,gCACI;AACI,UAAA,iBAAiB,MADrB;AAEI,UAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFb;AAAA;AAAA;AAAA;AAAA,gBADJ,EAKK5C,IAAI,gBAAG;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAAoB;AAAA;AAAA;AAAA;AAAA,gBAL7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAWI;AAAU,QAAA,EAAE,EAAEA,IAAd;AAAoB,QAAA,OAAO,EAAC,MAA5B;AAAmC,QAAA,aAAa,MAAhD;AAAA,+BAGY,QAAC,IAAD;AAAM,UAAA,SAAS,EAAEH,OAAO,CAACN,MAAzB;AAAiC,UAAA,OAAO,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHZ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ,eAyCI,QAAC,aAAD;AACI,MAAA,IAAI,EAAEiB,aAAa,CAACyD,KAAd,CAAoBC,kBAD9B;AAEI,MAAA,KAAK,EAAE1D,aAAa,CAACyD,KAAd,CAAoBE,UAF/B;AAGI,MAAA,WAAW,EAAE3D,aAAa,CAACyD,KAAd,CAAoBG,gBAHrC;AAII,MAAA,WAAW,EAAEN,wBAJjB;AAAA,6BAMI,QAAC,OAAD;AACI,QAAA,YAAY,EAAE5D,cADlB;AAEI,QAAA,gBAAgB,EAAE+C,gBAFtB;AAGI,QAAA,eAAe,EAAExC,eAHrB;AAII,QAAA,cAAc,EAAEE,cAJpB;AAKI,QAAA,gBAAgB,EAAEyC,gBALtB;AAMI,QAAA,WAAW,EAAEvC,WANjB;AAOI,QAAA,gBAAgB,EAAEwC,gBAPtB;AAQI,QAAA,YAAY,EAAEtC,YARlB;AASI,QAAA,YAAY,EAAEE,YATlB;AAUI,QAAA,gBAAgB,EAAEsC,gBAVtB;AAWI,QAAA,QAAQ,EAAEE,QAXd;AAYI,QAAA,WAAW,EAAE,IAZjB;AAaI,QAAA,aAAa,EAAEK;AAbnB;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YAzCJ,eA+DI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEtD,aAAa,CAACyD,KAAd,CAAoBI,WAAjC;AAA8C,MAAA,WAAW,EAAET;AAA3D;AAAA;AAAA;AAAA;AAAA,YA/DJ,eAgEI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEpD,aAAa,CAACyD,KAAd,CAAoBK,YAAlC;AAAgD,MAAA,WAAW,EAAET;AAA7D;AAAA;AAAA;AAAA;AAAA,YAhEJ,eAiEI,QAAC,WAAD;AAAa,MAAA,IAAI,EAAErD,aAAa,CAACyD,KAAd,CAAoBM,WAAvC;AAAoD,MAAA,KAAK,EAAE/D,aAAa,CAACyD,KAAd,CAAoBE,UAA/E;AAA2F,MAAA,WAAW,EAAE3D,aAAa,CAACyD,KAAd,CAAoBG;AAA5H;AAAA;AAAA;AAAA;AAAA,YAjEJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqEH,CAnMD;;AAqMAxE,WAAW,CAAC4E,SAAZ,GAAuB;AACnBjG,EAAAA,WAAW,EAAGxB,SAAS,CAAC0H,MADL;AAEnB3E,EAAAA,KAAK,EAAG/C,SAAS,CAAC2H,MAFC;AAGnB;AACA7E,EAAAA,OAAO,EAAE9C,SAAS,CAAC2H,MAAV,CAAiBC;AAJP,CAAvB;AAOA,eAAe7H,UAAU,CAACmB,MAAD,CAAV,CAAmB2B,WAAnB,CAAf","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\nimport { Box, Container } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport { Collapse, ListItem, ListItemText, List, ListSubheader } from '@material-ui/core';\nimport Buttons from '../../components/button';\nimport { useRouter } from 'next/router'\nimport { GlobalContext } from '../../../pages/_app'\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\nimport Text from '../../components/text'\nimport BookingDialog from '../../components/bookingDialog'\nimport { ALERT_DIALOG, LOGIN_MODAL_STATUS, BOOKING_ALERT_STATUS, ERROR_DESCRIPTION, ERROR_TITLE, SIGN_UP_MODAL_STATUS } from '../../lib/utility/type'\nimport Booking from '../../components/bookings'\nimport { subCatService } from '../../lib/services/home'\nimport { getCookie } from '../../lib/utility/apiWrapper'\nimport Login from '../../components/loginModal'\nimport SignUp from '../../components/signUp'\nimport AlertDialog from '../../components/alert'\n\nconst styles = (theme) => ({\n    root : {},\n    banner : {\n        backgroundImage : props => `url(${props.bannerImage})`,\n        backgroundRepeat : \"no-repeat\",\n        backgroundSize : \"cover\",\n        width : \"100%\",\n        height : 300,\n        borderRadius : 10,\n        boxShadow: \"0px 16px 24px rgba(0, 0, 0, 0.06), 0px 2px 6px rgba(0, 0, 0, 0.04), 0px 0px 1px rgba(0, 0, 0, 0.04)\",\n        marginTop : 20,\n        marginBottom : 20,\n        position : \"relative\"\n    },\n    subBanner : {\n        position : \"absolute\",\n        width : \"100%\",\n        // height : \"100%\",\n        display : \"flex\",\n        flexDirection : \"row\",\n        justifyContent : \"flex-end\",\n        padding : 30\n    },\n    button : {\n        width : 100,\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n        fontFamily : \"Poppins\"\n    },\n    listHeadText : {\n        '.MuiListItemText-multiline' : {\n            fontFamily : \"Poppins\"\n        }\n    }\n})\n\nconst ServicePage = ({ classes, bannerImage, query }) => {\n    const router = useRouter()\n    const [open, setOpen] = React.useState(true);\n    const [categorySelect, setCategorySelect] = useState([])\n    const [ groupId , setGroupId ] = useState(null)\n    const [ serviceList, setServiceList ] = useState({})\n    const globalContext = useContext(GlobalContext)\n    const [currentCategory, setCurrentCategory] = useState(null)\n    const [currentService, setCurrentService ] = useState([])\n    const [ serviceData, setServiceData ] = useState([])\n    const [selectedDate,setSelectedDate] = useState(null)\n    const [selectedTime, setSelectedTime] = useState(null)\n    const [bgUrl, setBgUrl] = useState(null)\n    const [ serviceName, setServiceName ] = useState(null)\n    const [serviceDescription, setServiceDesciption ] = useState(null)\n       \n    useEffect( async () => {\n        await subCatService().then((cdata) => {\n            let tempArr = []\n            let tempArr2 = []\n            let tempObj = {}\n            let tempGid = {}\n            if(query.id){\n                cdata.data.map((eachData) => {\n                    if(eachData.sub_category && eachData.icon_url && query.id == eachData._id){\n                        tempArr2 = []\n                        eachData.service.map((serviceData) => {\n                            tempArr2.push({ id : serviceData._id, label : serviceData.service })\n                        })\n                        tempObj = { [eachData._id] : tempArr2, ...tempObj }\n                        tempGid = { [eachData._id] : eachData.group_id, ...tempGid}\n                        tempArr.push({ id : eachData._id, label : eachData.sub_category, icon_url : eachData.icon_url, bannerUrl : eachData.banner_url })\n                        setBgUrl(eachData.banner_url)\n                        setServiceName(eachData.sub_category)\n                        setServiceDesciption(\"Description\")\n                    }\n                })\n                setCategorySelect(tempArr)\n                setServiceList(tempObj)\n                setGroupId(tempGid)\n            }\n        })\n    },[])\n\n    \n    const onClickCollapse = () => {\n        setOpen(!open);\n    }\n\n    const onClickBook = () => {\n        globalContext.allDispatch({\n            type : BOOKING_ALERT_STATUS,\n            value : true\n        })\n    }\n\n    const onChangeCategory = (e) => {\n        setCurrentCategory(e.target.value)\n        setServiceData(serviceList[e.target.value])\n    }\n\n    const onChangeServices = (e) => {\n        setCurrentService(e.target.value)\n    }\n\n    const handleDateChange = (date) => {\n        setSelectedDate(date)\n    }\n\n    const handleTimeChange = (time) => {\n        setSelectedTime(time)\n    }\n      \n    const onSubmit = () => {\n        if(currentCategory && currentService && selectedDate && selectedTime ){\n            if(getCookie('token')){\n                let finalData = {\n                    sub_category_id : currentCategory,\n                    group_id : groupId[currentCategory],\n                }\n                router.push('/order')\n            }else{\n                globalContext.allDispatch({\n                    type : LOGIN_MODAL_STATUS,\n                    value : true\n                })\n            }\n        }else{\n            globalContext.allDispatch({\n                type : ERROR_DESCRIPTION,\n                value : \"Please enter all mandatory fields.\"\n            })\n            globalContext.allDispatch({\n                type : ERROR_TITLE,\n                value : \"Missing Fields\"\n            })\n            globalContext.allDispatch({\n                type : ALERT_DIALOG,\n                value : true\n            })\n        }\n    }\n\n    const closeLogin  = () => {\n        globalContext.allDispatch({\n            type : LOGIN_MODAL_STATUS,\n            value : false\n        })\n    }\n\n    const closeSignUp = () => {\n        globalContext.allDispatch({\n            type : SIGN_UP_MODAL_STATUS,\n            value : false\n        })\n    }\n\n    const handleCloseBookingDialog = () => {\n        globalContext.allDispatch({\n            type : BOOKING_ALERT_STATUS,\n            value : false\n        })\n    }\n\n    \n\n    return(\n        <Container>\n            {console.log(\"We are aweomse\",query)}\n            <Box \n                className={classes.banner} \n                style={{ backgroundImage : `url(${bgUrl})`}}\n            >\n                <Box className={classes.subBanner}>\n                    <Buttons className={classes.button} onClick={onClickBook}>\n                        Book Now\n                    </Buttons>\n                </Box>\n            </Box>\n            <Box>\n                <Text ffamily=\"Poppins\" fWeight={500} variant={\"h6\"}>\n                    {serviceName}\n                </Text>\n                <Text ffamily=\"Poppins\" variant={\"body2\"} component=\"p\">\n                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting.\n                </Text>\n            </Box>\n            <List\n                component=\"nav\"\n                aria-labelledby=\"nested-list-subheader\"\n            >\n                <ListItem button onClick={onClickCollapse}>\n                    <ListItemText \n                        disableTypography\n                        primary={<Text>Lorem ipsum dolor sit amet, consectetur adipiscing elit ?</Text>}\n                    />\n                    {open ? <ExpandLess /> : <ExpandMore />}\n                </ListItem> \n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                    {/* <List component=\"div\" variant=\"caption\" disablePadding>\n                        <ListItem button className={classes.nested}> */}\n                            <Text className={classes.nested} variant=\"body2\">\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n                            </Text>\n                        {/* </ListItem>\n                    </List> */}\n                </Collapse>\n            </List>\n            <BookingDialog \n                open={globalContext.state.bookingAlertStatus} \n                title={globalContext.state.errorTitle} \n                description={globalContext.state.errorDescription}\n                handleClose={handleCloseBookingDialog}\n            >\n                <Booking \n                    categoryData={categorySelect}\n                    onChangeCategory={onChangeCategory}\n                    currentCategory={currentCategory}\n                    currentService={currentService}\n                    onChangeServices={onChangeServices}\n                    serviceData={serviceData}\n                    handleDateChange={handleDateChange}\n                    selectedDate={selectedDate}\n                    selectedTime={selectedTime}\n                    handleTimeChange={handleTimeChange}\n                    onSubmit={onSubmit}\n                    closeButton={true}\n                    onHandelClose={handleCloseBookingDialog}\n                />\n            </BookingDialog>\n            <Login open={globalContext.state.loginStatus} handleClose={closeLogin} />\n            <SignUp open={globalContext.state.signUpStatus} handleClose={closeSignUp} />\n            <AlertDialog open={globalContext.state.alertStatus} title={globalContext.state.errorTitle} description={globalContext.state.errorDescription} />\n        </Container>\n    )\n}\n\nServicePage.propTypes ={\n    bannerImage : PropTypes.string,\n    query : PropTypes.object,\n    // eslint-disable-next-line react/forb,id-prop-types\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(ServicePage)"]},"metadata":{},"sourceType":"module"}