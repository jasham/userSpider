{"ast":null,"code":"import _Dialog from \"@material-ui/core/Dialog\";\nimport _DialogActions from \"@material-ui/core/DialogActions\";\nimport _Button from \"@material-ui/core/Button\";\nimport _DialogContent from \"@material-ui/core/DialogContent\";\nimport _Box from \"@material-ui/core/Box\";\nimport _TextField from \"@material-ui/core/TextField\";\nimport _DialogContentText from \"@material-ui/core/DialogContentText\";\nimport _DialogTitle from \"@material-ui/core/DialogTitle\";\nimport _regeneratorRuntime from \"/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/loginModal/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Link from '../link';\nimport { GlobalContext } from '../../../pages/_app';\nimport { LOGIN_MODAL_STATUS, SIGN_UP_MODAL_STATUS, ALERT_DIALOG, ERROR_TITLE, ERROR_DESCRIPTION } from '../../lib/utility/type';\nimport AlertDialog from '../alert';\nimport { validateEmail } from '../../lib/utility/common';\nimport request from '../../lutility/apiWrapper'; // import { login } from '../../lib/services/login'\n\nvar styles = function styles(theme) {\n  return {\n    root: {},\n    textField: {\n      marginBottom: 20\n    },\n    linkWrapper: {\n      display: \"flex\",\n      flexDirection: \"row\"\n    },\n    linkButton: {\n      marginRight: 20\n    }\n  };\n};\n\nvar Login = function Login(_ref) {\n  _s();\n\n  var classes = _ref.classes,\n      open = _ref.open,\n      handleClose = _ref.handleClose;\n\n  var _useState = useState(null),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(null),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(null),\n      errorTitle = _useState3[0],\n      setErrorTitle = _useState3[1];\n\n  var _useState4 = useState(null),\n      errorDescription = _useState4[0],\n      setErrorDescription = _useState4[1];\n\n  var globalContext = useContext(GlobalContext);\n\n  var onSignUp = function onSignUp() {\n    globalContext.allDispatch({\n      type: SIGN_UP_MODAL_STATUS,\n      value: true\n    });\n    globalContext.allDispatch({\n      type: LOGIN_MODAL_STATUS,\n      value: false\n    });\n  };\n\n  var login = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var loginData, stringifiedData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return request({\n                url: '/userlogin',\n                method: \"post\",\n                data: data\n              });\n\n            case 2:\n              loginData = _context.sent;\n\n              if (loginData.result === \"success\") {\n                document.cookie = \"token=\".concat(loginData.token);\n                stringifiedData = JSON.stringify(loginData.data);\n                localStorage.setItem('userInfo', stringifiedData);\n                globalContext.allDispatch({\n                  type: AUTH_STATUS,\n                  value: true\n                });\n              } else if (loginData.result === \"wrongEmail\") {}\n\n              console.log(\"Here is loginData\", loginData);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function login(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onSubmit = function onSubmit() {\n    if (email && password) {\n      if (validateEmail(email)) {\n        if (password.length > 7) {\n          var temp = {\n            emailOrMobile: email,\n            password: password\n          };\n          login(temp);\n        } else {\n          errorFunc(\"Incorrect Password\", \"Minimum password length is 8 charachters.\");\n        }\n      } else {\n        errorFunc(\"Incorrect Email\", \"Please enter correct email and try again.\");\n      }\n    } else {\n      errorFunc(\"Missing Fields\", \"Please enter all mandatory fields.\");\n    }\n  };\n\n  var errorFunc = function errorFunc(title, description) {\n    globalContext.allDispatch({\n      type: ERROR_DESCRIPTION,\n      value: description\n    });\n    globalContext.allDispatch({\n      type: ERROR_TITLE,\n      value: title\n    });\n    globalContext.allDispatch({\n      type: ALERT_DIALOG,\n      value: true\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(_Dialog, {\n      open: open,\n      onClose: handleClose,\n      fullWidth: true,\n      maxWidth: 'sm',\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(_DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(_DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(_DialogContentText, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(_Box, {\n          className: classes.textField,\n          children: /*#__PURE__*/_jsxDEV(_TextField, {\n            id: \"email\",\n            label: \"Email Address\",\n            type: \"email\",\n            fullWidth: true,\n            variant: \"outlined\",\n            value: email,\n            onChange: function onChange(e) {\n              return setEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(_Box, {\n          className: classes.textField,\n          children: /*#__PURE__*/_jsxDEV(_TextField, {\n            id: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            fullWidth: true,\n            variant: \"outlined\",\n            value: password,\n            onChange: function onChange(e) {\n              return setPassword(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(_Box, {\n          className: classes.linkWrapper,\n          children: [/*#__PURE__*/_jsxDEV(_Box, {\n            className: classes.linkButton,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"#\",\n              children: \"Forgot Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 21\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(_Box, {\n            className: classes.linkButton,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"#\",\n              onClick: onSignUp,\n              children: \"Don't have account! Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 21\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(_DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(_Button, {\n          onClick: onSubmit,\n          color: \"primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(_Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(AlertDialog, {\n      open: globalContext.state.alertStatus,\n      title: errorTitle,\n      description: errorDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Login, \"9tlklf/WDCJZeGyBSd4C2fRbHHM=\");\n\n_c = Login;\nLogin.propTypes = {\n  open: PropTypes.bool,\n  handleClose: PropTypes.func,\n  // eslint-disable-next-line react/forb,id-prop-types\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/loginModal/index.js"],"names":["React","useContext","useState","withStyles","PropTypes","Link","GlobalContext","LOGIN_MODAL_STATUS","SIGN_UP_MODAL_STATUS","ALERT_DIALOG","ERROR_TITLE","ERROR_DESCRIPTION","AlertDialog","validateEmail","request","styles","theme","root","textField","marginBottom","linkWrapper","display","flexDirection","linkButton","marginRight","Login","classes","open","handleClose","email","setEmail","password","setPassword","errorTitle","setErrorTitle","errorDescription","setErrorDescription","globalContext","onSignUp","allDispatch","type","value","login","data","url","method","loginData","result","document","cookie","token","stringifiedData","JSON","stringify","localStorage","setItem","AUTH_STATUS","console","log","onSubmit","length","temp","emailOrMobile","errorFunc","title","description","e","target","state","alertStatus","propTypes","bool","func","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Box, Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport Link from '../link'\nimport { GlobalContext } from '../../../pages/_app'\nimport { LOGIN_MODAL_STATUS, SIGN_UP_MODAL_STATUS, ALERT_DIALOG, ERROR_TITLE, ERROR_DESCRIPTION } from '../../lib/utility/type'\nimport AlertDialog from '../alert'\nimport { validateEmail } from '../../lib/utility/common'\nimport request from '../../lutility/apiWrapper'\n\n// import { login } from '../../lib/services/login'\n\nconst styles = (theme) => ({\n    root : {\n\n    },\n    textField : {\n        marginBottom : 20\n    },\n    linkWrapper : {\n        display : \"flex\",\n        flexDirection : \"row\",\n    },\n    linkButton : {\n        marginRight : 20\n    }\n})\n\nconst Login = ({ classes, open, handleClose }) => {\n  const [ email, setEmail ] = useState(null)\n  const [ password, setPassword ] = useState(null)\n  const [errorTitle, setErrorTitle ] = useState(null)\n  const [errorDescription, setErrorDescription ] = useState(null)\n  const globalContext = useContext(GlobalContext)\n  \n  const onSignUp  = () => {\n      globalContext.allDispatch({\n        type : SIGN_UP_MODAL_STATUS,\n        value : true\n      })\n      globalContext.allDispatch({\n        type : LOGIN_MODAL_STATUS,\n        value : false\n      })\n  }\n\n  const login = async (data) => {\n    let loginData = await request({ url : '/userlogin', method : \"post\", data  })\n    if(loginData.result === \"success\"){\n        document.cookie = `token=${loginData.token}`\n        let stringifiedData = JSON.stringify(loginData.data)\n        localStorage.setItem('userInfo',stringifiedData)\n        globalContext.allDispatch({\n            type : AUTH_STATUS,\n            value : true\n        })\n    }else if(loginData.result === \"wrongEmail\"){\n\n    }\n    console.log(\"Here is loginData\",loginData)\n}\n\n\n  const onSubmit = () => {\n    if(email && password){\n      if(validateEmail(email)){\n        if(password.length > 7){\n          let temp = {\n            emailOrMobile : email,\n            password : password\n          }\n          login(temp)\n        }else{\n          errorFunc(\"Incorrect Password\",\"Minimum password length is 8 charachters.\")\n        }\n      }else{\n        errorFunc(\"Incorrect Email\",\"Please enter correct email and try again.\")\n      }\n    }else{\n      errorFunc(\"Missing Fields\",\"Please enter all mandatory fields.\")\n    }\n  }\n\n  const errorFunc = (title,description) => {\n    globalContext.allDispatch({\n      type : ERROR_DESCRIPTION,\n      value : description\n    })\n    globalContext.allDispatch({\n        type : ERROR_TITLE,\n        value : title\n    })\n    globalContext.allDispatch({\n        type : ALERT_DIALOG,\n        value : true\n    })\n  }\n\n  \n  return (\n    <div>\n      <Dialog open={open} onClose={handleClose} fullWidth={true} maxWidth={'sm'} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n          </DialogContentText>\n            <Box className={classes.textField}>\n              <TextField \n                id=\"email\" \n                label=\"Email Address\"\n                type=\"email\"\n                fullWidth variant=\"outlined\" \n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </Box>\n            <Box className={classes.textField}>\n              <TextField \n                id=\"password\" \n                label=\"Password\"\n                type=\"password\"\n                fullWidth variant=\"outlined\" \n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Box>\n            <Box className={classes.linkWrapper}>\n                <Box className={classes.linkButton}>\n                    <Link href=\"#\" >Forgot Password</Link>\n                </Box>\n                <Box className={classes.linkButton}>\n                    <Link href=\"#\" onClick={onSignUp}>Don't have account! Sign Up</Link>   \n                </Box>\n            </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onSubmit} color=\"primary\">\n            Submit\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <AlertDialog open={globalContext.state.alertStatus} title={errorTitle} description={errorDescription} />\n    </div>\n  );\n}\n\n\nLogin.propTypes = {\n    open : PropTypes.bool,\n    handleClose : PropTypes.func,\n    // eslint-disable-next-line react/forb,id-prop-types\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(Login)"]},"metadata":{},"sourceType":"module"}