{"ast":null,"code":"import _Container from \"@material-ui/core/Container\";\nimport _TextField from \"@material-ui/core/TextField\";\nimport _Box from \"@material-ui/core/Box\";\nimport _Switch from \"@material-ui/core/Switch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/map/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { compose, withProps } from \"recompose\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nimport PropTypes from 'prop-types';\nimport Text from '../text';\nimport Button from '../button';\nimport { getCookie } from \"../../lib/utility/apiWrapper\";\nGeocode.setApiKey(\"AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw\");\nGeocode.enableDebug();\n\nconst styles = theme => ({\n  root: {},\n  autoComplete: {\n    // backgroundColor : \"red\",\n    width: \"100%\",\n    padding: 12,\n    \"&:focus\": {\n      outline: \"1px solid transparent\",\n      border: \"2px solid #34A76C\",\n      borderRadius: 5\n    }\n  },\n  autoCompWrapper: {\n    marginBottom: 20,\n    marginTop: 20\n  },\n  useCurrent: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: 10\n  }\n});\n\nconst MyMapComponent = ({\n  classes,\n  lat,\n  lng\n}) => {\n  const {\n    0: mapPosition,\n    1: setMapPosition\n  } = useState({\n    lat,\n    lng\n  });\n  const {\n    0: markerPosition,\n    1: setMarkerPosition\n  } = useState({\n    lat,\n    lng\n  });\n  const {\n    0: address,\n    1: setAddress\n  } = useState(null);\n  const {\n    0: address2,\n    1: setAddress2\n  } = useState(null);\n  const {\n    0: showCurrLocation,\n    1: setShowCurrentLocation\n  } = useState(false);\n  useEffect(() => {\n    console.log(\"Here is new location\", lat, lng);\n    setMapPosition({\n      lat,\n      lng\n    });\n    setMarkerPosition({\n      lat,\n      lng\n    });\n    Geocode.fromLatLng(lat, lng).then(response => {\n      setAddress(response.results[0].formatted_address);\n    }, error => {\n      console.error(error);\n    });\n  }, [lat, lng]);\n\n  const onInfoWindowClose = () => {\n    console.log(\"I am clicked\");\n  };\n\n  const onCurrentLocation = () => {\n    if (!showCurrLocation) {\n      let temp;\n      navigator.geolocation.getCurrentPosition(position => {\n        temp = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        Geocode.fromLatLng(temp.lat, temp.lng).then(response => {\n          setAddress(response.results[0].formatted_address);\n          setMapPosition(temp);\n          setMarkerPosition(temp);\n        }, error => {\n          console.error(error);\n        });\n      });\n    }\n\n    setShowCurrentLocation(!showCurrLocation);\n  };\n\n  const onMarkerDragEnd = event => {\n    const newLat = event.latLng.lat();\n    const newLng = event.latLng.lng();\n    Geocode.fromLatLng(newLat, newLng).then(response => {\n      setAddress(response.results[0].formatted_address); // const address = response.results[0].formatted_address,\n      //       addressArray =  response.results[0].address_components\n\n      setMapPosition({\n        lat: newLat,\n        lng: newLng\n      });\n      setMarkerPosition({\n        lat: newLat,\n        lng: newLng\n      });\n    }, error => {\n      console.error(error);\n    });\n  };\n\n  const onPlaceSelected = place => {\n    console.log('plc', place);\n    const latValue = place.geometry.location.lat();\n    const lngValue = place.geometry.location.lng();\n    setAddress(place.formatted_address);\n    setMapPosition({\n      lat: latValue,\n      lng: lngValue\n    });\n    setMarkerPosition({\n      lat: latValue,\n      lng: lngValue\n    });\n  };\n\n  const onChangeAddress = e => {\n    setAddress(e.target.value);\n  };\n\n  const onChangeAddress2 = e => {\n    setAddress2(e.target.value);\n  };\n\n  const onAdd = () => {\n    if (address1) {\n      let tempVal = {\n        address1: address,\n        address2: address2,\n        lattitude: markerPosition.lat,\n        longitude: markerPosition.lng,\n        user_id: getCookie\n      };\n    }\n\n    console.log(\"I am clicked bro\", tempVal);\n  };\n\n  const AsyncMap = withScriptjs(withGoogleMap(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n    defaultZoom: 15,\n    defaultCenter: {\n      lat: mapPosition.lat,\n      lng: mapPosition.lng\n    },\n    children: [/*#__PURE__*/_jsxDEV(InfoWindow, {\n      onClose: onInfoWindowClose,\n      position: {\n        lat: markerPosition.lat + 0.0018,\n        lng: markerPosition.lng\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            padding: 0,\n            margin: 0\n          },\n          children: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      name: 'Dolores park',\n      draggable: true,\n      onDragEnd: onMarkerDragEnd,\n      position: {\n        lat: markerPosition.lat,\n        lng: markerPosition.lng\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(_Container, {\n      children: [/*#__PURE__*/_jsxDEV(_Box, {\n        className: classes.useCurrent,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          variant: \"body2\",\n          style: {\n            marginRight: 10,\n            marginBottom: 0\n          },\n          ffamily: \"Poppins\",\n          children: \"Use Current Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(_Switch, {\n          checked: showCurrLocation,\n          onChange: onCurrentLocation,\n          name: \"checkedA\",\n          inputProps: {\n            'aria-label': 'secondary checkbox'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(_Box, {\n        className: classes.autoCompWrapper,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          onPlaceSelected: onPlaceSelected,\n          className: classes.autoComplete,\n          types: ['(regions)'],\n          placeholder: address,\n          componentRestrictions: {\n            country: \"in\"\n          },\n          disabled: showCurrLocation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(_Box, {\n        style: {\n          marginBottom: 15\n        },\n        children: /*#__PURE__*/_jsxDEV(_TextField, {\n          disabled: true,\n          id: \"outlined-basic\",\n          label: \"Address 1\",\n          variant: \"outlined\",\n          size: \"small\",\n          style: {\n            width: \"100%\"\n          },\n          value: address,\n          onChange: onChangeAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(_Box, {\n        style: {\n          marginBottom: 15\n        },\n        children: /*#__PURE__*/_jsxDEV(_TextField, {\n          id: \"outlined-multiline-static\",\n          label: \"Address 2\",\n          multiline: true,\n          rows: 2,\n          variant: \"outlined\",\n          style: {\n            width: \"100%\"\n          },\n          onChange: onChangeAddress2,\n          value: address2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(_Box, {\n        style: {\n          paddingBottom: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onAdd,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 17\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(AsyncMap, {\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places`,\n    loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: `100%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this),\n    containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: `100%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this),\n    mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: `30%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n\nMyMapComponent.propTypes = {\n  lat: PropTypes.number,\n  lng: PropTypes.number,\n  // eslint-disable-next-line react/forb,id-prop-types\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(MyMapComponent);","map":{"version":3,"sources":["/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/map/index.js"],"names":["React","useEffect","useState","ReactDOM","compose","withProps","withStyles","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","Geocode","Autocomplete","PropTypes","Text","Button","getCookie","setApiKey","enableDebug","styles","theme","root","autoComplete","width","padding","outline","border","borderRadius","autoCompWrapper","marginBottom","marginTop","useCurrent","display","alignItems","MyMapComponent","classes","lat","lng","mapPosition","setMapPosition","markerPosition","setMarkerPosition","address","setAddress","address2","setAddress2","showCurrLocation","setShowCurrentLocation","console","log","fromLatLng","then","response","results","formatted_address","error","onInfoWindowClose","onCurrentLocation","temp","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","onMarkerDragEnd","event","newLat","latLng","newLng","onPlaceSelected","place","latValue","geometry","location","lngValue","onChangeAddress","e","target","value","onChangeAddress2","onAdd","address1","tempVal","lattitude","user_id","AsyncMap","props","margin","marginRight","country","paddingBottom","height","propTypes","number","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,YAAnC,EAAiDC,UAAjD,EAA6DC,MAA7D,QAA2E,mBAA3E;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,SAAT,QAA0B,8BAA1B;AAEAL,OAAO,CAACM,SAAR,CAAkB,yCAAlB;AACAN,OAAO,CAACO,WAAR;;AAGA,MAAMC,MAAM,GAAIC,KAAD,KAAY;AACvBC,EAAAA,IAAI,EAAG,EADgB;AAIvBC,EAAAA,YAAY,EAAG;AACX;AACAC,IAAAA,KAAK,EAAG,MAFG;AAGXC,IAAAA,OAAO,EAAG,EAHC;AAIX,eAAU;AACNC,MAAAA,OAAO,EAAG,uBADJ;AAENC,MAAAA,MAAM,EAAG,mBAFH;AAGNC,MAAAA,YAAY,EAAG;AAHT;AAJC,GAJQ;AAcvBC,EAAAA,eAAe,EAAG;AACdC,IAAAA,YAAY,EAAG,EADD;AAEdC,IAAAA,SAAS,EAAG;AAFE,GAdK;AAkBvBC,EAAAA,UAAU,EAAG;AACTC,IAAAA,OAAO,EAAG,MADD;AAETC,IAAAA,UAAU,EAAG,QAFJ;AAGTJ,IAAAA,YAAY,EAAG;AAHN;AAlBU,CAAZ,CAAf;;AAyBA,MAAMK,cAAc,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,GAAX;AAAgBC,EAAAA;AAAhB,CAAD,KAA2B;AAC9C,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCtC,QAAQ,CAAC;AAAEmC,IAAAA,GAAF;AAAQC,IAAAA;AAAR,GAAD,CAA9C;AACA,QAAM;AAAA,OAACG,cAAD;AAAA,OAAiBC;AAAjB,MAAsCxC,QAAQ,CAAC;AAAEmC,IAAAA,GAAF;AAAQC,IAAAA;AAAR,GAAD,CAApD;AACA,QAAM;AAAA,OAACK,OAAD;AAAA,OAAUC;AAAV,MAAwB1C,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAA,OAAC2C,QAAD;AAAA,OAAWC;AAAX,MAA0B5C,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM;AAAA,OAAC6C,gBAAD;AAAA,OAAmBC;AAAnB,MAA6C9C,QAAQ,CAAC,KAAD,CAA3D;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZgD,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCb,GAAnC,EAAuCC,GAAvC;AACAE,IAAAA,cAAc,CAAC;AAAEH,MAAAA,GAAF;AAAQC,MAAAA;AAAR,KAAD,CAAd;AACAI,IAAAA,iBAAiB,CAAC;AAAEL,MAAAA,GAAF;AAAQC,MAAAA;AAAR,KAAD,CAAjB;AACA1B,IAAAA,OAAO,CAACuC,UAAR,CAAoBd,GAApB,EAA0BC,GAA1B,EAAgCc,IAAhC,CACLC,QAAQ,IAAI;AACCT,MAAAA,UAAU,CAACS,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBC,iBAArB,CAAV;AACZ,KAHI,EAILC,KAAK,IAAI;AACRP,MAAAA,OAAO,CAACO,KAAR,CAAcA,KAAd;AACA,KANI;AAQH,GAZQ,EAYP,CAACnB,GAAD,EAAKC,GAAL,CAZO,CAAT;;AAcA,QAAMmB,iBAAiB,GAAG,MAAM;AAC5BR,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,GAFD;;AAIA,QAAMQ,iBAAiB,GAAI,MAAM;AAC7B,QAAG,CAACX,gBAAJ,EAAqB;AACjB,UAAIY,IAAJ;AACAC,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACnDJ,QAAAA,IAAI,GAAG;AACHtB,UAAAA,GAAG,EAAG0B,QAAQ,CAACC,MAAT,CAAgBC,QADnB;AAEH3B,UAAAA,GAAG,EAAGyB,QAAQ,CAACC,MAAT,CAAgBE;AAFnB,SAAP;AAIAtD,QAAAA,OAAO,CAACuC,UAAR,CAAoBQ,IAAI,CAACtB,GAAzB,EAA+BsB,IAAI,CAACrB,GAApC,EAA0Cc,IAA1C,CACIC,QAAQ,IAAI;AACRT,UAAAA,UAAU,CAACS,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBC,iBAArB,CAAV;AACAf,UAAAA,cAAc,CAACmB,IAAD,CAAd;AACAjB,UAAAA,iBAAiB,CAACiB,IAAD,CAAjB;AACH,SALL,EAMIH,KAAK,IAAI;AACLP,UAAAA,OAAO,CAACO,KAAR,CAAcA,KAAd;AACH,SARL;AAUH,OAfD;AAgBH;;AACDR,IAAAA,sBAAsB,CAAC,CAACD,gBAAF,CAAtB;AACH,GArBD;;AAuBA,QAAMoB,eAAe,GAAKC,KAAF,IAAa;AACvC,UAAMC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAajC,GAAb,EAAf;AACG,UAAMkC,MAAM,GAAGH,KAAK,CAACE,MAAN,CAAahC,GAAb,EAAf;AAEH1B,IAAAA,OAAO,CAACuC,UAAR,CAAoBkB,MAApB,EAA6BE,MAA7B,EAAsCnB,IAAtC,CACCC,QAAQ,IAAI;AACCT,MAAAA,UAAU,CAACS,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBC,iBAArB,CAAV,CADD,CAEX;AACA;;AACgBf,MAAAA,cAAc,CAAC;AAAEH,QAAAA,GAAG,EAAEgC,MAAP;AAAe/B,QAAAA,GAAG,EAAEiC;AAApB,OAAD,CAAd;AACA7B,MAAAA,iBAAiB,CAAC;AAAEL,QAAAA,GAAG,EAAEgC,MAAP;AAAe/B,QAAAA,GAAG,EAAEiC;AAApB,OAAD,CAAjB;AAChB,KAPF,EAQCf,KAAK,IAAI;AACRP,MAAAA,OAAO,CAACO,KAAR,CAAcA,KAAd;AACA,KAVF;AAYG,GAhBD;;AAkBA,QAAMgB,eAAe,GAAKC,KAAF,IAAa;AACjCxB,IAAAA,OAAO,CAACC,GAAR,CAAa,KAAb,EAAoBuB,KAApB;AACA,UAAMC,QAAQ,GAAGD,KAAK,CAACE,QAAN,CAAeC,QAAf,CAAwBvC,GAAxB,EAAjB;AACN,UAAMwC,QAAQ,GAAGJ,KAAK,CAACE,QAAN,CAAeC,QAAf,CAAwBtC,GAAxB,EAAjB;AACMM,IAAAA,UAAU,CAAC6B,KAAK,CAAClB,iBAAP,CAAV;AACAf,IAAAA,cAAc,CAAC;AAAEH,MAAAA,GAAG,EAAEqC,QAAP;AAAiBpC,MAAAA,GAAG,EAAEuC;AAAtB,KAAD,CAAd;AACAnC,IAAAA,iBAAiB,CAAC;AAAEL,MAAAA,GAAG,EAAEqC,QAAP;AAAiBpC,MAAAA,GAAG,EAAEuC;AAAtB,KAAD,CAAjB;AACH,GAPD;;AASA,QAAMC,eAAe,GAAIC,CAAD,IAAO;AAC3BnC,IAAAA,UAAU,CAACmC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAIH,CAAD,IAAO;AAC5BjC,IAAAA,WAAW,CAACiC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAFD;;AAIA,QAAME,KAAK,GAAG,MAAM;AAChB,QAAGC,QAAH,EAAY;AACR,UAAIC,OAAO,GAAG;AACVD,QAAAA,QAAQ,EAAGzC,OADD;AAEVE,QAAAA,QAAQ,EAAGA,QAFD;AAGVyC,QAAAA,SAAS,EAAG7C,cAAc,CAACJ,GAHjB;AAIV6B,QAAAA,SAAS,EAAGzB,cAAc,CAACH,GAJjB;AAKViD,QAAAA,OAAO,EAAGtE;AALA,OAAd;AAOH;;AACDgC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BmC,OAA/B;AACH,GAXD;;AAYA,QAAMG,QAAQ,GAAG/E,YAAY,CACzBF,aAAa,CACTkF,KAAK,iBACD,QAAC,SAAD;AACI,IAAA,WAAW,EAAE,EADjB;AAEI,IAAA,aAAa,EAAE;AAAEpD,MAAAA,GAAG,EAAEE,WAAW,CAACF,GAAnB;AAAwBC,MAAAA,GAAG,EAAEC,WAAW,CAACD;AAAzC,KAFnB;AAAA,4BAKI,QAAC,UAAD;AACI,MAAA,OAAO,EAAEmB,iBADb;AAEI,MAAA,QAAQ,EAAE;AAAEpB,QAAAA,GAAG,EAAII,cAAc,CAACJ,GAAf,GAAqB,MAA9B;AAAwCC,QAAAA,GAAG,EAAEG,cAAc,CAACH;AAA5D,OAFd;AAAA,6BAII;AAAA,+BACI;AAAM,UAAA,KAAK,EAAE;AAAEb,YAAAA,OAAO,EAAE,CAAX;AAAciE,YAAAA,MAAM,EAAE;AAAtB,WAAb;AAAA,oBAA0C/C;AAA1C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YALJ,eAcI,QAAC,MAAD;AACI,MAAA,IAAI,EAAE,cADV;AAEI,MAAA,SAAS,EAAE,IAFf;AAGI,MAAA,SAAS,EAAGwB,eAHhB;AAII,MAAA,QAAQ,EAAE;AAAE9B,QAAAA,GAAG,EAAEI,cAAc,CAACJ,GAAtB;AAA2BC,QAAAA,GAAG,EAAEG,cAAc,CAACH;AAA/C;AAJd;AAAA;AAAA;AAAA;AAAA,YAdJ,eAoBI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YApBJ,eAsBI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEF,OAAO,CAACJ,UAAxB;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,OAAO,EAAC,OAAd;AAAsB,UAAA,KAAK,EAAE;AAAE2D,YAAAA,WAAW,EAAG,EAAhB;AAAoB7D,YAAAA,YAAY,EAAG;AAAnC,WAA7B;AAAoE,UAAA,OAAO,EAAC,SAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,OAAO,EAAEiB,gBADb;AAEI,UAAA,QAAQ,EAAEW,iBAFd;AAGI,UAAA,IAAI,EAAC,UAHT;AAII,UAAA,UAAU,EAAE;AAAE,0BAAc;AAAhB;AAJhB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAK,QAAA,SAAS,EAAEtB,OAAO,CAACP,eAAxB;AAAA,+BACI,QAAC,YAAD;AACI,UAAA,eAAe,EAAE2C,eADrB;AAEI,UAAA,SAAS,EAAEpC,OAAO,CAACb,YAFvB;AAGI,UAAA,KAAK,EAAE,CAAC,WAAD,CAHX;AAII,UAAA,WAAW,EAAEoB,OAJjB;AAKI,UAAA,qBAAqB,EAAE;AAACiD,YAAAA,OAAO,EAAE;AAAV,WAL3B;AAMI,UAAA,QAAQ,EAAE7C;AANd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAVJ,eAqBI;AAAK,QAAA,KAAK,EAAE;AAAEjB,UAAAA,YAAY,EAAG;AAAjB,SAAZ;AAAA,+BACI;AACI,UAAA,QAAQ,MADZ;AAEI,UAAA,EAAE,EAAC,gBAFP;AAGI,UAAA,KAAK,EAAC,WAHV;AAII,UAAA,OAAO,EAAC,UAJZ;AAKI,UAAA,IAAI,EAAC,OALT;AAMI,UAAA,KAAK,EAAE;AAAEN,YAAAA,KAAK,EAAG;AAAV,WANX;AAOI,UAAA,KAAK,EAAEmB,OAPX;AAQI,UAAA,QAAQ,EAAEmC;AARd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cArBJ,eAiCI;AAAK,QAAA,KAAK,EAAE;AAAEhD,UAAAA,YAAY,EAAG;AAAjB,SAAZ;AAAA,+BACI;AACI,UAAA,EAAE,EAAC,2BADP;AAEI,UAAA,KAAK,EAAC,WAFV;AAGI,UAAA,SAAS,MAHb;AAII,UAAA,IAAI,EAAE,CAJV;AAKI,UAAA,OAAO,EAAC,UALZ;AAMI,UAAA,KAAK,EAAE;AAAEN,YAAAA,KAAK,EAAG;AAAV,WANX;AAOI,UAAA,QAAQ,EAAE0D,gBAPd;AAQI,UAAA,KAAK,EAAErC;AARX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAjCJ,eA6CI;AAAK,QAAA,KAAK,EAAE;AAAEgD,UAAAA,aAAa,EAAG;AAAlB,SAAZ;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA7CJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFK,CADY,CAA7B;AA+EA,sBACA,QAAC,QAAD;AACI,IAAA,YAAY,EAAG,+HADnB;AAEI,IAAA,cAAc,eACV;AAAK,MAAA,KAAK,EAAE;AAAEW,QAAAA,MAAM,EAAG;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA,YAHR;AAKI,IAAA,gBAAgB,eACZ;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAG;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA,YANR;AAQI,IAAA,UAAU,eACN;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAG;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA;AATR;AAAA;AAAA;AAAA;AAAA,UADA;AAgBH,CA9LD;;AAgMA3D,cAAc,CAAC4D,SAAf,GAA2B;AACvB1D,EAAAA,GAAG,EAAGvB,SAAS,CAACkF,MADO;AAEvB1D,EAAAA,GAAG,EAAGxB,SAAS,CAACkF,MAFO;AAG1B;AACA5D,EAAAA,OAAO,EAAEtB,SAAS,CAACmF,MAAV,CAAiBC;AAJA,CAA3B;AAOA,eAAe5F,UAAU,CAACc,MAAD,CAAV,CAAmBe,cAAnB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { compose, withProps } from \"recompose\";\nimport { Box, Container, Switch, TextField } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nimport PropTypes from 'prop-types'\nimport Text from '../text'\nimport Button from '../button'\nimport { getCookie } from \"../../lib/utility/apiWrapper\";\n\nGeocode.setApiKey(\"AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw\");\nGeocode.enableDebug();\n\n\nconst styles = (theme) => ({\n    root : {\n\n    },\n    autoComplete : {\n        // backgroundColor : \"red\",\n        width : \"100%\",\n        padding : 12,\n        \"&:focus\":{\n            outline : \"1px solid transparent\",\n            border : \"2px solid #34A76C\",\n            borderRadius : 5\n        }\n    },\n    autoCompWrapper : {\n        marginBottom : 20,\n        marginTop : 20\n    },\n    useCurrent : {\n        display : \"flex\",\n        alignItems : \"center\",\n        marginBottom : 10\n    },\n})\n\nconst MyMapComponent = ({ classes, lat, lng }) => {\n    const [mapPosition, setMapPosition] = useState({ lat , lng })\n    const [markerPosition, setMarkerPosition] = useState({ lat , lng })\n    const [address, setAddress] = useState(null)\n    const [address2, setAddress2] = useState(null)\n    const [showCurrLocation, setShowCurrentLocation] = useState(false)\n\n    useEffect(() => {\n        console.log(\"Here is new location\",lat,lng)\n        setMapPosition({ lat , lng })\n        setMarkerPosition({ lat , lng })\n        Geocode.fromLatLng( lat , lng ).then(\n\t\t\tresponse => {\n                setAddress(response.results[0].formatted_address)\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t);\n    },[lat,lng])\n    \n    const onInfoWindowClose = () => {\n        console.log(\"I am clicked\")\n    }\n\n    const onCurrentLocation  = () => {\n        if(!showCurrLocation){\n            let temp \n            navigator.geolocation.getCurrentPosition((position) => {\n                temp = {\n                    lat : position.coords.latitude,\n                    lng : position.coords.longitude\n                }\n                Geocode.fromLatLng( temp.lat , temp.lng ).then(\n                    response => {\n                        setAddress(response.results[0].formatted_address)\n                        setMapPosition(temp)\n                        setMarkerPosition(temp)\n                    },\n                    error => {\n                        console.error(error);\n                    }\n                );\n            })\n        }\n        setShowCurrentLocation(!showCurrLocation)\n    }\n\n    const onMarkerDragEnd = ( event ) => {\n\t\tconst newLat = event.latLng.lat()\n\t    const newLng = event.latLng.lng()\n\n\t\tGeocode.fromLatLng( newLat , newLng ).then(\n\t\t\tresponse => {\n                setAddress(response.results[0].formatted_address)\n\t\t\t\t// const address = response.results[0].formatted_address,\n\t\t\t\t//       addressArray =  response.results[0].address_components\n                    setMapPosition({ lat: newLat, lng: newLng})\n                    setMarkerPosition({ lat: newLat, lng: newLng})\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t);\n    };\n    \n    const onPlaceSelected = ( place ) => {\n        console.log( 'plc', place )\n        const latValue = place.geometry.location.lat()\n\t\tconst lngValue = place.geometry.location.lng()\n        setAddress(place.formatted_address)\n        setMapPosition({ lat: latValue, lng: lngValue})\n        setMarkerPosition({ lat: latValue, lng: lngValue})\n    }\n    \n    const onChangeAddress = (e) => {\n        setAddress(e.target.value)\n    }\n\n    const onChangeAddress2 = (e) => {\n        setAddress2(e.target.value)\n    }\n\n    const onAdd = () => {\n        if(address1){\n            let tempVal = {\n                address1 : address,\n                address2 : address2,\n                lattitude : markerPosition.lat,\n                longitude : markerPosition.lng,\n                user_id : getCookie\n            }\n        }\n        console.log(\"I am clicked bro\",tempVal)\n    }\n    const AsyncMap = withScriptjs(\n        withGoogleMap(\n            props => (\n                <GoogleMap \n                    defaultZoom={15}\n                    defaultCenter={{ lat: mapPosition.lat, lng: mapPosition.lng }}\n                >\n                    {/* InfoWindow on top of marker */}\n                    <InfoWindow\n                        onClose={onInfoWindowClose}\n                        position={{ lat: ( markerPosition.lat + 0.0018 ), lng: markerPosition.lng }}\n                    >\n                        <div>\n                            <span style={{ padding: 0, margin: 0 }}>{ address }</span>\n                        </div>\n                    </InfoWindow>\n                    {/*Marker*/}\n                    <Marker \n                        name={'Dolores park'}\n                        draggable={true}\n                        onDragEnd={ onMarkerDragEnd }\n                        position={{ lat: markerPosition.lat, lng: markerPosition.lng }}\n                    />\n                    <Marker />\n                    {/* For Auto complete Search Box */}\n                    <Container>\n                        <Box className={classes.useCurrent}>\n                            <Text variant=\"body2\" style={{ marginRight : 10, marginBottom : 0}} ffamily=\"Poppins\">Use Current Location</Text>\n                            <Switch\n                                checked={showCurrLocation}\n                                onChange={onCurrentLocation}\n                                name=\"checkedA\"\n                                inputProps={{ 'aria-label': 'secondary checkbox' }}\n                            />\n                        </Box>\n                        <Box className={classes.autoCompWrapper}>\n                            <Autocomplete\n                                onPlaceSelected={onPlaceSelected}\n                                className={classes.autoComplete}\n                                types={['(regions)']}\n                                placeholder={address}\n                                componentRestrictions={{country: \"in\"}}\n                                disabled={showCurrLocation}\n\n                            /> \n                        </Box>\n                        <Box style={{ marginBottom : 15}}>\n                            <TextField \n                                disabled \n                                id=\"outlined-basic\" \n                                label=\"Address 1\" \n                                variant=\"outlined\" \n                                size=\"small\" \n                                style={{ width : \"100%\"}} \n                                value={address} \n                                onChange={onChangeAddress} \n                            />\n                        </Box>\n                        <Box style={{ marginBottom : 15}}>\n                            <TextField\n                                id=\"outlined-multiline-static\"\n                                label=\"Address 2\"\n                                multiline\n                                rows={2}\n                                variant=\"outlined\"\n                                style={{ width : \"100%\"}}\n                                onChange={onChangeAddress2}\n                                value={address2}\n                            />\n                        </Box>\n                        <Box style={{ paddingBottom : 20,}} >\n                            <Button onClick={onAdd}>Add</Button>\n                        </Box>\n                    </Container>\n                </GoogleMap>\n            )\n        )\n    )\n\n    return (\n    <AsyncMap\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places`}\n        loadingElement={\n            <div style={{ height: `100%` }} />\n        }\n        containerElement={\n            <div style={{ height: `100%` }} />\n        }\n        mapElement={\n            <div style={{ height: `30%` }} />\n        }\n        \n        />\n        )\n    \n}\n\nMyMapComponent.propTypes = {\n    lat : PropTypes.number,\n    lng : PropTypes.number,\n // eslint-disable-next-line react/forb,id-prop-types\n classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(MyMapComponent)\n"]},"metadata":{},"sourceType":"module"}