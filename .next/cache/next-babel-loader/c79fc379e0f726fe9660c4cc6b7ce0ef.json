{"ast":null,"code":"import _Box from \"@material-ui/core/Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/map/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { compose, withProps } from \"recompose\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nimport PropTypes from 'prop-types';\nGeocode.setApiKey(\"AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw\");\nGeocode.enableDebug();\n\nvar styles = function styles(theme) {\n  return {\n    root: {},\n    autoComplete: {\n      '& $pac-container': {\n        zIndex: 100000,\n        backgroundColor: \"red\"\n      }\n    }\n  };\n};\n\nvar MyMapComponent = function MyMapComponent(_ref) {\n  _s();\n\n  var classes = _ref.classes;\n\n  var _useState = useState({\n    lat: 12.9716,\n    lng: 77.5946\n  }),\n      mapPosition = _useState[0],\n      setMapPosition = _useState[1];\n\n  var _useState2 = useState({\n    lat: 12.9716,\n    lng: 77.5946\n  }),\n      markerPosition = _useState2[0],\n      setMarkerPosition = _useState2[1];\n\n  var _useState3 = useState(null),\n      address = _useState3[0],\n      setAddress = _useState3[1];\n\n  var onInfoWindowClose = function onInfoWindowClose() {};\n\n  var onMarkerDragEnd = function onMarkerDragEnd(event) {\n    var newLat = event.latLng.lat();\n    var newLng = event.latLng.lng();\n    Geocode.fromLatLng(newLat, newLng).then(function (response) {\n      setAddress(response.results[0].formatted_address); // const address = response.results[0].formatted_address,\n      //       addressArray =  response.results[0].address_components\n\n      setMapPosition({\n        lat: newLat,\n        lng: newLng\n      });\n      setMarkerPosition({\n        lat: newLat,\n        lng: newLng\n      });\n    }, function (error) {\n      console.error(error);\n    });\n  };\n\n  var onPlaceSelected = function onPlaceSelected(place) {\n    console.log('plc', place);\n    var latValue = place.geometry.location.lat();\n    var lngValue = place.geometry.location.lng();\n    setAddress(place.formatted_address);\n    setMapPosition({\n      lat: latValue,\n      lng: lngValue\n    });\n    setMarkerPosition({\n      lat: latValue,\n      lng: lngValue\n    });\n  };\n\n  var AsyncMap = withScriptjs(withGoogleMap(function (props) {\n    return /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 15,\n      defaultCenter: {\n        lat: mapPosition.lat,\n        lng: mapPosition.lng\n      },\n      children: [/*#__PURE__*/_jsxDEV(InfoWindow, {\n        onClose: onInfoWindowClose,\n        position: {\n          lat: markerPosition.lat + 0.0018,\n          lng: markerPosition.lng\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              padding: 0,\n              margin: 0\n            },\n            children: address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Marker, {\n        name: 'Dolores park',\n        draggable: true,\n        onDragEnd: onMarkerDragEnd,\n        position: {\n          lat: markerPosition.lat,\n          lng: markerPosition.lng\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Marker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(_Box, {\n        style: {\n          zIndex: 1000000,\n          height: 200,\n          backgroundColor: \"red\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          onPlaceSelected: function onPlaceSelected(place) {\n            console.log(place);\n          } // className={classes.autoComplete}\n          ,\n          types: ['(regions)'] // componentRestrictions={{country: \"ru\"}}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, _this);\n  }));\n  return /*#__PURE__*/_jsxDEV(AsyncMap, {\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, _this),\n    containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, _this),\n    mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, _this);\n}; //     compose(\n//   withProps({\n//     /**\n//      * Note: create and replace your own key in the Google console.\n//      * https://console.developers.google.com/apis/dashboard\n//      * The key \"AIzaSyBkNaAGLEVq0YLQMi-PYEMabFeREadYe1Q\" can be ONLY used in this sandbox (no forked).\n//      */\n//       googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places\",\n//     loadingElement: <div style={{ height: `100%` }} />,\n//     containerElement: <div style={{ height: `100%` }} />,\n//     mapElement: <div style={{ height: `100%` }} />,\n//   }),\n//   withScriptjs,\n//   withGoogleMap\n// )(props => (\n//   <GoogleMap defaultZoom={8} defaultCenter={{ lat: props.lat , lng: props.lng  }}>\n//     {props.isMarkerShown && (\n//       <Marker position={{ lat: props.lat , lng: props.lng  }} />\n//     )}\n//     {console.log(\"Here is lan\",props)}\n//   </GoogleMap>\n// ));\n\n\n_s(MyMapComponent, \"9t+qOAFKxpQWBvV0atPn3ApyxNU=\");\n\n_c = MyMapComponent;\nMyMapComponent.propTypes = {\n  // eslint-disable-next-line react/forb,id-prop-types\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(MyMapComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyMapComponent\");","map":{"version":3,"sources":["/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/map/index.js"],"names":["React","useState","ReactDOM","compose","withProps","withStyles","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","Geocode","Autocomplete","PropTypes","setApiKey","enableDebug","styles","theme","root","autoComplete","zIndex","backgroundColor","MyMapComponent","classes","lat","lng","mapPosition","setMapPosition","markerPosition","setMarkerPosition","address","setAddress","onInfoWindowClose","onMarkerDragEnd","event","newLat","latLng","newLng","fromLatLng","then","response","results","formatted_address","error","console","onPlaceSelected","place","log","latValue","geometry","location","lngValue","AsyncMap","props","padding","margin","height","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { compose, withProps } from \"recompose\";\nimport { Box} from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nimport PropTypes from 'prop-types'\n\nGeocode.setApiKey(\"AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw\");\nGeocode.enableDebug();\n\n\nconst styles = (theme) => ({\n    root : {\n\n    },\n    autoComplete : {\n        '& $pac-container' : {\n            zIndex : 100000,\n            backgroundColor : \"red\"\n        }\n    }\n})\n\nconst MyMapComponent = ({ classes }) => {\n    const [mapPosition, setMapPosition] = useState({ lat : 12.9716, lng : 77.5946 })\n    const [markerPosition, setMarkerPosition] = useState({ lat : 12.9716, lng : 77.5946 })\n    const [address, setAddress] = useState(null)\n\n    const onInfoWindowClose = () => {\n\n    }\n\n    const onMarkerDragEnd = ( event ) => {\n\t\tconst newLat = event.latLng.lat()\n\t    const newLng = event.latLng.lng()\n\n\t\tGeocode.fromLatLng( newLat , newLng ).then(\n\t\t\tresponse => {\n                setAddress(response.results[0].formatted_address)\n\t\t\t\t// const address = response.results[0].formatted_address,\n\t\t\t\t//       addressArray =  response.results[0].address_components\n                    setMapPosition({ lat: newLat, lng: newLng})\n                    setMarkerPosition({ lat: newLat, lng: newLng})\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t);\n    };\n    \n    const onPlaceSelected = ( place ) => {\n        console.log( 'plc', place )\n        const latValue = place.geometry.location.lat()\n\t\tconst lngValue = place.geometry.location.lng()\n        setAddress(place.formatted_address)\n        setMapPosition({ lat: latValue, lng: lngValue})\n        setMarkerPosition({ lat: latValue, lng: lngValue})\n    }\n    \n    const AsyncMap = withScriptjs(\n        withGoogleMap(\n            props => (\n                <GoogleMap \n                    defaultZoom={15}\n                    defaultCenter={{ lat: mapPosition.lat, lng: mapPosition.lng }}\n                >\n                    {/* InfoWindow on top of marker */}\n                    <InfoWindow\n                        onClose={onInfoWindowClose}\n                        position={{ lat: ( markerPosition.lat + 0.0018 ), lng: markerPosition.lng }}\n                    >\n                        <div>\n                            <span style={{ padding: 0, margin: 0 }}>{ address }</span>\n                        </div>\n                    </InfoWindow>\n                    {/*Marker*/}\n                    <Marker \n                        name={'Dolores park'}\n                        draggable={true}\n                        onDragEnd={ onMarkerDragEnd }\n                        position={{ lat: markerPosition.lat, lng: markerPosition.lng }}\n                    />\n                    <Marker />\n                    {/* For Auto complete Search Box */}\n                    <Box style={{ zIndex : 1000000, height : 200, backgroundColor : \"red\"  }}>\n\n                    <Autocomplete\n                        onPlaceSelected={(place) => {\n                            console.log(place);\n                        }}\n                        // className={classes.autoComplete}\n                        types={['(regions)']}\n                        // componentRestrictions={{country: \"ru\"}}\n                        /> \n                        </Box>\n                </GoogleMap>\n            )\n        )\n    )\n\n    return (\n    <AsyncMap\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places`}\n        loadingElement={\n            <div style={{ height: `100%` }} />\n        }\n        containerElement={\n            <div style={{ height: `100%` }} />\n        }\n        mapElement={\n            <div style={{ height: `100%` }} />\n        }\n        />\n        )\n    \n}\n//     compose(\n//   withProps({\n//     /**\n//      * Note: create and replace your own key in the Google console.\n//      * https://console.developers.google.com/apis/dashboard\n//      * The key \"AIzaSyBkNaAGLEVq0YLQMi-PYEMabFeREadYe1Q\" can be ONLY used in this sandbox (no forked).\n//      */\n    \n//       googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places\",\n//     loadingElement: <div style={{ height: `100%` }} />,\n//     containerElement: <div style={{ height: `100%` }} />,\n//     mapElement: <div style={{ height: `100%` }} />,\n\n//   }),\n//   withScriptjs,\n//   withGoogleMap\n// )(props => (\n//   <GoogleMap defaultZoom={8} defaultCenter={{ lat: props.lat , lng: props.lng  }}>\n//     {props.isMarkerShown && (\n//       <Marker position={{ lat: props.lat , lng: props.lng  }} />\n//     )}\n//     {console.log(\"Here is lan\",props)}\n//   </GoogleMap>\n// ));\n\nMyMapComponent.propTypes = {\n // eslint-disable-next-line react/forb,id-prop-types\n classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(MyMapComponent)\n"]},"metadata":{},"sourceType":"module"}