{"ast":null,"code":"import _Dialog from \"@material-ui/core/Dialog\";\nimport _DialogActions from \"@material-ui/core/DialogActions\";\nimport _Button from \"@material-ui/core/Button\";\nimport _DialogContent from \"@material-ui/core/DialogContent\";\nimport _Box from \"@material-ui/core/Box\";\nimport _TextField from \"@material-ui/core/TextField\";\nimport _DialogContentText from \"@material-ui/core/DialogContentText\";\nimport _DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/loginModal/index.js\";\nimport React, { useContext, useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Link from '../link';\nimport { GlobalContext } from '../../../pages/_app';\nimport { LOGIN_MODAL_STATUS, SIGN_UP_MODAL_STATUS, ALERT_DIALOG, ERROR_TITLE, ERROR_DESCRIPTION, AUTH_STATUS } from '../../lib/utility/type';\nimport AlertDialog from '../alert';\nimport { validateEmail } from '../../lib/utility/common';\nimport request from '../../lib/utility/apiWrapper'; // import { login } from '../../lib/services/login'\n\nconst styles = () => ({\n  root: {},\n  textField: {\n    marginBottom: 20\n  },\n  linkWrapper: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  linkButton: {\n    marginRight: 20\n  }\n});\n\nconst Login = ({\n  classes,\n  open,\n  handleClose\n}) => {\n  const {\n    0: email,\n    1: setEmail\n  } = useState(null);\n  const {\n    0: password,\n    1: setPassword\n  } = useState(null);\n  const globalContext = useContext(GlobalContext);\n\n  const errorFunc = (title, description) => {\n    globalContext.allDispatch({\n      type: ERROR_DESCRIPTION,\n      value: description\n    });\n    globalContext.allDispatch({\n      type: ERROR_TITLE,\n      value: title\n    });\n    globalContext.allDispatch({\n      type: ALERT_DIALOG,\n      value: true\n    });\n  };\n\n  const onSignUp = () => {\n    globalContext.allDispatch({\n      type: SIGN_UP_MODAL_STATUS,\n      value: true\n    });\n    globalContext.allDispatch({\n      type: LOGIN_MODAL_STATUS,\n      value: false\n    });\n  };\n\n  const login = async data => {\n    const loginData = await request({\n      url: '/userlogin',\n      method: 'post',\n      data\n    }).then(res => {\n      if (res.result === 'success') {\n        document.cookie = `token=${res.data.token}`;\n        document.cookie = `user_id=${res.data.user_id}`;\n        document.cookie = `uid=${res.data.uid}`;\n        globalContext.allDispatch({\n          type: AUTH_STATUS,\n          value: true\n        });\n        globalContext.allDispatch({\n          type: LOGIN_MODAL_STATUS,\n          value: false\n        });\n      } else if (loginData.result === 'wrongEmail') {\n        globalContext.allDispatch({\n          type: ERROR_DESCRIPTION,\n          value: 'Please enter correct email.'\n        });\n        globalContext.allDispatch({\n          type: ERROR_TITLE,\n          value: 'Wrong credentials.'\n        });\n        globalContext.allDispatch({\n          type: ALERT_DIALOG,\n          value: true\n        });\n      } else if (loginData.result === 'wrongPassword') {\n        globalContext.allDispatch({\n          type: ERROR_DESCRIPTION,\n          value: 'Please enter correct password.'\n        });\n        globalContext.allDispatch({\n          type: ERROR_TITLE,\n          value: 'Wrong credentials.'\n        });\n        globalContext.allDispatch({\n          type: ALERT_DIALOG,\n          value: true\n        });\n      }\n    });\n  };\n\n  const onSubmit = () => {\n    if (email && password) {\n      if (validateEmail(email)) {\n        if (password.length > 7) {\n          const temp = {\n            emailOrMobile: email,\n            password\n          };\n          login(temp);\n        } else {\n          errorFunc('Incorrect Password', 'Minimum password length is 8 charachters.');\n        }\n      } else {\n        errorFunc('Incorrect Email', 'Please enter correct email and try again.');\n      }\n    } else {\n      errorFunc('Missing Fields', 'Please enter all mandatory fields.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(_Dialog, {\n      open: open,\n      onClose: handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(_DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(_DialogContentText, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Box, {\n          className: classes.textField,\n          children: /*#__PURE__*/_jsxDEV(_TextField, {\n            id: \"email\",\n            label: \"Email Address\",\n            type: \"email\",\n            fullWidth: true,\n            variant: \"outlined\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Box, {\n          className: classes.textField,\n          children: /*#__PURE__*/_jsxDEV(_TextField, {\n            id: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            fullWidth: true,\n            variant: \"outlined\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Box, {\n          className: classes.linkWrapper,\n          children: [/*#__PURE__*/_jsxDEV(_Box, {\n            className: classes.linkButton,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"#\",\n              children: \"Forgot Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Box, {\n            className: classes.linkButton,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"#\",\n              onClick: onSignUp,\n              children: \"Don't have account! Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(_Button, {\n          onClick: onSubmit,\n          color: \"primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertDialog, {\n      open: globalContext.state.alertStatus,\n      title: globalContext.state.errorTitle,\n      description: globalContext.state.errorDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n\nLogin.propTypes = {\n  open: PropTypes.bool,\n  handleClose: PropTypes.func\n};\nexport default withStyles(styles)(Login);","map":{"version":3,"sources":["/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/loginModal/index.js"],"names":["React","useContext","useState","withStyles","PropTypes","Link","GlobalContext","LOGIN_MODAL_STATUS","SIGN_UP_MODAL_STATUS","ALERT_DIALOG","ERROR_TITLE","ERROR_DESCRIPTION","AUTH_STATUS","AlertDialog","validateEmail","request","styles","root","textField","marginBottom","linkWrapper","display","flexDirection","linkButton","marginRight","Login","classes","open","handleClose","email","setEmail","password","setPassword","globalContext","errorFunc","title","description","allDispatch","type","value","onSignUp","login","data","loginData","url","method","then","res","result","document","cookie","token","user_id","uid","onSubmit","length","temp","emailOrMobile","e","target","state","alertStatus","errorTitle","errorDescription","propTypes","bool","func"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport {\n  Box,\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Link from '../link';\nimport { GlobalContext } from '../../../pages/_app';\nimport {\n  LOGIN_MODAL_STATUS,\n  SIGN_UP_MODAL_STATUS,\n  ALERT_DIALOG,\n  ERROR_TITLE,\n  ERROR_DESCRIPTION,\n  AUTH_STATUS,\n} from '../../lib/utility/type';\nimport AlertDialog from '../alert';\nimport { validateEmail } from '../../lib/utility/common';\nimport request from '../../lib/utility/apiWrapper';\n\n// import { login } from '../../lib/services/login'\n\nconst styles = () => ({\n  root: {},\n  textField: {\n    marginBottom: 20,\n  },\n  linkWrapper: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  linkButton: {\n    marginRight: 20,\n  },\n});\n\nconst Login = ({ classes, open, handleClose }) => {\n  const [email, setEmail] = useState(null);\n  const [password, setPassword] = useState(null);\n\n  const globalContext = useContext(GlobalContext);\n\n  const errorFunc = (title, description) => {\n    globalContext.allDispatch({\n      type: ERROR_DESCRIPTION,\n      value: description,\n    });\n    globalContext.allDispatch({\n      type: ERROR_TITLE,\n      value: title,\n    });\n    globalContext.allDispatch({\n      type: ALERT_DIALOG,\n      value: true,\n    });\n  };\n\n  const onSignUp = () => {\n    globalContext.allDispatch({\n      type: SIGN_UP_MODAL_STATUS,\n      value: true,\n    });\n    globalContext.allDispatch({\n      type: LOGIN_MODAL_STATUS,\n      value: false,\n    });\n  };\n\n  const login = async (data) => {\n    const loginData = await request({\n      url: '/userlogin',\n      method: 'post',\n      data,\n    }).then((res) => {\n      if (res.result === 'success') {\n        document.cookie = `token=${res.data.token}`;\n        document.cookie = `user_id=${res.data.user_id}`;\n        document.cookie = `uid=${res.data.uid}`;\n        globalContext.allDispatch({\n          type: AUTH_STATUS,\n          value: true,\n        });\n        globalContext.allDispatch({\n          type: LOGIN_MODAL_STATUS,\n          value: false,\n        });\n      } else if (loginData.result === 'wrongEmail') {\n        globalContext.allDispatch({\n          type: ERROR_DESCRIPTION,\n          value: 'Please enter correct email.',\n        });\n        globalContext.allDispatch({\n          type: ERROR_TITLE,\n          value: 'Wrong credentials.',\n        });\n        globalContext.allDispatch({\n          type: ALERT_DIALOG,\n          value: true,\n        });\n      } else if (loginData.result === 'wrongPassword') {\n        globalContext.allDispatch({\n          type: ERROR_DESCRIPTION,\n          value: 'Please enter correct password.',\n        });\n        globalContext.allDispatch({\n          type: ERROR_TITLE,\n          value: 'Wrong credentials.',\n        });\n        globalContext.allDispatch({\n          type: ALERT_DIALOG,\n          value: true,\n        });\n      }\n    });\n  };\n\n  const onSubmit = () => {\n    if (email && password) {\n      if (validateEmail(email)) {\n        if (password.length > 7) {\n          const temp = {\n            emailOrMobile: email,\n            password,\n          };\n          login(temp);\n        } else {\n          errorFunc(\n            'Incorrect Password',\n            'Minimum password length is 8 charachters.',\n          );\n        }\n      } else {\n        errorFunc(\n          'Incorrect Email',\n          'Please enter correct email and try again.',\n        );\n      }\n    } else {\n      errorFunc('Missing Fields', 'Please enter all mandatory fields.');\n    }\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        fullWidth\n        maxWidth=\"sm\"\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\n        <DialogContent>\n          <DialogContentText />\n          <Box className={classes.textField}>\n            <TextField\n              id=\"email\"\n              label=\"Email Address\"\n              type=\"email\"\n              fullWidth\n              variant=\"outlined\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Box>\n          <Box className={classes.textField}>\n            <TextField\n              id=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              fullWidth\n              variant=\"outlined\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Box>\n          <Box className={classes.linkWrapper}>\n            <Box className={classes.linkButton}>\n              <Link href=\"#\">Forgot Password</Link>\n            </Box>\n            <Box className={classes.linkButton}>\n              <Link href=\"#\" onClick={onSignUp}>\n                Don&apos;t have account! Sign Up\n              </Link>\n            </Box>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onSubmit} color=\"primary\">\n            Submit\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <AlertDialog\n        open={globalContext.state.alertStatus}\n        title={globalContext.state.errorTitle}\n        description={globalContext.state.errorDescription}\n      />\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  open: PropTypes.bool,\n  handleClose: PropTypes.func,\n};\n\nexport default withStyles(styles)(Login);\n"]},"metadata":{},"sourceType":"module"}