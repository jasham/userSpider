{"ast":null,"code":"import _slicedToArray from \"/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/map/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { compose, withProps } from \"recompose\";\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nGeocode.setApiKey(\"AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw\");\nGeocode.enableDebug();\n\nvar MyMapComponent = function MyMapComponent() {\n  _s();\n\n  var _useState = useState({\n    lat: 12.9716,\n    lng: 77.5946\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      mapPosition = _useState2[0],\n      setMapPosition = _useState2[1];\n\n  var _useState3 = useState({\n    lat: 12.9716,\n    lng: 77.5946\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      markerPosition = _useState4[0],\n      setMarkerPosition = _useState4[1];\n\n  var AsyncMap = withScriptjs(withGoogleMap(function (props) {\n    return /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 15,\n      defaultCenter: {\n        lat: mapPosition.lat,\n        lng: mapPosition.lng\n      },\n      children: [/*#__PURE__*/_jsxDEV(InfoWindow, {\n        onClose: onInfoWindowClose,\n        position: {\n          lat: markerPosition.lat + 0.0018,\n          lng: markerPosition.lng\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              padding: 0,\n              margin: 0\n            },\n            children: _this.state.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Marker, {\n        google: _this.props.google,\n        name: 'Dolores park',\n        draggable: true,\n        onDragEnd: _this.onMarkerDragEnd,\n        position: {\n          lat: _this.state.markerPosition.lat,\n          lng: _this.state.markerPosition.lng\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Marker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        style: {\n          width: '100%',\n          height: '40px',\n          paddingLeft: '16px',\n          marginTop: '2px',\n          marginBottom: '500px'\n        },\n        onPlaceSelected: _this.onPlaceSelected,\n        types: ['(regions)']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, _this);\n  }));\n}; //     compose(\n//   withProps({\n//     /**\n//      * Note: create and replace your own key in the Google console.\n//      * https://console.developers.google.com/apis/dashboard\n//      * The key \"AIzaSyBkNaAGLEVq0YLQMi-PYEMabFeREadYe1Q\" can be ONLY used in this sandbox (no forked).\n//      */\n//       googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places\",\n//     loadingElement: <div style={{ height: `100%` }} />,\n//     containerElement: <div style={{ height: `100%` }} />,\n//     mapElement: <div style={{ height: `100%` }} />,\n//   }),\n//   withScriptjs,\n//   withGoogleMap\n// )(props => (\n//   <GoogleMap defaultZoom={8} defaultCenter={{ lat: props.lat , lng: props.lng  }}>\n//     {props.isMarkerShown && (\n//       <Marker position={{ lat: props.lat , lng: props.lng  }} />\n//     )}\n//     {console.log(\"Here is lan\",props)}\n//   </GoogleMap>\n// ));\n\n\n_s(MyMapComponent, \"ROlwia7A1oNja3uKgd+aWTRXKhg=\");\n\n_c = MyMapComponent;\nexport default MyMapComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyMapComponent\");","map":{"version":3,"sources":["/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/map/index.js"],"names":["React","ReactDOM","compose","withProps","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","Geocode","setApiKey","enableDebug","MyMapComponent","useState","lat","lng","mapPosition","setMapPosition","markerPosition","setMarkerPosition","AsyncMap","props","onInfoWindowClose","padding","margin","state","address","google","onMarkerDragEnd","width","height","paddingLeft","marginTop","marginBottom","onPlaceSelected"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { compose, withProps } from \"recompose\";\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\n\nGeocode.setApiKey(\"AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw\");\nGeocode.enableDebug();\n\n\n\nconst MyMapComponent = () => {\n    const [mapPosition, setMapPosition] = useState({ lat : 12.9716, lng : 77.5946 })\n    const [markerPosition, setMarkerPosition] = useState({ lat : 12.9716, lng : 77.5946 })\n    const AsyncMap = withScriptjs(\n        withGoogleMap(\n            props => (\n                <GoogleMap \n                    defaultZoom={15}\n                    defaultCenter={{ lat: mapPosition.lat, lng: mapPosition.lng }}\n                >\n                    {/* InfoWindow on top of marker */}\n                    <InfoWindow\n                        onClose={onInfoWindowClose}\n                        position={{ lat: ( markerPosition.lat + 0.0018 ), lng: markerPosition.lng }}\n                    >\n                        <div>\n                            <span style={{ padding: 0, margin: 0 }}>{ this.state.address }</span>\n                        </div>\n                    </InfoWindow>\n                    {/*Marker*/}\n                    <Marker google={this.props.google}\n                            name={'Dolores park'}\n                            draggable={true}\n                            onDragEnd={ this.onMarkerDragEnd }\n                            position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\n                    />\n                    <Marker />\n                    {/* For Auto complete Search Box */}\n                    <Autocomplete\n                        style={{\n                            width: '100%',\n                            height: '40px',\n                            paddingLeft: '16px',\n                            marginTop: '2px',\n                            marginBottom: '500px'\n                        }}\n                        onPlaceSelected={ this.onPlaceSelected }\n                        types={['(regions)']}\n                    />\n                </GoogleMap>\n            )\n        )\n    );\n    \n}\n//     compose(\n//   withProps({\n//     /**\n//      * Note: create and replace your own key in the Google console.\n//      * https://console.developers.google.com/apis/dashboard\n//      * The key \"AIzaSyBkNaAGLEVq0YLQMi-PYEMabFeREadYe1Q\" can be ONLY used in this sandbox (no forked).\n//      */\n    \n//       googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places\",\n//     loadingElement: <div style={{ height: `100%` }} />,\n//     containerElement: <div style={{ height: `100%` }} />,\n//     mapElement: <div style={{ height: `100%` }} />,\n\n//   }),\n//   withScriptjs,\n//   withGoogleMap\n// )(props => (\n//   <GoogleMap defaultZoom={8} defaultCenter={{ lat: props.lat , lng: props.lng  }}>\n//     {props.isMarkerShown && (\n//       <Marker position={{ lat: props.lat , lng: props.lng  }} />\n//     )}\n//     {console.log(\"Here is lan\",props)}\n//   </GoogleMap>\n// ));\n\nexport default MyMapComponent\n"]},"metadata":{},"sourceType":"module"}