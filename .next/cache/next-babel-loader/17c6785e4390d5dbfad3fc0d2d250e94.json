{"ast":null,"code":"import _Container from \"@material-ui/core/Container\";\nimport _TextField from \"@material-ui/core/TextField\";\nimport _Box from \"@material-ui/core/Box\";\nimport _Switch from \"@material-ui/core/Switch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/map/index.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport { compose, withProps } from 'recompose';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from 'react-google-maps';\nimport Geocode from 'react-geocode';\nimport Autocomplete from 'react-google-autocomplete';\nimport PropTypes from 'prop-types';\nimport Text from '../text';\nimport Button from '../button';\nimport { getCookie } from '../../lib/utility/apiWrapper';\nimport { GlobalContext } from '../../../pages/_app';\nimport { LOADING_BAR_STATUS, CLOSE_MAP, ADDRESS_LIST } from '../../lib/utility/type';\nimport { addAddress } from '../../lib/services/address';\nGeocode.setApiKey('AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw');\nGeocode.enableDebug();\n\nconst styles = theme => ({\n  root: {},\n  autoComplete: {\n    // backgroundColor : \"red\",\n    width: '100%',\n    padding: 12,\n    '&:focus': {\n      outline: '1px solid transparent',\n      border: '2px solid #34A76C',\n      borderRadius: 5\n    }\n  },\n  autoCompWrapper: {\n    marginBottom: 20,\n    marginTop: 20\n  },\n  useCurrent: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: 10\n  }\n});\n\nconst MyMapComponent = ({\n  classes,\n  lat,\n  lng\n}) => {\n  const {\n    0: mapPosition,\n    1: setMapPosition\n  } = useState({\n    lat,\n    lng\n  });\n  const {\n    0: markerPosition,\n    1: setMarkerPosition\n  } = useState({\n    lat,\n    lng\n  });\n  const {\n    0: address,\n    1: setAddress\n  } = useState(null);\n  const {\n    0: address2,\n    1: setAddress2\n  } = useState(null);\n  const {\n    0: showCurrLocation,\n    1: setShowCurrentLocation\n  } = useState(false);\n  const globalContext = useContext(GlobalContext);\n  useEffect(() => {// setMapPosition({ lat , lng })\n    // setMarkerPosition({ lat , lng })\n    // Geocode.fromLatLng( lat , lng ).then(\n    // \tresponse => {\n    //         setAddress(response.results[0].formatted_address)\n    // \t},\n    // \terror => {\n    // \t\tconsole.error(error);\n    // \t}\n    // );\n  }, [lat, lng]);\n\n  const onInfoWindowClose = () => {};\n\n  const onCurrentLocation = () => {\n    if (!showCurrLocation) {\n      let temp;\n      globalContext.allDispatch({\n        type: LOADING_BAR_STATUS,\n        value: true\n      });\n      navigator.geolocation.getCurrentPosition(position => {\n        temp = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        Geocode.fromLatLng(temp.lat, temp.lng).then(response => {\n          setAddress(response.results[0].formatted_address);\n          setMapPosition(temp);\n          setMarkerPosition(temp);\n          globalContext.allDispatch({\n            type: LOADING_BAR_STATUS,\n            value: false\n          });\n        }, error => {\n          console.error(error);\n        });\n      });\n    } else {\n      setAddress(null);\n    }\n\n    setShowCurrentLocation(!showCurrLocation);\n  };\n\n  const onMarkerDragEnd = event => {\n    const newLat = event.latLng.lat();\n    const newLng = event.latLng.lng();\n    Geocode.fromLatLng(newLat, newLng).then(response => {\n      setAddress(response.results[0].formatted_address); // const address = response.results[0].formatted_address,\n      //       addressArray =  response.results[0].address_components\n\n      setMapPosition({\n        lat: newLat,\n        lng: newLng\n      });\n      setMarkerPosition({\n        lat: newLat,\n        lng: newLng\n      });\n    }, error => {\n      console.error(error);\n    });\n  };\n\n  const onPlaceSelected = place => {\n    console.log('plc', place);\n    const latValue = place.geometry.location.lat();\n    const lngValue = place.geometry.location.lng();\n    setAddress(place.formatted_address);\n    setMapPosition({\n      lat: latValue,\n      lng: lngValue\n    });\n    setMarkerPosition({\n      lat: latValue,\n      lng: lngValue\n    });\n  };\n\n  const onChangeAddress = e => {\n    setAddress(e.target.value);\n  };\n\n  const onChangeAddress2 = e => {\n    setAddress2(e.target.value);\n  };\n\n  const onAdd = () => {\n    globalContext.allDispatch({\n      type: LOADING_BAR_STATUS,\n      value: true\n    });\n\n    if (address) {\n      const tempVal = {\n        address1: address,\n        address2,\n        latitude: markerPosition.lat,\n        longitude: markerPosition.lng,\n        user_id: getCookie('user_id')\n      };\n      addAddress(tempVal).then(data => {\n        globalContext.allDispatch({\n          type: LOADING_BAR_STATUS,\n          value: false\n        });\n        const tempArr = globalContext.state.addressList;\n        tempArr.splice(0, 0, data.data);\n        console.log('Ginger mangita', data); // ADDRESS_LIST\n\n        globalContext.allDispatch({\n          type: ADDRESS_LIST,\n          value: tempArr\n        });\n        globalContext.allDispatch({\n          type: CLOSE_MAP,\n          value: false\n        });\n      });\n    }\n  };\n\n  const AsyncMap = withScriptjs(withGoogleMap(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n    defaultZoom: 15,\n    defaultCenter: {\n      lat: mapPosition.lat,\n      lng: mapPosition.lng\n    },\n    children: [/*#__PURE__*/_jsxDEV(InfoWindow, {\n      onClose: onInfoWindowClose,\n      position: {\n        lat: markerPosition.lat + 0.0018,\n        lng: markerPosition.lng\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            padding: 0,\n            margin: 0\n          },\n          children: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      name: \"Dolores park\",\n      draggable: true,\n      onDragEnd: onMarkerDragEnd,\n      position: {\n        lat: markerPosition.lat,\n        lng: markerPosition.lng\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(_Container, {\n      children: [/*#__PURE__*/_jsxDEV(_Box, {\n        className: classes.useCurrent,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          variant: \"body2\",\n          style: {\n            marginRight: 10,\n            marginBottom: 0\n          },\n          ffamily: \"Poppins\",\n          children: \"Use Current Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(_Switch, {\n          checked: showCurrLocation,\n          onChange: onCurrentLocation,\n          name: \"checkedA\",\n          inputProps: {\n            'aria-label': 'secondary checkbox'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(_Box, {\n        className: classes.autoCompWrapper,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          onPlaceSelected: onPlaceSelected,\n          className: classes.autoComplete,\n          types: ['(regions)'],\n          placeholder: address,\n          componentRestrictions: {\n            country: 'in'\n          },\n          disabled: showCurrLocation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(_Box, {\n        style: {\n          marginBottom: 15\n        },\n        children: /*#__PURE__*/_jsxDEV(_TextField, {\n          disabled: true,\n          id: \"outlined-basic\",\n          label: \"Address 1\",\n          variant: \"outlined\",\n          size: \"small\",\n          style: {\n            width: '100%'\n          },\n          value: address,\n          onChange: onChangeAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(_Box, {\n        style: {\n          marginBottom: 15\n        },\n        children: /*#__PURE__*/_jsxDEV(_TextField, {\n          id: \"outlined-multiline-static\",\n          label: \"Address 2\",\n          multiline: true,\n          rows: 2,\n          variant: \"outlined\",\n          style: {\n            width: '100%'\n          },\n          onChange: onChangeAddress2,\n          value: address2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(_Box, {\n        style: {\n          paddingBottom: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onAdd,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 7\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(AsyncMap, {\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: `100%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 23\n    }, this),\n    containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: `100%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 25\n    }, this),\n    mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: `30%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n};\n\nMyMapComponent.propTypes = {\n  lat: PropTypes.number,\n  lng: PropTypes.number,\n  // eslint-disable-next-line react/forb,id-prop-types\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(MyMapComponent);","map":{"version":3,"sources":["/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/map/index.js"],"names":["React","useEffect","useState","useContext","ReactDOM","compose","withProps","withStyles","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","Geocode","Autocomplete","PropTypes","Text","Button","getCookie","GlobalContext","LOADING_BAR_STATUS","CLOSE_MAP","ADDRESS_LIST","addAddress","setApiKey","enableDebug","styles","theme","root","autoComplete","width","padding","outline","border","borderRadius","autoCompWrapper","marginBottom","marginTop","useCurrent","display","alignItems","MyMapComponent","classes","lat","lng","mapPosition","setMapPosition","markerPosition","setMarkerPosition","address","setAddress","address2","setAddress2","showCurrLocation","setShowCurrentLocation","globalContext","onInfoWindowClose","onCurrentLocation","temp","allDispatch","type","value","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fromLatLng","then","response","results","formatted_address","error","console","onMarkerDragEnd","event","newLat","latLng","newLng","onPlaceSelected","place","log","latValue","geometry","location","lngValue","onChangeAddress","e","target","onChangeAddress2","onAdd","tempVal","address1","user_id","data","tempArr","state","addressList","splice","AsyncMap","props","margin","marginRight","country","paddingBottom","height","propTypes","number","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport { compose, withProps } from 'recompose';\nimport { Box, Container, Switch, TextField } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  withGoogleMap,\n  GoogleMap,\n  withScriptjs,\n  InfoWindow,\n  Marker,\n} from 'react-google-maps';\nimport Geocode from 'react-geocode';\nimport Autocomplete from 'react-google-autocomplete';\nimport PropTypes from 'prop-types';\nimport Text from '../text';\nimport Button from '../button';\nimport { getCookie } from '../../lib/utility/apiWrapper';\nimport { GlobalContext } from '../../../pages/_app';\nimport {\n  LOADING_BAR_STATUS,\n  CLOSE_MAP,\n  ADDRESS_LIST,\n} from '../../lib/utility/type';\nimport { addAddress } from '../../lib/services/address';\n\nGeocode.setApiKey('AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw');\nGeocode.enableDebug();\n\nconst styles = (theme) => ({\n  root: {},\n  autoComplete: {\n    // backgroundColor : \"red\",\n    width: '100%',\n    padding: 12,\n    '&:focus': {\n      outline: '1px solid transparent',\n      border: '2px solid #34A76C',\n      borderRadius: 5,\n    },\n  },\n  autoCompWrapper: {\n    marginBottom: 20,\n    marginTop: 20,\n  },\n  useCurrent: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n});\n\nconst MyMapComponent = ({ classes, lat, lng }) => {\n  const [mapPosition, setMapPosition] = useState({ lat, lng });\n  const [markerPosition, setMarkerPosition] = useState({ lat, lng });\n  const [address, setAddress] = useState(null);\n  const [address2, setAddress2] = useState(null);\n  const [showCurrLocation, setShowCurrentLocation] = useState(false);\n  const globalContext = useContext(GlobalContext);\n\n  useEffect(() => {\n    // setMapPosition({ lat , lng })\n    // setMarkerPosition({ lat , lng })\n    // Geocode.fromLatLng( lat , lng ).then(\n    // \tresponse => {\n    //         setAddress(response.results[0].formatted_address)\n    // \t},\n    // \terror => {\n    // \t\tconsole.error(error);\n    // \t}\n    // );\n  }, [lat, lng]);\n\n  const onInfoWindowClose = () => {};\n\n  const onCurrentLocation = () => {\n    if (!showCurrLocation) {\n      let temp;\n      globalContext.allDispatch({\n        type: LOADING_BAR_STATUS,\n        value: true,\n      });\n      navigator.geolocation.getCurrentPosition((position) => {\n        temp = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        };\n        Geocode.fromLatLng(temp.lat, temp.lng).then(\n          (response) => {\n            setAddress(response.results[0].formatted_address);\n            setMapPosition(temp);\n            setMarkerPosition(temp);\n            globalContext.allDispatch({\n              type: LOADING_BAR_STATUS,\n              value: false,\n            });\n          },\n          (error) => {\n            console.error(error);\n          },\n        );\n      });\n    } else {\n      setAddress(null);\n    }\n    setShowCurrentLocation(!showCurrLocation);\n  };\n\n  const onMarkerDragEnd = (event) => {\n    const newLat = event.latLng.lat();\n    const newLng = event.latLng.lng();\n\n    Geocode.fromLatLng(newLat, newLng).then(\n      (response) => {\n        setAddress(response.results[0].formatted_address);\n        // const address = response.results[0].formatted_address,\n        //       addressArray =  response.results[0].address_components\n        setMapPosition({ lat: newLat, lng: newLng });\n        setMarkerPosition({ lat: newLat, lng: newLng });\n      },\n      (error) => {\n        console.error(error);\n      },\n    );\n  };\n\n  const onPlaceSelected = (place) => {\n    console.log('plc', place);\n    const latValue = place.geometry.location.lat();\n    const lngValue = place.geometry.location.lng();\n    setAddress(place.formatted_address);\n    setMapPosition({ lat: latValue, lng: lngValue });\n    setMarkerPosition({ lat: latValue, lng: lngValue });\n  };\n\n  const onChangeAddress = (e) => {\n    setAddress(e.target.value);\n  };\n\n  const onChangeAddress2 = (e) => {\n    setAddress2(e.target.value);\n  };\n\n  const onAdd = () => {\n    globalContext.allDispatch({\n      type: LOADING_BAR_STATUS,\n      value: true,\n    });\n    if (address) {\n      const tempVal = {\n        address1: address,\n        address2,\n        latitude: markerPosition.lat,\n        longitude: markerPosition.lng,\n        user_id: getCookie('user_id'),\n      };\n      addAddress(tempVal).then((data) => {\n        globalContext.allDispatch({\n          type: LOADING_BAR_STATUS,\n          value: false,\n        });\n        const tempArr = globalContext.state.addressList;\n        tempArr.splice(0, 0, data.data);\n        console.log('Ginger mangita', data);\n        // ADDRESS_LIST\n        globalContext.allDispatch({\n          type: ADDRESS_LIST,\n          value: tempArr,\n        });\n        globalContext.allDispatch({\n          type: CLOSE_MAP,\n          value: false,\n        });\n      });\n    }\n  };\n  const AsyncMap = withScriptjs(\n    withGoogleMap((props) => (\n      <GoogleMap\n        defaultZoom={15}\n        defaultCenter={{ lat: mapPosition.lat, lng: mapPosition.lng }}\n      >\n        {/* InfoWindow on top of marker */}\n        <InfoWindow\n          onClose={onInfoWindowClose}\n          position={{\n            lat: markerPosition.lat + 0.0018,\n            lng: markerPosition.lng,\n          }}\n        >\n          <div>\n            <span style={{ padding: 0, margin: 0 }}>{address}</span>\n          </div>\n        </InfoWindow>\n        {/* Marker */}\n        <Marker\n          name=\"Dolores park\"\n          draggable\n          onDragEnd={onMarkerDragEnd}\n          position={{ lat: markerPosition.lat, lng: markerPosition.lng }}\n        />\n        <Marker />\n        {/* For Auto complete Search Box */}\n        <Container>\n          <Box className={classes.useCurrent}>\n            <Text\n              variant=\"body2\"\n              style={{ marginRight: 10, marginBottom: 0 }}\n              ffamily=\"Poppins\"\n            >\n              Use Current Location\n            </Text>\n            <Switch\n              checked={showCurrLocation}\n              onChange={onCurrentLocation}\n              name=\"checkedA\"\n              inputProps={{ 'aria-label': 'secondary checkbox' }}\n            />\n          </Box>\n          <Box className={classes.autoCompWrapper}>\n            <Autocomplete\n              onPlaceSelected={onPlaceSelected}\n              className={classes.autoComplete}\n              types={['(regions)']}\n              placeholder={address}\n              componentRestrictions={{ country: 'in' }}\n              disabled={showCurrLocation}\n            />\n          </Box>\n          <Box style={{ marginBottom: 15 }}>\n            <TextField\n              disabled\n              id=\"outlined-basic\"\n              label=\"Address 1\"\n              variant=\"outlined\"\n              size=\"small\"\n              style={{ width: '100%' }}\n              value={address}\n              onChange={onChangeAddress}\n            />\n          </Box>\n          <Box style={{ marginBottom: 15 }}>\n            <TextField\n              id=\"outlined-multiline-static\"\n              label=\"Address 2\"\n              multiline\n              rows={2}\n              variant=\"outlined\"\n              style={{ width: '100%' }}\n              onChange={onChangeAddress2}\n              value={address2}\n            />\n          </Box>\n          <Box style={{ paddingBottom: 20 }}>\n            <Button onClick={onAdd}>Add</Button>\n          </Box>\n        </Container>\n      </GoogleMap>\n    )),\n  );\n\n  return (\n    <AsyncMap\n      googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places\"\n      loadingElement={<div style={{ height: `100%` }} />}\n      containerElement={<div style={{ height: `100%` }} />}\n      mapElement={<div style={{ height: `30%` }} />}\n    />\n  );\n};\n\nMyMapComponent.propTypes = {\n  lat: PropTypes.number,\n  lng: PropTypes.number,\n  // eslint-disable-next-line react/forb,id-prop-types\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MyMapComponent);\n"]},"metadata":{},"sourceType":"module"}