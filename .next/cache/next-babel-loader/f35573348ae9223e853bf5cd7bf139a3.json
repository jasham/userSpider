{"ast":null,"code":"import _Container from \"@material-ui/core/Container\";\nimport _Box from \"@material-ui/core/Box\";\nimport _Switch from \"@material-ui/core/Switch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/map/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { compose, withProps } from \"recompose\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nimport PropTypes from 'prop-types';\nGeocode.setApiKey(\"AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw\");\nGeocode.enableDebug();\n\nconst styles = theme => ({\n  root: {},\n  autoComplete: {\n    // backgroundColor : \"red\",\n    width: \"100%\"\n  },\n  autoCompWrapper: {\n    marginBottom: 20,\n    marginTop: 20\n  },\n  useCurrent: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: 10\n  }\n});\n\nconst MyMapComponent = ({\n  classes,\n  lat,\n  lng\n}) => {\n  const {\n    0: mapPosition,\n    1: setMapPosition\n  } = useState({\n    lat,\n    lng\n  });\n  const {\n    0: markerPosition,\n    1: setMarkerPosition\n  } = useState({\n    lat,\n    lng\n  });\n  const {\n    0: address,\n    1: setAddress\n  } = useState(null);\n  const {\n    0: showCurrLocation,\n    1: setShowCurrentLocation\n  } = useState(false);\n  useEffect(() => {\n    console.log(\"Here is new location\", lat, lng);\n    setMapPosition({\n      lat,\n      lng\n    });\n    setMarkerPosition({\n      lat,\n      lng\n    });\n  }, [lat, lng]);\n\n  const onInfoWindowClose = () => {};\n\n  const onMarkerDragEnd = event => {\n    const newLat = event.latLng.lat();\n    const newLng = event.latLng.lng();\n    Geocode.fromLatLng(newLat, newLng).then(response => {\n      setAddress(response.results[0].formatted_address); // const address = response.results[0].formatted_address,\n      //       addressArray =  response.results[0].address_components\n\n      setMapPosition({\n        lat: newLat,\n        lng: newLng\n      });\n      setMarkerPosition({\n        lat: newLat,\n        lng: newLng\n      });\n    }, error => {\n      console.error(error);\n    });\n  };\n\n  const onPlaceSelected = place => {\n    console.log('plc', place);\n    const latValue = place.geometry.location.lat();\n    const lngValue = place.geometry.location.lng();\n    setAddress(place.formatted_address);\n    setMapPosition({\n      lat: latValue,\n      lng: lngValue\n    });\n    setMarkerPosition({\n      lat: latValue,\n      lng: lngValue\n    });\n  };\n\n  const onChangeAddress = e => {\n    console.log(\"Here is address\", e.target.value);\n    setAddress(e.target.value);\n  };\n\n  const AsyncMap = withScriptjs(withGoogleMap(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n    defaultZoom: 15,\n    defaultCenter: {\n      lat: mapPosition.lat,\n      lng: mapPosition.lng\n    },\n    children: [/*#__PURE__*/_jsxDEV(InfoWindow, {\n      onClose: onInfoWindowClose,\n      position: {\n        lat: markerPosition.lat + 0.0018,\n        lng: markerPosition.lng\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            padding: 0,\n            margin: 0\n          },\n          children: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      name: 'Dolores park',\n      draggable: true,\n      onDragEnd: onMarkerDragEnd,\n      position: {\n        lat: markerPosition.lat,\n        lng: markerPosition.lng\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(_Container, {\n      children: [/*#__PURE__*/_jsxDEV(_Box, {\n        className: classes.useCurrent,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          variant: \"body2\",\n          style: {\n            marginRight: 10,\n            marginBottom: 0\n          },\n          ffamily: \"Poppins\",\n          children: \"Use Current Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(_Switch, {\n          checked: showCurrLocation,\n          onChange: onCurrentLocation,\n          name: \"checkedA\",\n          inputProps: {\n            'aria-label': 'secondary checkbox'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(_Box, {\n        className: classes.autoCompWrapper,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          onPlaceSelected: onPlaceSelected,\n          className: classes.autoComplete,\n          types: ['(regions)'],\n          placeholder: address // componentRestrictions={{country: \"ru\"}}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 17\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(AsyncMap, {\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places`,\n    loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: `100%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this),\n    containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: `100%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this),\n    mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: `100%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}; //     compose(\n//   withProps({\n//     /**\n//      * Note: create and replace your own key in the Google console.\n//      * https://console.developers.google.com/apis/dashboard\n//      * The key \"AIzaSyBkNaAGLEVq0YLQMi-PYEMabFeREadYe1Q\" can be ONLY used in this sandbox (no forked).\n//      */\n//       googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places\",\n//     loadingElement: <div style={{ height: `100%` }} />,\n//     containerElement: <div style={{ height: `100%` }} />,\n//     mapElement: <div style={{ height: `100%` }} />,\n//   }),\n//   withScriptjs,\n//   withGoogleMap\n// )(props => (\n//   <GoogleMap defaultZoom={8} defaultCenter={{ lat: props.lat , lng: props.lng  }}>\n//     {props.isMarkerShown && (\n//       <Marker position={{ lat: props.lat , lng: props.lng  }} />\n//     )}\n//     {console.log(\"Here is lan\",props)}\n//   </GoogleMap>\n// ));\n\n\nMyMapComponent.propTypes = {\n  lat: PropTypes.number,\n  lng: PropTypes.number,\n  // eslint-disable-next-line react/forb,id-prop-types\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(MyMapComponent);","map":{"version":3,"sources":["/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/map/index.js"],"names":["React","useEffect","useState","ReactDOM","compose","withProps","withStyles","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","Geocode","Autocomplete","PropTypes","setApiKey","enableDebug","styles","theme","root","autoComplete","width","autoCompWrapper","marginBottom","marginTop","useCurrent","display","alignItems","MyMapComponent","classes","lat","lng","mapPosition","setMapPosition","markerPosition","setMarkerPosition","address","setAddress","showCurrLocation","setShowCurrentLocation","console","log","onInfoWindowClose","onMarkerDragEnd","event","newLat","latLng","newLng","fromLatLng","then","response","results","formatted_address","error","onPlaceSelected","place","latValue","geometry","location","lngValue","onChangeAddress","e","target","value","AsyncMap","props","padding","margin","marginRight","onCurrentLocation","height","propTypes","number","object","isRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,YAAnC,EAAiDC,UAAjD,EAA6DC,MAA7D,QAA2E,mBAA3E;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEAF,OAAO,CAACG,SAAR,CAAkB,yCAAlB;AACAH,OAAO,CAACI,WAAR;;AAGA,MAAMC,MAAM,GAAIC,KAAD,KAAY;AACvBC,EAAAA,IAAI,EAAG,EADgB;AAIvBC,EAAAA,YAAY,EAAG;AACX;AACAC,IAAAA,KAAK,EAAG;AAFG,GAJQ;AAQvBC,EAAAA,eAAe,EAAG;AACdC,IAAAA,YAAY,EAAG,EADD;AAEdC,IAAAA,SAAS,EAAG;AAFE,GARK;AAYvBC,EAAAA,UAAU,EAAG;AACTC,IAAAA,OAAO,EAAG,MADD;AAETC,IAAAA,UAAU,EAAG,QAFJ;AAGTJ,IAAAA,YAAY,EAAG;AAHN;AAZU,CAAZ,CAAf;;AAmBA,MAAMK,cAAc,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,GAAX;AAAgBC,EAAAA;AAAhB,CAAD,KAA2B;AAC9C,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgC/B,QAAQ,CAAC;AAAE4B,IAAAA,GAAF;AAAQC,IAAAA;AAAR,GAAD,CAA9C;AACA,QAAM;AAAA,OAACG,cAAD;AAAA,OAAiBC;AAAjB,MAAsCjC,QAAQ,CAAC;AAAE4B,IAAAA,GAAF;AAAQC,IAAAA;AAAR,GAAD,CAApD;AACA,QAAM;AAAA,OAACK,OAAD;AAAA,OAAUC;AAAV,MAAwBnC,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAA,OAACoC,gBAAD;AAAA,OAAmBC;AAAnB,MAA6CrC,QAAQ,CAAC,KAAD,CAA3D;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZuC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCX,GAAnC,EAAuCC,GAAvC;AACAE,IAAAA,cAAc,CAAC;AAAEH,MAAAA,GAAF;AAAQC,MAAAA;AAAR,KAAD,CAAd;AACAI,IAAAA,iBAAiB,CAAC;AAAEL,MAAAA,GAAF;AAAQC,MAAAA;AAAR,KAAD,CAAjB;AACH,GAJQ,EAIP,CAACD,GAAD,EAAKC,GAAL,CAJO,CAAT;;AAMA,QAAMW,iBAAiB,GAAG,MAAM,CAE/B,CAFD;;AAMA,QAAMC,eAAe,GAAKC,KAAF,IAAa;AACvC,UAAMC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAahB,GAAb,EAAf;AACG,UAAMiB,MAAM,GAAGH,KAAK,CAACE,MAAN,CAAaf,GAAb,EAAf;AAEHnB,IAAAA,OAAO,CAACoC,UAAR,CAAoBH,MAApB,EAA6BE,MAA7B,EAAsCE,IAAtC,CACCC,QAAQ,IAAI;AACCb,MAAAA,UAAU,CAACa,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBC,iBAArB,CAAV,CADD,CAEX;AACA;;AACgBnB,MAAAA,cAAc,CAAC;AAAEH,QAAAA,GAAG,EAAEe,MAAP;AAAed,QAAAA,GAAG,EAAEgB;AAApB,OAAD,CAAd;AACAZ,MAAAA,iBAAiB,CAAC;AAAEL,QAAAA,GAAG,EAAEe,MAAP;AAAed,QAAAA,GAAG,EAAEgB;AAApB,OAAD,CAAjB;AAChB,KAPF,EAQCM,KAAK,IAAI;AACRb,MAAAA,OAAO,CAACa,KAAR,CAAcA,KAAd;AACA,KAVF;AAYG,GAhBD;;AAkBA,QAAMC,eAAe,GAAKC,KAAF,IAAa;AACjCf,IAAAA,OAAO,CAACC,GAAR,CAAa,KAAb,EAAoBc,KAApB;AACA,UAAMC,QAAQ,GAAGD,KAAK,CAACE,QAAN,CAAeC,QAAf,CAAwB5B,GAAxB,EAAjB;AACN,UAAM6B,QAAQ,GAAGJ,KAAK,CAACE,QAAN,CAAeC,QAAf,CAAwB3B,GAAxB,EAAjB;AACMM,IAAAA,UAAU,CAACkB,KAAK,CAACH,iBAAP,CAAV;AACAnB,IAAAA,cAAc,CAAC;AAAEH,MAAAA,GAAG,EAAE0B,QAAP;AAAiBzB,MAAAA,GAAG,EAAE4B;AAAtB,KAAD,CAAd;AACAxB,IAAAA,iBAAiB,CAAC;AAAEL,MAAAA,GAAG,EAAE0B,QAAP;AAAiBzB,MAAAA,GAAG,EAAE4B;AAAtB,KAAD,CAAjB;AACH,GAPD;;AASA,QAAMC,eAAe,GAAIC,CAAD,IAAO;AAC3BrB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BoB,CAAC,CAACC,MAAF,CAASC,KAAvC;AACA1B,IAAAA,UAAU,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACH,GAHD;;AAIA,QAAMC,QAAQ,GAAGvD,YAAY,CACzBF,aAAa,CACT0D,KAAK,iBACD,QAAC,SAAD;AACI,IAAA,WAAW,EAAE,EADjB;AAEI,IAAA,aAAa,EAAE;AAAEnC,MAAAA,GAAG,EAAEE,WAAW,CAACF,GAAnB;AAAwBC,MAAAA,GAAG,EAAEC,WAAW,CAACD;AAAzC,KAFnB;AAAA,4BAKI,QAAC,UAAD;AACI,MAAA,OAAO,EAAEW,iBADb;AAEI,MAAA,QAAQ,EAAE;AAAEZ,QAAAA,GAAG,EAAII,cAAc,CAACJ,GAAf,GAAqB,MAA9B;AAAwCC,QAAAA,GAAG,EAAEG,cAAc,CAACH;AAA5D,OAFd;AAAA,6BAII;AAAA,+BACI;AAAM,UAAA,KAAK,EAAE;AAAEmC,YAAAA,OAAO,EAAE,CAAX;AAAcC,YAAAA,MAAM,EAAE;AAAtB,WAAb;AAAA,oBAA0C/B;AAA1C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YALJ,eAcI,QAAC,MAAD;AACI,MAAA,IAAI,EAAE,cADV;AAEI,MAAA,SAAS,EAAE,IAFf;AAGI,MAAA,SAAS,EAAGO,eAHhB;AAII,MAAA,QAAQ,EAAE;AAAEb,QAAAA,GAAG,EAAEI,cAAc,CAACJ,GAAtB;AAA2BC,QAAAA,GAAG,EAAEG,cAAc,CAACH;AAA/C;AAJd;AAAA;AAAA;AAAA;AAAA,YAdJ,eAoBI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YApBJ,eAsBI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEF,OAAO,CAACJ,UAAxB;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,OAAO,EAAC,OAAd;AAAsB,UAAA,KAAK,EAAE;AAAE2C,YAAAA,WAAW,EAAG,EAAhB;AAAoB7C,YAAAA,YAAY,EAAG;AAAnC,WAA7B;AAAoE,UAAA,OAAO,EAAC,SAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,OAAO,EAAEe,gBADb;AAEI,UAAA,QAAQ,EAAE+B,iBAFd;AAGI,UAAA,IAAI,EAAC,UAHT;AAII,UAAA,UAAU,EAAE;AAAE,0BAAc;AAAhB;AAJhB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAK,QAAA,SAAS,EAAExC,OAAO,CAACP,eAAxB;AAAA,+BACI,QAAC,YAAD;AACI,UAAA,eAAe,EAAEgC,eADrB;AAEI,UAAA,SAAS,EAAEzB,OAAO,CAACT,YAFvB;AAGI,UAAA,KAAK,EAAE,CAAC,WAAD,CAHX;AAII,UAAA,WAAW,EAAEgB,OAJjB,CAKI;;AALJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFK,CADY,CAA7B;AAkDA,sBACA,QAAC,QAAD;AACI,IAAA,YAAY,EAAG,+HADnB;AAEI,IAAA,cAAc,eACV;AAAK,MAAA,KAAK,EAAE;AAAEkC,QAAAA,MAAM,EAAG;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA,YAHR;AAKI,IAAA,gBAAgB,eACZ;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAG;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA,YANR;AAQI,IAAA,UAAU,eACN;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAG;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA;AATR;AAAA;AAAA;AAAA;AAAA,UADA;AAeH,CAlHD,C,CAmHA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA1C,cAAc,CAAC2C,SAAf,GAA2B;AACvBzC,EAAAA,GAAG,EAAGhB,SAAS,CAAC0D,MADO;AAEvBzC,EAAAA,GAAG,EAAGjB,SAAS,CAAC0D,MAFO;AAG1B;AACA3C,EAAAA,OAAO,EAAEf,SAAS,CAAC2D,MAAV,CAAiBC;AAJA,CAA3B;AAOA,eAAepE,UAAU,CAACW,MAAD,CAAV,CAAmBW,cAAnB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { compose, withProps } from \"recompose\";\nimport { Box, Container, Switch } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nimport PropTypes from 'prop-types'\n\nGeocode.setApiKey(\"AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw\");\nGeocode.enableDebug();\n\n\nconst styles = (theme) => ({\n    root : {\n\n    },\n    autoComplete : {\n        // backgroundColor : \"red\",\n        width : \"100%\"\n    },\n    autoCompWrapper : {\n        marginBottom : 20,\n        marginTop : 20\n    },\n    useCurrent : {\n        display : \"flex\",\n        alignItems : \"center\",\n        marginBottom : 10\n    },\n})\n\nconst MyMapComponent = ({ classes, lat, lng }) => {\n    const [mapPosition, setMapPosition] = useState({ lat , lng })\n    const [markerPosition, setMarkerPosition] = useState({ lat , lng })\n    const [address, setAddress] = useState(null)\n    const [showCurrLocation, setShowCurrentLocation] = useState(false)\n\n    useEffect(() => {\n        console.log(\"Here is new location\",lat,lng)\n        setMapPosition({ lat , lng })\n        setMarkerPosition({ lat , lng })\n    },[lat,lng])\n    \n    const onInfoWindowClose = () => {\n\n    }\n\n    \n\n    const onMarkerDragEnd = ( event ) => {\n\t\tconst newLat = event.latLng.lat()\n\t    const newLng = event.latLng.lng()\n\n\t\tGeocode.fromLatLng( newLat , newLng ).then(\n\t\t\tresponse => {\n                setAddress(response.results[0].formatted_address)\n\t\t\t\t// const address = response.results[0].formatted_address,\n\t\t\t\t//       addressArray =  response.results[0].address_components\n                    setMapPosition({ lat: newLat, lng: newLng})\n                    setMarkerPosition({ lat: newLat, lng: newLng})\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t);\n    };\n    \n    const onPlaceSelected = ( place ) => {\n        console.log( 'plc', place )\n        const latValue = place.geometry.location.lat()\n\t\tconst lngValue = place.geometry.location.lng()\n        setAddress(place.formatted_address)\n        setMapPosition({ lat: latValue, lng: lngValue})\n        setMarkerPosition({ lat: latValue, lng: lngValue})\n    }\n    \n    const onChangeAddress = (e) => {\n        console.log(\"Here is address\",e.target.value)\n        setAddress(e.target.value)\n    }\n    const AsyncMap = withScriptjs(\n        withGoogleMap(\n            props => (\n                <GoogleMap \n                    defaultZoom={15}\n                    defaultCenter={{ lat: mapPosition.lat, lng: mapPosition.lng }}\n                >\n                    {/* InfoWindow on top of marker */}\n                    <InfoWindow\n                        onClose={onInfoWindowClose}\n                        position={{ lat: ( markerPosition.lat + 0.0018 ), lng: markerPosition.lng }}\n                    >\n                        <div>\n                            <span style={{ padding: 0, margin: 0 }}>{ address }</span>\n                        </div>\n                    </InfoWindow>\n                    {/*Marker*/}\n                    <Marker \n                        name={'Dolores park'}\n                        draggable={true}\n                        onDragEnd={ onMarkerDragEnd }\n                        position={{ lat: markerPosition.lat, lng: markerPosition.lng }}\n                    />\n                    <Marker />\n                    {/* For Auto complete Search Box */}\n                    <Container>\n                        <Box className={classes.useCurrent}>\n                            <Text variant=\"body2\" style={{ marginRight : 10, marginBottom : 0}} ffamily=\"Poppins\">Use Current Location</Text>\n                            <Switch\n                                checked={showCurrLocation}\n                                onChange={onCurrentLocation}\n                                name=\"checkedA\"\n                                inputProps={{ 'aria-label': 'secondary checkbox' }}\n                            />\n                        </Box>\n                        <Box className={classes.autoCompWrapper}>\n                            <Autocomplete\n                                onPlaceSelected={onPlaceSelected}\n                                className={classes.autoComplete}\n                                types={['(regions)']}\n                                placeholder={address}\n                                // componentRestrictions={{country: \"ru\"}}\n                                /> \n                        </Box>\n                    </Container>\n                </GoogleMap>\n            )\n        )\n    )\n\n    return (\n    <AsyncMap\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places`}\n        loadingElement={\n            <div style={{ height: `100%` }} />\n        }\n        containerElement={\n            <div style={{ height: `100%` }} />\n        }\n        mapElement={\n            <div style={{ height: `100%` }} />\n        }\n        />\n        )\n    \n}\n//     compose(\n//   withProps({\n//     /**\n//      * Note: create and replace your own key in the Google console.\n//      * https://console.developers.google.com/apis/dashboard\n//      * The key \"AIzaSyBkNaAGLEVq0YLQMi-PYEMabFeREadYe1Q\" can be ONLY used in this sandbox (no forked).\n//      */\n    \n//       googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places\",\n//     loadingElement: <div style={{ height: `100%` }} />,\n//     containerElement: <div style={{ height: `100%` }} />,\n//     mapElement: <div style={{ height: `100%` }} />,\n\n//   }),\n//   withScriptjs,\n//   withGoogleMap\n// )(props => (\n//   <GoogleMap defaultZoom={8} defaultCenter={{ lat: props.lat , lng: props.lng  }}>\n//     {props.isMarkerShown && (\n//       <Marker position={{ lat: props.lat , lng: props.lng  }} />\n//     )}\n//     {console.log(\"Here is lan\",props)}\n//   </GoogleMap>\n// ));\n\nMyMapComponent.propTypes = {\n    lat : PropTypes.number,\n    lng : PropTypes.number,\n // eslint-disable-next-line react/forb,id-prop-types\n classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(MyMapComponent)\n"]},"metadata":{},"sourceType":"module"}