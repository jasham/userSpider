{"ast":null,"code":"import _Box from \"@material-ui/core/Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/map/index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { compose, withProps } from \"recompose\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nGeocode.setApiKey(\"AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw\");\nGeocode.enableDebug();\nconst styles = tj;\n\nconst MyMapComponent = ({\n  classes\n}) => {\n  const {\n    0: mapPosition,\n    1: setMapPosition\n  } = useState({\n    lat: 12.9716,\n    lng: 77.5946\n  });\n  const {\n    0: markerPosition,\n    1: setMarkerPosition\n  } = useState({\n    lat: 12.9716,\n    lng: 77.5946\n  });\n  const {\n    0: address,\n    1: setAddress\n  } = useState(null);\n\n  const onInfoWindowClose = () => {};\n\n  const onMarkerDragEnd = event => {\n    const newLat = event.latLng.lat();\n    const newLng = event.latLng.lng();\n    Geocode.fromLatLng(newLat, newLng).then(response => {\n      setAddress(response.results[0].formatted_address); // const address = response.results[0].formatted_address,\n      //       addressArray =  response.results[0].address_components\n\n      setMapPosition({\n        lat: newLat,\n        lng: newLng\n      });\n      setMarkerPosition({\n        lat: newLat,\n        lng: newLng\n      });\n    }, error => {\n      console.error(error);\n    });\n  };\n\n  const onPlaceSelected = place => {\n    console.log('plc', place);\n    const latValue = place.geometry.location.lat();\n    const lngValue = place.geometry.location.lng();\n    setAddress(place.formatted_address);\n    setMapPosition({\n      lat: latValue,\n      lng: lngValue\n    });\n    setMarkerPosition({\n      lat: latValue,\n      lng: lngValue\n    });\n  };\n\n  const AsyncMap = withScriptjs(withGoogleMap(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n    defaultZoom: 15,\n    defaultCenter: {\n      lat: mapPosition.lat,\n      lng: mapPosition.lng\n    },\n    children: [/*#__PURE__*/_jsxDEV(InfoWindow, {\n      onClose: onInfoWindowClose,\n      position: {\n        lat: markerPosition.lat + 0.0018,\n        lng: markerPosition.lng\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            padding: 0,\n            margin: 0\n          },\n          children: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      name: 'Dolores park',\n      draggable: true,\n      onDragEnd: onMarkerDragEnd,\n      position: {\n        lat: markerPosition.lat,\n        lng: markerPosition.lng\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(_Box, {\n      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n        style: {\n          width: '90%'\n        },\n        onPlaceSelected: place => {\n          console.log(place);\n        },\n        types: ['(regions)'] // componentRestrictions={{country: \"ru\"}}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 17\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(AsyncMap, {\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places`,\n    loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: `100%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this),\n    containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: `100%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this),\n    mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: `100%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 13\n  }, this);\n}; //     compose(\n//   withProps({\n//     /**\n//      * Note: create and replace your own key in the Google console.\n//      * https://console.developers.google.com/apis/dashboard\n//      * The key \"AIzaSyBkNaAGLEVq0YLQMi-PYEMabFeREadYe1Q\" can be ONLY used in this sandbox (no forked).\n//      */\n//       googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places\",\n//     loadingElement: <div style={{ height: `100%` }} />,\n//     containerElement: <div style={{ height: `100%` }} />,\n//     mapElement: <div style={{ height: `100%` }} />,\n//   }),\n//   withScriptjs,\n//   withGoogleMap\n// )(props => (\n//   <GoogleMap defaultZoom={8} defaultCenter={{ lat: props.lat , lng: props.lng  }}>\n//     {props.isMarkerShown && (\n//       <Marker position={{ lat: props.lat , lng: props.lng  }} />\n//     )}\n//     {console.log(\"Here is lan\",props)}\n//   </GoogleMap>\n// ));\n\n\nexport default withStyles(styles)(MyMapComponent);","map":{"version":3,"sources":["/Users/apple/Desktop/mydir/projects/personal/spidy/fe_2/spidy_fe/app/components/map/index.js"],"names":["React","useState","ReactDOM","compose","withProps","withStyles","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","Geocode","Autocomplete","setApiKey","enableDebug","styles","tj","MyMapComponent","classes","mapPosition","setMapPosition","lat","lng","markerPosition","setMarkerPosition","address","setAddress","onInfoWindowClose","onMarkerDragEnd","event","newLat","latLng","newLng","fromLatLng","then","response","results","formatted_address","error","console","onPlaceSelected","place","log","latValue","geometry","location","lngValue","AsyncMap","props","padding","margin","width","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { compose, withProps } from \"recompose\";\nimport { Box} from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\n\nGeocode.setApiKey(\"AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw\");\nGeocode.enableDebug();\n\n\nconst styles = (tj)\n\nconst MyMapComponent = ({ classes }) => {\n    const [mapPosition, setMapPosition] = useState({ lat : 12.9716, lng : 77.5946 })\n    const [markerPosition, setMarkerPosition] = useState({ lat : 12.9716, lng : 77.5946 })\n    const [address, setAddress] = useState(null)\n\n    const onInfoWindowClose = () => {\n\n    }\n\n    const onMarkerDragEnd = ( event ) => {\n\t\tconst newLat = event.latLng.lat()\n\t    const newLng = event.latLng.lng()\n\n\t\tGeocode.fromLatLng( newLat , newLng ).then(\n\t\t\tresponse => {\n                setAddress(response.results[0].formatted_address)\n\t\t\t\t// const address = response.results[0].formatted_address,\n\t\t\t\t//       addressArray =  response.results[0].address_components\n                    setMapPosition({ lat: newLat, lng: newLng})\n                    setMarkerPosition({ lat: newLat, lng: newLng})\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t);\n    };\n    \n    const onPlaceSelected = ( place ) => {\n        console.log( 'plc', place )\n        const latValue = place.geometry.location.lat()\n\t\tconst lngValue = place.geometry.location.lng()\n        setAddress(place.formatted_address)\n        setMapPosition({ lat: latValue, lng: lngValue})\n        setMarkerPosition({ lat: latValue, lng: lngValue})\n    }\n    \n    const AsyncMap = withScriptjs(\n        withGoogleMap(\n            props => (\n                <GoogleMap \n                    defaultZoom={15}\n                    defaultCenter={{ lat: mapPosition.lat, lng: mapPosition.lng }}\n                >\n                    {/* InfoWindow on top of marker */}\n                    <InfoWindow\n                        onClose={onInfoWindowClose}\n                        position={{ lat: ( markerPosition.lat + 0.0018 ), lng: markerPosition.lng }}\n                    >\n                        <div>\n                            <span style={{ padding: 0, margin: 0 }}>{ address }</span>\n                        </div>\n                    </InfoWindow>\n                    {/*Marker*/}\n                    <Marker \n                        name={'Dolores park'}\n                        draggable={true}\n                        onDragEnd={ onMarkerDragEnd }\n                        position={{ lat: markerPosition.lat, lng: markerPosition.lng }}\n                    />\n                    <Marker />\n                    {/* For Auto complete Search Box */}\n                    <Box>\n\n                    <Autocomplete\n                        style={{width: '90%'}}\n                        onPlaceSelected={(place) => {\n                            console.log(place);\n                        }}\n                        \n                        types={['(regions)']}\n                        // componentRestrictions={{country: \"ru\"}}\n                        /> \n                        </Box>\n                </GoogleMap>\n            )\n        )\n    )\n\n    return (<AsyncMap\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places`}\n        loadingElement={\n            <div style={{ height: `100%` }} />\n        }\n        containerElement={\n            <div style={{ height: `100%` }} />\n        }\n        mapElement={\n            <div style={{ height: `100%` }} />\n        }\n    />)\n    \n}\n//     compose(\n//   withProps({\n//     /**\n//      * Note: create and replace your own key in the Google console.\n//      * https://console.developers.google.com/apis/dashboard\n//      * The key \"AIzaSyBkNaAGLEVq0YLQMi-PYEMabFeREadYe1Q\" can be ONLY used in this sandbox (no forked).\n//      */\n    \n//       googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAKXtMAv24joUs0vMvYdOOXIuewWebbCyw&v=3.exp&libraries=geometry,drawing,places\",\n//     loadingElement: <div style={{ height: `100%` }} />,\n//     containerElement: <div style={{ height: `100%` }} />,\n//     mapElement: <div style={{ height: `100%` }} />,\n\n//   }),\n//   withScriptjs,\n//   withGoogleMap\n// )(props => (\n//   <GoogleMap defaultZoom={8} defaultCenter={{ lat: props.lat , lng: props.lng  }}>\n//     {props.isMarkerShown && (\n//       <Marker position={{ lat: props.lat , lng: props.lng  }} />\n//     )}\n//     {console.log(\"Here is lan\",props)}\n//   </GoogleMap>\n// ));\n\nexport default withStyles(styles)(MyMapComponent)\n"]},"metadata":{},"sourceType":"module"}